
Stack_MSP_PSP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001284  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000008c  08001454  08001454  00002454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014e0  080014e0  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  080014e0  080014e0  000024e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080014e8  080014e8  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014e8  080014e8  000024e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080014ec  080014ec  000024ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080014f0  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  0800154c  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  0800154c  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a06  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003ba  00000000  00000000  00003a8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00003e48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000dc  00000000  00000000  00003f88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002ce8  00000000  00000000  00004064  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014ba  00000000  00000000  00006d4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000988d  00000000  00000000  00008206  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011a93  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bdc  00000000  00000000  00011ad8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000050  00000000  00000000  000126b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800143c 	.word	0x0800143c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	0800143c 	.word	0x0800143c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <change_sp_to_psp>:
	return a+b+c+d;
}

__attribute__((naked)) void change_sp_to_psp(void)
{
    __asm volatile (
 80002b0:	4805      	ldr	r0, [pc, #20]	@ (80002c8 <change_sp_to_psp+0x18>)
 80002b2:	f380 8809 	msr	PSP, r0
 80002b6:	f04f 0002 	mov.w	r0, #2
 80002ba:	f380 8814 	msr	CONTROL, r0
 80002be:	f3bf 8f6f 	isb	sy
 80002c2:	4770      	bx	lr
        "MOV R0, #0x02\n"        // Set CONTROL register to use PSP
        "MSR CONTROL, R0\n"
        "ISB\n"                  // Instruction Synchronization Barrier
        "BX LR\n"
    );
}
 80002c4:	bf00      	nop
 80002c6:	0000      	.short	0x0000
 80002c8:	2001ff80 	.word	0x2001ff80

080002cc <print_SP_register_values>:

void print_SP_register_values(void)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b088      	sub	sp, #32
 80002d0:	af02      	add	r7, sp, #8
	uint32_t msp, psp, current_sp, control,lr;

	// Read MSP (Main Stack Pointer)
	__asm volatile ("MRS %0, MSP" : "=r"(msp));
 80002d2:	f3ef 8308 	mrs	r3, MSP
 80002d6:	617b      	str	r3, [r7, #20]

	// Read PSP (Process Stack Pointer)
	__asm volatile ("MRS %0, PSP" : "=r"(psp));
 80002d8:	f3ef 8309 	mrs	r3, PSP
 80002dc:	613b      	str	r3, [r7, #16]

	// Read the current SP (Stack Pointer)
	__asm volatile ("MOV %0, SP" : "=r"(current_sp));
 80002de:	466b      	mov	r3, sp
 80002e0:	60fb      	str	r3, [r7, #12]

	// Read CONTROL register to check which SP is in use
	__asm volatile ("MRS %0, CONTROL" : "=r"(control));
 80002e2:	f3ef 8314 	mrs	r3, CONTROL
 80002e6:	60bb      	str	r3, [r7, #8]

	// Link Register (Return Address)
	__asm volatile ("MOV %0, LR" : "=r"(lr));
 80002e8:	4673      	mov	r3, lr
 80002ea:	607b      	str	r3, [r7, #4]

	// Print the values
	printf("MSP = 0x%08X, PSP = 0x%08X, SP = 0x%08X, CONTROL = 0x%08X, LR = 0x%08X\n",
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	9301      	str	r3, [sp, #4]
 80002f0:	68bb      	ldr	r3, [r7, #8]
 80002f2:	9300      	str	r3, [sp, #0]
 80002f4:	68fb      	ldr	r3, [r7, #12]
 80002f6:	693a      	ldr	r2, [r7, #16]
 80002f8:	6979      	ldr	r1, [r7, #20]
 80002fa:	4803      	ldr	r0, [pc, #12]	@ (8000308 <print_SP_register_values+0x3c>)
 80002fc:	f000 f9d8 	bl	80006b0 <iprintf>
	           msp, psp, current_sp, control, lr);
}
 8000300:	bf00      	nop
 8000302:	3718      	adds	r7, #24
 8000304:	46bd      	mov	sp, r7
 8000306:	bd80      	pop	{r7, pc}
 8000308:	08001454 	.word	0x08001454

0800030c <generate_execption>:

void generate_execption(void)
{
 800030c:	b480      	push	{r7}
 800030e:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0X2");
 8000310:	df02      	svc	2
}
 8000312:	bf00      	nop
 8000314:	46bd      	mov	sp, r7
 8000316:	bc80      	pop	{r7}
 8000318:	4770      	bx	lr

0800031a <main>:


int main(void)
{
 800031a:	b580      	push	{r7, lr}
 800031c:	af00      	add	r7, sp, #0

	print_SP_register_values();
 800031e:	f7ff ffd5 	bl	80002cc <print_SP_register_values>

	change_sp_to_psp();
 8000322:	f7ff ffc5 	bl	80002b0 <change_sp_to_psp>

	print_SP_register_values();
 8000326:	f7ff ffd1 	bl	80002cc <print_SP_register_values>

    generate_execption();
 800032a:	f7ff ffef 	bl	800030c <generate_execption>

	for(;;);
 800032e:	bf00      	nop
 8000330:	e7fd      	b.n	800032e <main+0x14>
	...

08000334 <SVC_Handler>:
}


void SVC_Handler()
{
 8000334:	b580      	push	{r7, lr}
 8000336:	af00      	add	r7, sp, #0
    print_SP_register_values();
 8000338:	f7ff ffc8 	bl	80002cc <print_SP_register_values>
    printf("in SVC handler\n");
 800033c:	4802      	ldr	r0, [pc, #8]	@ (8000348 <SVC_Handler+0x14>)
 800033e:	f000 fa1f 	bl	8000780 <puts>

    __asm volatile ("BX LR");  // Ensure correct return from exception
 8000342:	4770      	bx	lr
}
 8000344:	bf00      	nop
 8000346:	bd80      	pop	{r7, pc}
 8000348:	0800149c 	.word	0x0800149c

0800034c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800034c:	b480      	push	{r7}
 800034e:	b083      	sub	sp, #12
 8000350:	af00      	add	r7, sp, #0
 8000352:	4603      	mov	r3, r0
 8000354:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000356:	4b0e      	ldr	r3, [pc, #56]	@ (8000390 <ITM_SendChar+0x44>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	4a0d      	ldr	r2, [pc, #52]	@ (8000390 <ITM_SendChar+0x44>)
 800035c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000360:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000362:	4b0c      	ldr	r3, [pc, #48]	@ (8000394 <ITM_SendChar+0x48>)
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	4a0b      	ldr	r2, [pc, #44]	@ (8000394 <ITM_SendChar+0x48>)
 8000368:	f043 0301 	orr.w	r3, r3, #1
 800036c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800036e:	bf00      	nop
 8000370:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	f003 0301 	and.w	r3, r3, #1
 800037a:	2b00      	cmp	r3, #0
 800037c:	d0f8      	beq.n	8000370 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800037e:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000382:	79fb      	ldrb	r3, [r7, #7]
 8000384:	6013      	str	r3, [r2, #0]
}
 8000386:	bf00      	nop
 8000388:	370c      	adds	r7, #12
 800038a:	46bd      	mov	sp, r7
 800038c:	bc80      	pop	{r7}
 800038e:	4770      	bx	lr
 8000390:	e000edfc 	.word	0xe000edfc
 8000394:	e0000e00 	.word	0xe0000e00

08000398 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000398:	b580      	push	{r7, lr}
 800039a:	b086      	sub	sp, #24
 800039c:	af00      	add	r7, sp, #0
 800039e:	60f8      	str	r0, [r7, #12]
 80003a0:	60b9      	str	r1, [r7, #8]
 80003a2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a4:	2300      	movs	r3, #0
 80003a6:	617b      	str	r3, [r7, #20]
 80003a8:	e00a      	b.n	80003c0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003aa:	f3af 8000 	nop.w
 80003ae:	4601      	mov	r1, r0
 80003b0:	68bb      	ldr	r3, [r7, #8]
 80003b2:	1c5a      	adds	r2, r3, #1
 80003b4:	60ba      	str	r2, [r7, #8]
 80003b6:	b2ca      	uxtb	r2, r1
 80003b8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ba:	697b      	ldr	r3, [r7, #20]
 80003bc:	3301      	adds	r3, #1
 80003be:	617b      	str	r3, [r7, #20]
 80003c0:	697a      	ldr	r2, [r7, #20]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	429a      	cmp	r2, r3
 80003c6:	dbf0      	blt.n	80003aa <_read+0x12>
  }

  return len;
 80003c8:	687b      	ldr	r3, [r7, #4]
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	3718      	adds	r7, #24
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bd80      	pop	{r7, pc}

080003d2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003d2:	b580      	push	{r7, lr}
 80003d4:	b086      	sub	sp, #24
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	60f8      	str	r0, [r7, #12]
 80003da:	60b9      	str	r1, [r7, #8]
 80003dc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003de:	2300      	movs	r3, #0
 80003e0:	617b      	str	r3, [r7, #20]
 80003e2:	e009      	b.n	80003f8 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80003e4:	68bb      	ldr	r3, [r7, #8]
 80003e6:	1c5a      	adds	r2, r3, #1
 80003e8:	60ba      	str	r2, [r7, #8]
 80003ea:	781b      	ldrb	r3, [r3, #0]
 80003ec:	4618      	mov	r0, r3
 80003ee:	f7ff ffad 	bl	800034c <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f2:	697b      	ldr	r3, [r7, #20]
 80003f4:	3301      	adds	r3, #1
 80003f6:	617b      	str	r3, [r7, #20]
 80003f8:	697a      	ldr	r2, [r7, #20]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	429a      	cmp	r2, r3
 80003fe:	dbf1      	blt.n	80003e4 <_write+0x12>
  }
  return len;
 8000400:	687b      	ldr	r3, [r7, #4]
}
 8000402:	4618      	mov	r0, r3
 8000404:	3718      	adds	r7, #24
 8000406:	46bd      	mov	sp, r7
 8000408:	bd80      	pop	{r7, pc}

0800040a <_close>:

int _close(int file)
{
 800040a:	b480      	push	{r7}
 800040c:	b083      	sub	sp, #12
 800040e:	af00      	add	r7, sp, #0
 8000410:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000412:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000416:	4618      	mov	r0, r3
 8000418:	370c      	adds	r7, #12
 800041a:	46bd      	mov	sp, r7
 800041c:	bc80      	pop	{r7}
 800041e:	4770      	bx	lr

08000420 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000420:	b480      	push	{r7}
 8000422:	b083      	sub	sp, #12
 8000424:	af00      	add	r7, sp, #0
 8000426:	6078      	str	r0, [r7, #4]
 8000428:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800042a:	683b      	ldr	r3, [r7, #0]
 800042c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000430:	605a      	str	r2, [r3, #4]
  return 0;
 8000432:	2300      	movs	r3, #0
}
 8000434:	4618      	mov	r0, r3
 8000436:	370c      	adds	r7, #12
 8000438:	46bd      	mov	sp, r7
 800043a:	bc80      	pop	{r7}
 800043c:	4770      	bx	lr

0800043e <_isatty>:

int _isatty(int file)
{
 800043e:	b480      	push	{r7}
 8000440:	b083      	sub	sp, #12
 8000442:	af00      	add	r7, sp, #0
 8000444:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000446:	2301      	movs	r3, #1
}
 8000448:	4618      	mov	r0, r3
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	bc80      	pop	{r7}
 8000450:	4770      	bx	lr

08000452 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000452:	b480      	push	{r7}
 8000454:	b085      	sub	sp, #20
 8000456:	af00      	add	r7, sp, #0
 8000458:	60f8      	str	r0, [r7, #12]
 800045a:	60b9      	str	r1, [r7, #8]
 800045c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800045e:	2300      	movs	r3, #0
}
 8000460:	4618      	mov	r0, r3
 8000462:	3714      	adds	r7, #20
 8000464:	46bd      	mov	sp, r7
 8000466:	bc80      	pop	{r7}
 8000468:	4770      	bx	lr
	...

0800046c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b086      	sub	sp, #24
 8000470:	af00      	add	r7, sp, #0
 8000472:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000474:	4a14      	ldr	r2, [pc, #80]	@ (80004c8 <_sbrk+0x5c>)
 8000476:	4b15      	ldr	r3, [pc, #84]	@ (80004cc <_sbrk+0x60>)
 8000478:	1ad3      	subs	r3, r2, r3
 800047a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800047c:	697b      	ldr	r3, [r7, #20]
 800047e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000480:	4b13      	ldr	r3, [pc, #76]	@ (80004d0 <_sbrk+0x64>)
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	2b00      	cmp	r3, #0
 8000486:	d102      	bne.n	800048e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000488:	4b11      	ldr	r3, [pc, #68]	@ (80004d0 <_sbrk+0x64>)
 800048a:	4a12      	ldr	r2, [pc, #72]	@ (80004d4 <_sbrk+0x68>)
 800048c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800048e:	4b10      	ldr	r3, [pc, #64]	@ (80004d0 <_sbrk+0x64>)
 8000490:	681a      	ldr	r2, [r3, #0]
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	4413      	add	r3, r2
 8000496:	693a      	ldr	r2, [r7, #16]
 8000498:	429a      	cmp	r2, r3
 800049a:	d207      	bcs.n	80004ac <_sbrk+0x40>
  {
    errno = ENOMEM;
 800049c:	f000 fa9e 	bl	80009dc <__errno>
 80004a0:	4603      	mov	r3, r0
 80004a2:	220c      	movs	r2, #12
 80004a4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004a6:	f04f 33ff 	mov.w	r3, #4294967295
 80004aa:	e009      	b.n	80004c0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004ac:	4b08      	ldr	r3, [pc, #32]	@ (80004d0 <_sbrk+0x64>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004b2:	4b07      	ldr	r3, [pc, #28]	@ (80004d0 <_sbrk+0x64>)
 80004b4:	681a      	ldr	r2, [r3, #0]
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	4413      	add	r3, r2
 80004ba:	4a05      	ldr	r2, [pc, #20]	@ (80004d0 <_sbrk+0x64>)
 80004bc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004be:	68fb      	ldr	r3, [r7, #12]
}
 80004c0:	4618      	mov	r0, r3
 80004c2:	3718      	adds	r7, #24
 80004c4:	46bd      	mov	sp, r7
 80004c6:	bd80      	pop	{r7, pc}
 80004c8:	20020000 	.word	0x20020000
 80004cc:	00000400 	.word	0x00000400
 80004d0:	20000078 	.word	0x20000078
 80004d4:	200001c8 	.word	0x200001c8

080004d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004d8:	480d      	ldr	r0, [pc, #52]	@ (8000510 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004da:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004e0:	480c      	ldr	r0, [pc, #48]	@ (8000514 <LoopForever+0x6>)
  ldr r1, =_edata
 80004e2:	490d      	ldr	r1, [pc, #52]	@ (8000518 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004e4:	4a0d      	ldr	r2, [pc, #52]	@ (800051c <LoopForever+0xe>)
  movs r3, #0
 80004e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004e8:	e002      	b.n	80004f0 <LoopCopyDataInit>

080004ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ee:	3304      	adds	r3, #4

080004f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004f4:	d3f9      	bcc.n	80004ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004f6:	4a0a      	ldr	r2, [pc, #40]	@ (8000520 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004f8:	4c0a      	ldr	r4, [pc, #40]	@ (8000524 <LoopForever+0x16>)
  movs r3, #0
 80004fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004fc:	e001      	b.n	8000502 <LoopFillZerobss>

080004fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000500:	3204      	adds	r2, #4

08000502 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000502:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000504:	d3fb      	bcc.n	80004fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000506:	f000 fa6f 	bl	80009e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800050a:	f7ff ff06 	bl	800031a <main>

0800050e <LoopForever>:

LoopForever:
  b LoopForever
 800050e:	e7fe      	b.n	800050e <LoopForever>
  ldr   r0, =_estack
 8000510:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000514:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000518:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800051c:	080014f0 	.word	0x080014f0
  ldr r2, =_sbss
 8000520:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000524:	200001c8 	.word	0x200001c8

08000528 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000528:	e7fe      	b.n	8000528 <ADC_IRQHandler>
	...

0800052c <std>:
 800052c:	2300      	movs	r3, #0
 800052e:	b510      	push	{r4, lr}
 8000530:	4604      	mov	r4, r0
 8000532:	e9c0 3300 	strd	r3, r3, [r0]
 8000536:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800053a:	6083      	str	r3, [r0, #8]
 800053c:	8181      	strh	r1, [r0, #12]
 800053e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000540:	81c2      	strh	r2, [r0, #14]
 8000542:	6183      	str	r3, [r0, #24]
 8000544:	4619      	mov	r1, r3
 8000546:	2208      	movs	r2, #8
 8000548:	305c      	adds	r0, #92	@ 0x5c
 800054a:	f000 f9f9 	bl	8000940 <memset>
 800054e:	4b0d      	ldr	r3, [pc, #52]	@ (8000584 <std+0x58>)
 8000550:	6263      	str	r3, [r4, #36]	@ 0x24
 8000552:	4b0d      	ldr	r3, [pc, #52]	@ (8000588 <std+0x5c>)
 8000554:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000556:	4b0d      	ldr	r3, [pc, #52]	@ (800058c <std+0x60>)
 8000558:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800055a:	4b0d      	ldr	r3, [pc, #52]	@ (8000590 <std+0x64>)
 800055c:	6323      	str	r3, [r4, #48]	@ 0x30
 800055e:	4b0d      	ldr	r3, [pc, #52]	@ (8000594 <std+0x68>)
 8000560:	6224      	str	r4, [r4, #32]
 8000562:	429c      	cmp	r4, r3
 8000564:	d006      	beq.n	8000574 <std+0x48>
 8000566:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800056a:	4294      	cmp	r4, r2
 800056c:	d002      	beq.n	8000574 <std+0x48>
 800056e:	33d0      	adds	r3, #208	@ 0xd0
 8000570:	429c      	cmp	r4, r3
 8000572:	d105      	bne.n	8000580 <std+0x54>
 8000574:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800057c:	f000 ba58 	b.w	8000a30 <__retarget_lock_init_recursive>
 8000580:	bd10      	pop	{r4, pc}
 8000582:	bf00      	nop
 8000584:	08000791 	.word	0x08000791
 8000588:	080007b3 	.word	0x080007b3
 800058c:	080007eb 	.word	0x080007eb
 8000590:	0800080f 	.word	0x0800080f
 8000594:	2000007c 	.word	0x2000007c

08000598 <stdio_exit_handler>:
 8000598:	4a02      	ldr	r2, [pc, #8]	@ (80005a4 <stdio_exit_handler+0xc>)
 800059a:	4903      	ldr	r1, [pc, #12]	@ (80005a8 <stdio_exit_handler+0x10>)
 800059c:	4803      	ldr	r0, [pc, #12]	@ (80005ac <stdio_exit_handler+0x14>)
 800059e:	f000 b869 	b.w	8000674 <_fwalk_sglue>
 80005a2:	bf00      	nop
 80005a4:	20000000 	.word	0x20000000
 80005a8:	080012c5 	.word	0x080012c5
 80005ac:	20000010 	.word	0x20000010

080005b0 <cleanup_stdio>:
 80005b0:	6841      	ldr	r1, [r0, #4]
 80005b2:	4b0c      	ldr	r3, [pc, #48]	@ (80005e4 <cleanup_stdio+0x34>)
 80005b4:	4299      	cmp	r1, r3
 80005b6:	b510      	push	{r4, lr}
 80005b8:	4604      	mov	r4, r0
 80005ba:	d001      	beq.n	80005c0 <cleanup_stdio+0x10>
 80005bc:	f000 fe82 	bl	80012c4 <_fflush_r>
 80005c0:	68a1      	ldr	r1, [r4, #8]
 80005c2:	4b09      	ldr	r3, [pc, #36]	@ (80005e8 <cleanup_stdio+0x38>)
 80005c4:	4299      	cmp	r1, r3
 80005c6:	d002      	beq.n	80005ce <cleanup_stdio+0x1e>
 80005c8:	4620      	mov	r0, r4
 80005ca:	f000 fe7b 	bl	80012c4 <_fflush_r>
 80005ce:	68e1      	ldr	r1, [r4, #12]
 80005d0:	4b06      	ldr	r3, [pc, #24]	@ (80005ec <cleanup_stdio+0x3c>)
 80005d2:	4299      	cmp	r1, r3
 80005d4:	d004      	beq.n	80005e0 <cleanup_stdio+0x30>
 80005d6:	4620      	mov	r0, r4
 80005d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005dc:	f000 be72 	b.w	80012c4 <_fflush_r>
 80005e0:	bd10      	pop	{r4, pc}
 80005e2:	bf00      	nop
 80005e4:	2000007c 	.word	0x2000007c
 80005e8:	200000e4 	.word	0x200000e4
 80005ec:	2000014c 	.word	0x2000014c

080005f0 <global_stdio_init.part.0>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	4b0b      	ldr	r3, [pc, #44]	@ (8000620 <global_stdio_init.part.0+0x30>)
 80005f4:	4c0b      	ldr	r4, [pc, #44]	@ (8000624 <global_stdio_init.part.0+0x34>)
 80005f6:	4a0c      	ldr	r2, [pc, #48]	@ (8000628 <global_stdio_init.part.0+0x38>)
 80005f8:	601a      	str	r2, [r3, #0]
 80005fa:	4620      	mov	r0, r4
 80005fc:	2200      	movs	r2, #0
 80005fe:	2104      	movs	r1, #4
 8000600:	f7ff ff94 	bl	800052c <std>
 8000604:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000608:	2201      	movs	r2, #1
 800060a:	2109      	movs	r1, #9
 800060c:	f7ff ff8e 	bl	800052c <std>
 8000610:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000614:	2202      	movs	r2, #2
 8000616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800061a:	2112      	movs	r1, #18
 800061c:	f7ff bf86 	b.w	800052c <std>
 8000620:	200001b4 	.word	0x200001b4
 8000624:	2000007c 	.word	0x2000007c
 8000628:	08000599 	.word	0x08000599

0800062c <__sfp_lock_acquire>:
 800062c:	4801      	ldr	r0, [pc, #4]	@ (8000634 <__sfp_lock_acquire+0x8>)
 800062e:	f000 ba00 	b.w	8000a32 <__retarget_lock_acquire_recursive>
 8000632:	bf00      	nop
 8000634:	200001bd 	.word	0x200001bd

08000638 <__sfp_lock_release>:
 8000638:	4801      	ldr	r0, [pc, #4]	@ (8000640 <__sfp_lock_release+0x8>)
 800063a:	f000 b9fb 	b.w	8000a34 <__retarget_lock_release_recursive>
 800063e:	bf00      	nop
 8000640:	200001bd 	.word	0x200001bd

08000644 <__sinit>:
 8000644:	b510      	push	{r4, lr}
 8000646:	4604      	mov	r4, r0
 8000648:	f7ff fff0 	bl	800062c <__sfp_lock_acquire>
 800064c:	6a23      	ldr	r3, [r4, #32]
 800064e:	b11b      	cbz	r3, 8000658 <__sinit+0x14>
 8000650:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000654:	f7ff bff0 	b.w	8000638 <__sfp_lock_release>
 8000658:	4b04      	ldr	r3, [pc, #16]	@ (800066c <__sinit+0x28>)
 800065a:	6223      	str	r3, [r4, #32]
 800065c:	4b04      	ldr	r3, [pc, #16]	@ (8000670 <__sinit+0x2c>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	2b00      	cmp	r3, #0
 8000662:	d1f5      	bne.n	8000650 <__sinit+0xc>
 8000664:	f7ff ffc4 	bl	80005f0 <global_stdio_init.part.0>
 8000668:	e7f2      	b.n	8000650 <__sinit+0xc>
 800066a:	bf00      	nop
 800066c:	080005b1 	.word	0x080005b1
 8000670:	200001b4 	.word	0x200001b4

08000674 <_fwalk_sglue>:
 8000674:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000678:	4607      	mov	r7, r0
 800067a:	4688      	mov	r8, r1
 800067c:	4614      	mov	r4, r2
 800067e:	2600      	movs	r6, #0
 8000680:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000684:	f1b9 0901 	subs.w	r9, r9, #1
 8000688:	d505      	bpl.n	8000696 <_fwalk_sglue+0x22>
 800068a:	6824      	ldr	r4, [r4, #0]
 800068c:	2c00      	cmp	r4, #0
 800068e:	d1f7      	bne.n	8000680 <_fwalk_sglue+0xc>
 8000690:	4630      	mov	r0, r6
 8000692:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000696:	89ab      	ldrh	r3, [r5, #12]
 8000698:	2b01      	cmp	r3, #1
 800069a:	d907      	bls.n	80006ac <_fwalk_sglue+0x38>
 800069c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006a0:	3301      	adds	r3, #1
 80006a2:	d003      	beq.n	80006ac <_fwalk_sglue+0x38>
 80006a4:	4629      	mov	r1, r5
 80006a6:	4638      	mov	r0, r7
 80006a8:	47c0      	blx	r8
 80006aa:	4306      	orrs	r6, r0
 80006ac:	3568      	adds	r5, #104	@ 0x68
 80006ae:	e7e9      	b.n	8000684 <_fwalk_sglue+0x10>

080006b0 <iprintf>:
 80006b0:	b40f      	push	{r0, r1, r2, r3}
 80006b2:	b507      	push	{r0, r1, r2, lr}
 80006b4:	4906      	ldr	r1, [pc, #24]	@ (80006d0 <iprintf+0x20>)
 80006b6:	ab04      	add	r3, sp, #16
 80006b8:	6808      	ldr	r0, [r1, #0]
 80006ba:	f853 2b04 	ldr.w	r2, [r3], #4
 80006be:	6881      	ldr	r1, [r0, #8]
 80006c0:	9301      	str	r3, [sp, #4]
 80006c2:	f000 fad9 	bl	8000c78 <_vfiprintf_r>
 80006c6:	b003      	add	sp, #12
 80006c8:	f85d eb04 	ldr.w	lr, [sp], #4
 80006cc:	b004      	add	sp, #16
 80006ce:	4770      	bx	lr
 80006d0:	2000000c 	.word	0x2000000c

080006d4 <_puts_r>:
 80006d4:	6a03      	ldr	r3, [r0, #32]
 80006d6:	b570      	push	{r4, r5, r6, lr}
 80006d8:	6884      	ldr	r4, [r0, #8]
 80006da:	4605      	mov	r5, r0
 80006dc:	460e      	mov	r6, r1
 80006de:	b90b      	cbnz	r3, 80006e4 <_puts_r+0x10>
 80006e0:	f7ff ffb0 	bl	8000644 <__sinit>
 80006e4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80006e6:	07db      	lsls	r3, r3, #31
 80006e8:	d405      	bmi.n	80006f6 <_puts_r+0x22>
 80006ea:	89a3      	ldrh	r3, [r4, #12]
 80006ec:	0598      	lsls	r0, r3, #22
 80006ee:	d402      	bmi.n	80006f6 <_puts_r+0x22>
 80006f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80006f2:	f000 f99e 	bl	8000a32 <__retarget_lock_acquire_recursive>
 80006f6:	89a3      	ldrh	r3, [r4, #12]
 80006f8:	0719      	lsls	r1, r3, #28
 80006fa:	d502      	bpl.n	8000702 <_puts_r+0x2e>
 80006fc:	6923      	ldr	r3, [r4, #16]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d135      	bne.n	800076e <_puts_r+0x9a>
 8000702:	4621      	mov	r1, r4
 8000704:	4628      	mov	r0, r5
 8000706:	f000 f8c5 	bl	8000894 <__swsetup_r>
 800070a:	b380      	cbz	r0, 800076e <_puts_r+0x9a>
 800070c:	f04f 35ff 	mov.w	r5, #4294967295
 8000710:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000712:	07da      	lsls	r2, r3, #31
 8000714:	d405      	bmi.n	8000722 <_puts_r+0x4e>
 8000716:	89a3      	ldrh	r3, [r4, #12]
 8000718:	059b      	lsls	r3, r3, #22
 800071a:	d402      	bmi.n	8000722 <_puts_r+0x4e>
 800071c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800071e:	f000 f989 	bl	8000a34 <__retarget_lock_release_recursive>
 8000722:	4628      	mov	r0, r5
 8000724:	bd70      	pop	{r4, r5, r6, pc}
 8000726:	2b00      	cmp	r3, #0
 8000728:	da04      	bge.n	8000734 <_puts_r+0x60>
 800072a:	69a2      	ldr	r2, [r4, #24]
 800072c:	429a      	cmp	r2, r3
 800072e:	dc17      	bgt.n	8000760 <_puts_r+0x8c>
 8000730:	290a      	cmp	r1, #10
 8000732:	d015      	beq.n	8000760 <_puts_r+0x8c>
 8000734:	6823      	ldr	r3, [r4, #0]
 8000736:	1c5a      	adds	r2, r3, #1
 8000738:	6022      	str	r2, [r4, #0]
 800073a:	7019      	strb	r1, [r3, #0]
 800073c:	68a3      	ldr	r3, [r4, #8]
 800073e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000742:	3b01      	subs	r3, #1
 8000744:	60a3      	str	r3, [r4, #8]
 8000746:	2900      	cmp	r1, #0
 8000748:	d1ed      	bne.n	8000726 <_puts_r+0x52>
 800074a:	2b00      	cmp	r3, #0
 800074c:	da11      	bge.n	8000772 <_puts_r+0x9e>
 800074e:	4622      	mov	r2, r4
 8000750:	210a      	movs	r1, #10
 8000752:	4628      	mov	r0, r5
 8000754:	f000 f85f 	bl	8000816 <__swbuf_r>
 8000758:	3001      	adds	r0, #1
 800075a:	d0d7      	beq.n	800070c <_puts_r+0x38>
 800075c:	250a      	movs	r5, #10
 800075e:	e7d7      	b.n	8000710 <_puts_r+0x3c>
 8000760:	4622      	mov	r2, r4
 8000762:	4628      	mov	r0, r5
 8000764:	f000 f857 	bl	8000816 <__swbuf_r>
 8000768:	3001      	adds	r0, #1
 800076a:	d1e7      	bne.n	800073c <_puts_r+0x68>
 800076c:	e7ce      	b.n	800070c <_puts_r+0x38>
 800076e:	3e01      	subs	r6, #1
 8000770:	e7e4      	b.n	800073c <_puts_r+0x68>
 8000772:	6823      	ldr	r3, [r4, #0]
 8000774:	1c5a      	adds	r2, r3, #1
 8000776:	6022      	str	r2, [r4, #0]
 8000778:	220a      	movs	r2, #10
 800077a:	701a      	strb	r2, [r3, #0]
 800077c:	e7ee      	b.n	800075c <_puts_r+0x88>
	...

08000780 <puts>:
 8000780:	4b02      	ldr	r3, [pc, #8]	@ (800078c <puts+0xc>)
 8000782:	4601      	mov	r1, r0
 8000784:	6818      	ldr	r0, [r3, #0]
 8000786:	f7ff bfa5 	b.w	80006d4 <_puts_r>
 800078a:	bf00      	nop
 800078c:	2000000c 	.word	0x2000000c

08000790 <__sread>:
 8000790:	b510      	push	{r4, lr}
 8000792:	460c      	mov	r4, r1
 8000794:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000798:	f000 f8fc 	bl	8000994 <_read_r>
 800079c:	2800      	cmp	r0, #0
 800079e:	bfab      	itete	ge
 80007a0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80007a2:	89a3      	ldrhlt	r3, [r4, #12]
 80007a4:	181b      	addge	r3, r3, r0
 80007a6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80007aa:	bfac      	ite	ge
 80007ac:	6563      	strge	r3, [r4, #84]	@ 0x54
 80007ae:	81a3      	strhlt	r3, [r4, #12]
 80007b0:	bd10      	pop	{r4, pc}

080007b2 <__swrite>:
 80007b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007b6:	461f      	mov	r7, r3
 80007b8:	898b      	ldrh	r3, [r1, #12]
 80007ba:	05db      	lsls	r3, r3, #23
 80007bc:	4605      	mov	r5, r0
 80007be:	460c      	mov	r4, r1
 80007c0:	4616      	mov	r6, r2
 80007c2:	d505      	bpl.n	80007d0 <__swrite+0x1e>
 80007c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007c8:	2302      	movs	r3, #2
 80007ca:	2200      	movs	r2, #0
 80007cc:	f000 f8d0 	bl	8000970 <_lseek_r>
 80007d0:	89a3      	ldrh	r3, [r4, #12]
 80007d2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80007d6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80007da:	81a3      	strh	r3, [r4, #12]
 80007dc:	4632      	mov	r2, r6
 80007de:	463b      	mov	r3, r7
 80007e0:	4628      	mov	r0, r5
 80007e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80007e6:	f000 b8e7 	b.w	80009b8 <_write_r>

080007ea <__sseek>:
 80007ea:	b510      	push	{r4, lr}
 80007ec:	460c      	mov	r4, r1
 80007ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007f2:	f000 f8bd 	bl	8000970 <_lseek_r>
 80007f6:	1c43      	adds	r3, r0, #1
 80007f8:	89a3      	ldrh	r3, [r4, #12]
 80007fa:	bf15      	itete	ne
 80007fc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80007fe:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000802:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000806:	81a3      	strheq	r3, [r4, #12]
 8000808:	bf18      	it	ne
 800080a:	81a3      	strhne	r3, [r4, #12]
 800080c:	bd10      	pop	{r4, pc}

0800080e <__sclose>:
 800080e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000812:	f000 b89d 	b.w	8000950 <_close_r>

08000816 <__swbuf_r>:
 8000816:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000818:	460e      	mov	r6, r1
 800081a:	4614      	mov	r4, r2
 800081c:	4605      	mov	r5, r0
 800081e:	b118      	cbz	r0, 8000828 <__swbuf_r+0x12>
 8000820:	6a03      	ldr	r3, [r0, #32]
 8000822:	b90b      	cbnz	r3, 8000828 <__swbuf_r+0x12>
 8000824:	f7ff ff0e 	bl	8000644 <__sinit>
 8000828:	69a3      	ldr	r3, [r4, #24]
 800082a:	60a3      	str	r3, [r4, #8]
 800082c:	89a3      	ldrh	r3, [r4, #12]
 800082e:	071a      	lsls	r2, r3, #28
 8000830:	d501      	bpl.n	8000836 <__swbuf_r+0x20>
 8000832:	6923      	ldr	r3, [r4, #16]
 8000834:	b943      	cbnz	r3, 8000848 <__swbuf_r+0x32>
 8000836:	4621      	mov	r1, r4
 8000838:	4628      	mov	r0, r5
 800083a:	f000 f82b 	bl	8000894 <__swsetup_r>
 800083e:	b118      	cbz	r0, 8000848 <__swbuf_r+0x32>
 8000840:	f04f 37ff 	mov.w	r7, #4294967295
 8000844:	4638      	mov	r0, r7
 8000846:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000848:	6823      	ldr	r3, [r4, #0]
 800084a:	6922      	ldr	r2, [r4, #16]
 800084c:	1a98      	subs	r0, r3, r2
 800084e:	6963      	ldr	r3, [r4, #20]
 8000850:	b2f6      	uxtb	r6, r6
 8000852:	4283      	cmp	r3, r0
 8000854:	4637      	mov	r7, r6
 8000856:	dc05      	bgt.n	8000864 <__swbuf_r+0x4e>
 8000858:	4621      	mov	r1, r4
 800085a:	4628      	mov	r0, r5
 800085c:	f000 fd32 	bl	80012c4 <_fflush_r>
 8000860:	2800      	cmp	r0, #0
 8000862:	d1ed      	bne.n	8000840 <__swbuf_r+0x2a>
 8000864:	68a3      	ldr	r3, [r4, #8]
 8000866:	3b01      	subs	r3, #1
 8000868:	60a3      	str	r3, [r4, #8]
 800086a:	6823      	ldr	r3, [r4, #0]
 800086c:	1c5a      	adds	r2, r3, #1
 800086e:	6022      	str	r2, [r4, #0]
 8000870:	701e      	strb	r6, [r3, #0]
 8000872:	6962      	ldr	r2, [r4, #20]
 8000874:	1c43      	adds	r3, r0, #1
 8000876:	429a      	cmp	r2, r3
 8000878:	d004      	beq.n	8000884 <__swbuf_r+0x6e>
 800087a:	89a3      	ldrh	r3, [r4, #12]
 800087c:	07db      	lsls	r3, r3, #31
 800087e:	d5e1      	bpl.n	8000844 <__swbuf_r+0x2e>
 8000880:	2e0a      	cmp	r6, #10
 8000882:	d1df      	bne.n	8000844 <__swbuf_r+0x2e>
 8000884:	4621      	mov	r1, r4
 8000886:	4628      	mov	r0, r5
 8000888:	f000 fd1c 	bl	80012c4 <_fflush_r>
 800088c:	2800      	cmp	r0, #0
 800088e:	d0d9      	beq.n	8000844 <__swbuf_r+0x2e>
 8000890:	e7d6      	b.n	8000840 <__swbuf_r+0x2a>
	...

08000894 <__swsetup_r>:
 8000894:	b538      	push	{r3, r4, r5, lr}
 8000896:	4b29      	ldr	r3, [pc, #164]	@ (800093c <__swsetup_r+0xa8>)
 8000898:	4605      	mov	r5, r0
 800089a:	6818      	ldr	r0, [r3, #0]
 800089c:	460c      	mov	r4, r1
 800089e:	b118      	cbz	r0, 80008a8 <__swsetup_r+0x14>
 80008a0:	6a03      	ldr	r3, [r0, #32]
 80008a2:	b90b      	cbnz	r3, 80008a8 <__swsetup_r+0x14>
 80008a4:	f7ff fece 	bl	8000644 <__sinit>
 80008a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008ac:	0719      	lsls	r1, r3, #28
 80008ae:	d422      	bmi.n	80008f6 <__swsetup_r+0x62>
 80008b0:	06da      	lsls	r2, r3, #27
 80008b2:	d407      	bmi.n	80008c4 <__swsetup_r+0x30>
 80008b4:	2209      	movs	r2, #9
 80008b6:	602a      	str	r2, [r5, #0]
 80008b8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80008bc:	81a3      	strh	r3, [r4, #12]
 80008be:	f04f 30ff 	mov.w	r0, #4294967295
 80008c2:	e033      	b.n	800092c <__swsetup_r+0x98>
 80008c4:	0758      	lsls	r0, r3, #29
 80008c6:	d512      	bpl.n	80008ee <__swsetup_r+0x5a>
 80008c8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80008ca:	b141      	cbz	r1, 80008de <__swsetup_r+0x4a>
 80008cc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80008d0:	4299      	cmp	r1, r3
 80008d2:	d002      	beq.n	80008da <__swsetup_r+0x46>
 80008d4:	4628      	mov	r0, r5
 80008d6:	f000 f8af 	bl	8000a38 <_free_r>
 80008da:	2300      	movs	r3, #0
 80008dc:	6363      	str	r3, [r4, #52]	@ 0x34
 80008de:	89a3      	ldrh	r3, [r4, #12]
 80008e0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80008e4:	81a3      	strh	r3, [r4, #12]
 80008e6:	2300      	movs	r3, #0
 80008e8:	6063      	str	r3, [r4, #4]
 80008ea:	6923      	ldr	r3, [r4, #16]
 80008ec:	6023      	str	r3, [r4, #0]
 80008ee:	89a3      	ldrh	r3, [r4, #12]
 80008f0:	f043 0308 	orr.w	r3, r3, #8
 80008f4:	81a3      	strh	r3, [r4, #12]
 80008f6:	6923      	ldr	r3, [r4, #16]
 80008f8:	b94b      	cbnz	r3, 800090e <__swsetup_r+0x7a>
 80008fa:	89a3      	ldrh	r3, [r4, #12]
 80008fc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000900:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000904:	d003      	beq.n	800090e <__swsetup_r+0x7a>
 8000906:	4621      	mov	r1, r4
 8000908:	4628      	mov	r0, r5
 800090a:	f000 fd29 	bl	8001360 <__smakebuf_r>
 800090e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000912:	f013 0201 	ands.w	r2, r3, #1
 8000916:	d00a      	beq.n	800092e <__swsetup_r+0x9a>
 8000918:	2200      	movs	r2, #0
 800091a:	60a2      	str	r2, [r4, #8]
 800091c:	6962      	ldr	r2, [r4, #20]
 800091e:	4252      	negs	r2, r2
 8000920:	61a2      	str	r2, [r4, #24]
 8000922:	6922      	ldr	r2, [r4, #16]
 8000924:	b942      	cbnz	r2, 8000938 <__swsetup_r+0xa4>
 8000926:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800092a:	d1c5      	bne.n	80008b8 <__swsetup_r+0x24>
 800092c:	bd38      	pop	{r3, r4, r5, pc}
 800092e:	0799      	lsls	r1, r3, #30
 8000930:	bf58      	it	pl
 8000932:	6962      	ldrpl	r2, [r4, #20]
 8000934:	60a2      	str	r2, [r4, #8]
 8000936:	e7f4      	b.n	8000922 <__swsetup_r+0x8e>
 8000938:	2000      	movs	r0, #0
 800093a:	e7f7      	b.n	800092c <__swsetup_r+0x98>
 800093c:	2000000c 	.word	0x2000000c

08000940 <memset>:
 8000940:	4402      	add	r2, r0
 8000942:	4603      	mov	r3, r0
 8000944:	4293      	cmp	r3, r2
 8000946:	d100      	bne.n	800094a <memset+0xa>
 8000948:	4770      	bx	lr
 800094a:	f803 1b01 	strb.w	r1, [r3], #1
 800094e:	e7f9      	b.n	8000944 <memset+0x4>

08000950 <_close_r>:
 8000950:	b538      	push	{r3, r4, r5, lr}
 8000952:	4d06      	ldr	r5, [pc, #24]	@ (800096c <_close_r+0x1c>)
 8000954:	2300      	movs	r3, #0
 8000956:	4604      	mov	r4, r0
 8000958:	4608      	mov	r0, r1
 800095a:	602b      	str	r3, [r5, #0]
 800095c:	f7ff fd55 	bl	800040a <_close>
 8000960:	1c43      	adds	r3, r0, #1
 8000962:	d102      	bne.n	800096a <_close_r+0x1a>
 8000964:	682b      	ldr	r3, [r5, #0]
 8000966:	b103      	cbz	r3, 800096a <_close_r+0x1a>
 8000968:	6023      	str	r3, [r4, #0]
 800096a:	bd38      	pop	{r3, r4, r5, pc}
 800096c:	200001b8 	.word	0x200001b8

08000970 <_lseek_r>:
 8000970:	b538      	push	{r3, r4, r5, lr}
 8000972:	4d07      	ldr	r5, [pc, #28]	@ (8000990 <_lseek_r+0x20>)
 8000974:	4604      	mov	r4, r0
 8000976:	4608      	mov	r0, r1
 8000978:	4611      	mov	r1, r2
 800097a:	2200      	movs	r2, #0
 800097c:	602a      	str	r2, [r5, #0]
 800097e:	461a      	mov	r2, r3
 8000980:	f7ff fd67 	bl	8000452 <_lseek>
 8000984:	1c43      	adds	r3, r0, #1
 8000986:	d102      	bne.n	800098e <_lseek_r+0x1e>
 8000988:	682b      	ldr	r3, [r5, #0]
 800098a:	b103      	cbz	r3, 800098e <_lseek_r+0x1e>
 800098c:	6023      	str	r3, [r4, #0]
 800098e:	bd38      	pop	{r3, r4, r5, pc}
 8000990:	200001b8 	.word	0x200001b8

08000994 <_read_r>:
 8000994:	b538      	push	{r3, r4, r5, lr}
 8000996:	4d07      	ldr	r5, [pc, #28]	@ (80009b4 <_read_r+0x20>)
 8000998:	4604      	mov	r4, r0
 800099a:	4608      	mov	r0, r1
 800099c:	4611      	mov	r1, r2
 800099e:	2200      	movs	r2, #0
 80009a0:	602a      	str	r2, [r5, #0]
 80009a2:	461a      	mov	r2, r3
 80009a4:	f7ff fcf8 	bl	8000398 <_read>
 80009a8:	1c43      	adds	r3, r0, #1
 80009aa:	d102      	bne.n	80009b2 <_read_r+0x1e>
 80009ac:	682b      	ldr	r3, [r5, #0]
 80009ae:	b103      	cbz	r3, 80009b2 <_read_r+0x1e>
 80009b0:	6023      	str	r3, [r4, #0]
 80009b2:	bd38      	pop	{r3, r4, r5, pc}
 80009b4:	200001b8 	.word	0x200001b8

080009b8 <_write_r>:
 80009b8:	b538      	push	{r3, r4, r5, lr}
 80009ba:	4d07      	ldr	r5, [pc, #28]	@ (80009d8 <_write_r+0x20>)
 80009bc:	4604      	mov	r4, r0
 80009be:	4608      	mov	r0, r1
 80009c0:	4611      	mov	r1, r2
 80009c2:	2200      	movs	r2, #0
 80009c4:	602a      	str	r2, [r5, #0]
 80009c6:	461a      	mov	r2, r3
 80009c8:	f7ff fd03 	bl	80003d2 <_write>
 80009cc:	1c43      	adds	r3, r0, #1
 80009ce:	d102      	bne.n	80009d6 <_write_r+0x1e>
 80009d0:	682b      	ldr	r3, [r5, #0]
 80009d2:	b103      	cbz	r3, 80009d6 <_write_r+0x1e>
 80009d4:	6023      	str	r3, [r4, #0]
 80009d6:	bd38      	pop	{r3, r4, r5, pc}
 80009d8:	200001b8 	.word	0x200001b8

080009dc <__errno>:
 80009dc:	4b01      	ldr	r3, [pc, #4]	@ (80009e4 <__errno+0x8>)
 80009de:	6818      	ldr	r0, [r3, #0]
 80009e0:	4770      	bx	lr
 80009e2:	bf00      	nop
 80009e4:	2000000c 	.word	0x2000000c

080009e8 <__libc_init_array>:
 80009e8:	b570      	push	{r4, r5, r6, lr}
 80009ea:	4d0d      	ldr	r5, [pc, #52]	@ (8000a20 <__libc_init_array+0x38>)
 80009ec:	4c0d      	ldr	r4, [pc, #52]	@ (8000a24 <__libc_init_array+0x3c>)
 80009ee:	1b64      	subs	r4, r4, r5
 80009f0:	10a4      	asrs	r4, r4, #2
 80009f2:	2600      	movs	r6, #0
 80009f4:	42a6      	cmp	r6, r4
 80009f6:	d109      	bne.n	8000a0c <__libc_init_array+0x24>
 80009f8:	4d0b      	ldr	r5, [pc, #44]	@ (8000a28 <__libc_init_array+0x40>)
 80009fa:	4c0c      	ldr	r4, [pc, #48]	@ (8000a2c <__libc_init_array+0x44>)
 80009fc:	f000 fd1e 	bl	800143c <_init>
 8000a00:	1b64      	subs	r4, r4, r5
 8000a02:	10a4      	asrs	r4, r4, #2
 8000a04:	2600      	movs	r6, #0
 8000a06:	42a6      	cmp	r6, r4
 8000a08:	d105      	bne.n	8000a16 <__libc_init_array+0x2e>
 8000a0a:	bd70      	pop	{r4, r5, r6, pc}
 8000a0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a10:	4798      	blx	r3
 8000a12:	3601      	adds	r6, #1
 8000a14:	e7ee      	b.n	80009f4 <__libc_init_array+0xc>
 8000a16:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a1a:	4798      	blx	r3
 8000a1c:	3601      	adds	r6, #1
 8000a1e:	e7f2      	b.n	8000a06 <__libc_init_array+0x1e>
 8000a20:	080014e8 	.word	0x080014e8
 8000a24:	080014e8 	.word	0x080014e8
 8000a28:	080014e8 	.word	0x080014e8
 8000a2c:	080014ec 	.word	0x080014ec

08000a30 <__retarget_lock_init_recursive>:
 8000a30:	4770      	bx	lr

08000a32 <__retarget_lock_acquire_recursive>:
 8000a32:	4770      	bx	lr

08000a34 <__retarget_lock_release_recursive>:
 8000a34:	4770      	bx	lr
	...

08000a38 <_free_r>:
 8000a38:	b538      	push	{r3, r4, r5, lr}
 8000a3a:	4605      	mov	r5, r0
 8000a3c:	2900      	cmp	r1, #0
 8000a3e:	d041      	beq.n	8000ac4 <_free_r+0x8c>
 8000a40:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a44:	1f0c      	subs	r4, r1, #4
 8000a46:	2b00      	cmp	r3, #0
 8000a48:	bfb8      	it	lt
 8000a4a:	18e4      	addlt	r4, r4, r3
 8000a4c:	f000 f8e0 	bl	8000c10 <__malloc_lock>
 8000a50:	4a1d      	ldr	r2, [pc, #116]	@ (8000ac8 <_free_r+0x90>)
 8000a52:	6813      	ldr	r3, [r2, #0]
 8000a54:	b933      	cbnz	r3, 8000a64 <_free_r+0x2c>
 8000a56:	6063      	str	r3, [r4, #4]
 8000a58:	6014      	str	r4, [r2, #0]
 8000a5a:	4628      	mov	r0, r5
 8000a5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a60:	f000 b8dc 	b.w	8000c1c <__malloc_unlock>
 8000a64:	42a3      	cmp	r3, r4
 8000a66:	d908      	bls.n	8000a7a <_free_r+0x42>
 8000a68:	6820      	ldr	r0, [r4, #0]
 8000a6a:	1821      	adds	r1, r4, r0
 8000a6c:	428b      	cmp	r3, r1
 8000a6e:	bf01      	itttt	eq
 8000a70:	6819      	ldreq	r1, [r3, #0]
 8000a72:	685b      	ldreq	r3, [r3, #4]
 8000a74:	1809      	addeq	r1, r1, r0
 8000a76:	6021      	streq	r1, [r4, #0]
 8000a78:	e7ed      	b.n	8000a56 <_free_r+0x1e>
 8000a7a:	461a      	mov	r2, r3
 8000a7c:	685b      	ldr	r3, [r3, #4]
 8000a7e:	b10b      	cbz	r3, 8000a84 <_free_r+0x4c>
 8000a80:	42a3      	cmp	r3, r4
 8000a82:	d9fa      	bls.n	8000a7a <_free_r+0x42>
 8000a84:	6811      	ldr	r1, [r2, #0]
 8000a86:	1850      	adds	r0, r2, r1
 8000a88:	42a0      	cmp	r0, r4
 8000a8a:	d10b      	bne.n	8000aa4 <_free_r+0x6c>
 8000a8c:	6820      	ldr	r0, [r4, #0]
 8000a8e:	4401      	add	r1, r0
 8000a90:	1850      	adds	r0, r2, r1
 8000a92:	4283      	cmp	r3, r0
 8000a94:	6011      	str	r1, [r2, #0]
 8000a96:	d1e0      	bne.n	8000a5a <_free_r+0x22>
 8000a98:	6818      	ldr	r0, [r3, #0]
 8000a9a:	685b      	ldr	r3, [r3, #4]
 8000a9c:	6053      	str	r3, [r2, #4]
 8000a9e:	4408      	add	r0, r1
 8000aa0:	6010      	str	r0, [r2, #0]
 8000aa2:	e7da      	b.n	8000a5a <_free_r+0x22>
 8000aa4:	d902      	bls.n	8000aac <_free_r+0x74>
 8000aa6:	230c      	movs	r3, #12
 8000aa8:	602b      	str	r3, [r5, #0]
 8000aaa:	e7d6      	b.n	8000a5a <_free_r+0x22>
 8000aac:	6820      	ldr	r0, [r4, #0]
 8000aae:	1821      	adds	r1, r4, r0
 8000ab0:	428b      	cmp	r3, r1
 8000ab2:	bf04      	itt	eq
 8000ab4:	6819      	ldreq	r1, [r3, #0]
 8000ab6:	685b      	ldreq	r3, [r3, #4]
 8000ab8:	6063      	str	r3, [r4, #4]
 8000aba:	bf04      	itt	eq
 8000abc:	1809      	addeq	r1, r1, r0
 8000abe:	6021      	streq	r1, [r4, #0]
 8000ac0:	6054      	str	r4, [r2, #4]
 8000ac2:	e7ca      	b.n	8000a5a <_free_r+0x22>
 8000ac4:	bd38      	pop	{r3, r4, r5, pc}
 8000ac6:	bf00      	nop
 8000ac8:	200001c4 	.word	0x200001c4

08000acc <sbrk_aligned>:
 8000acc:	b570      	push	{r4, r5, r6, lr}
 8000ace:	4e0f      	ldr	r6, [pc, #60]	@ (8000b0c <sbrk_aligned+0x40>)
 8000ad0:	460c      	mov	r4, r1
 8000ad2:	6831      	ldr	r1, [r6, #0]
 8000ad4:	4605      	mov	r5, r0
 8000ad6:	b911      	cbnz	r1, 8000ade <sbrk_aligned+0x12>
 8000ad8:	f000 fca0 	bl	800141c <_sbrk_r>
 8000adc:	6030      	str	r0, [r6, #0]
 8000ade:	4621      	mov	r1, r4
 8000ae0:	4628      	mov	r0, r5
 8000ae2:	f000 fc9b 	bl	800141c <_sbrk_r>
 8000ae6:	1c43      	adds	r3, r0, #1
 8000ae8:	d103      	bne.n	8000af2 <sbrk_aligned+0x26>
 8000aea:	f04f 34ff 	mov.w	r4, #4294967295
 8000aee:	4620      	mov	r0, r4
 8000af0:	bd70      	pop	{r4, r5, r6, pc}
 8000af2:	1cc4      	adds	r4, r0, #3
 8000af4:	f024 0403 	bic.w	r4, r4, #3
 8000af8:	42a0      	cmp	r0, r4
 8000afa:	d0f8      	beq.n	8000aee <sbrk_aligned+0x22>
 8000afc:	1a21      	subs	r1, r4, r0
 8000afe:	4628      	mov	r0, r5
 8000b00:	f000 fc8c 	bl	800141c <_sbrk_r>
 8000b04:	3001      	adds	r0, #1
 8000b06:	d1f2      	bne.n	8000aee <sbrk_aligned+0x22>
 8000b08:	e7ef      	b.n	8000aea <sbrk_aligned+0x1e>
 8000b0a:	bf00      	nop
 8000b0c:	200001c0 	.word	0x200001c0

08000b10 <_malloc_r>:
 8000b10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b14:	1ccd      	adds	r5, r1, #3
 8000b16:	f025 0503 	bic.w	r5, r5, #3
 8000b1a:	3508      	adds	r5, #8
 8000b1c:	2d0c      	cmp	r5, #12
 8000b1e:	bf38      	it	cc
 8000b20:	250c      	movcc	r5, #12
 8000b22:	2d00      	cmp	r5, #0
 8000b24:	4606      	mov	r6, r0
 8000b26:	db01      	blt.n	8000b2c <_malloc_r+0x1c>
 8000b28:	42a9      	cmp	r1, r5
 8000b2a:	d904      	bls.n	8000b36 <_malloc_r+0x26>
 8000b2c:	230c      	movs	r3, #12
 8000b2e:	6033      	str	r3, [r6, #0]
 8000b30:	2000      	movs	r0, #0
 8000b32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b36:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c0c <_malloc_r+0xfc>
 8000b3a:	f000 f869 	bl	8000c10 <__malloc_lock>
 8000b3e:	f8d8 3000 	ldr.w	r3, [r8]
 8000b42:	461c      	mov	r4, r3
 8000b44:	bb44      	cbnz	r4, 8000b98 <_malloc_r+0x88>
 8000b46:	4629      	mov	r1, r5
 8000b48:	4630      	mov	r0, r6
 8000b4a:	f7ff ffbf 	bl	8000acc <sbrk_aligned>
 8000b4e:	1c43      	adds	r3, r0, #1
 8000b50:	4604      	mov	r4, r0
 8000b52:	d158      	bne.n	8000c06 <_malloc_r+0xf6>
 8000b54:	f8d8 4000 	ldr.w	r4, [r8]
 8000b58:	4627      	mov	r7, r4
 8000b5a:	2f00      	cmp	r7, #0
 8000b5c:	d143      	bne.n	8000be6 <_malloc_r+0xd6>
 8000b5e:	2c00      	cmp	r4, #0
 8000b60:	d04b      	beq.n	8000bfa <_malloc_r+0xea>
 8000b62:	6823      	ldr	r3, [r4, #0]
 8000b64:	4639      	mov	r1, r7
 8000b66:	4630      	mov	r0, r6
 8000b68:	eb04 0903 	add.w	r9, r4, r3
 8000b6c:	f000 fc56 	bl	800141c <_sbrk_r>
 8000b70:	4581      	cmp	r9, r0
 8000b72:	d142      	bne.n	8000bfa <_malloc_r+0xea>
 8000b74:	6821      	ldr	r1, [r4, #0]
 8000b76:	1a6d      	subs	r5, r5, r1
 8000b78:	4629      	mov	r1, r5
 8000b7a:	4630      	mov	r0, r6
 8000b7c:	f7ff ffa6 	bl	8000acc <sbrk_aligned>
 8000b80:	3001      	adds	r0, #1
 8000b82:	d03a      	beq.n	8000bfa <_malloc_r+0xea>
 8000b84:	6823      	ldr	r3, [r4, #0]
 8000b86:	442b      	add	r3, r5
 8000b88:	6023      	str	r3, [r4, #0]
 8000b8a:	f8d8 3000 	ldr.w	r3, [r8]
 8000b8e:	685a      	ldr	r2, [r3, #4]
 8000b90:	bb62      	cbnz	r2, 8000bec <_malloc_r+0xdc>
 8000b92:	f8c8 7000 	str.w	r7, [r8]
 8000b96:	e00f      	b.n	8000bb8 <_malloc_r+0xa8>
 8000b98:	6822      	ldr	r2, [r4, #0]
 8000b9a:	1b52      	subs	r2, r2, r5
 8000b9c:	d420      	bmi.n	8000be0 <_malloc_r+0xd0>
 8000b9e:	2a0b      	cmp	r2, #11
 8000ba0:	d917      	bls.n	8000bd2 <_malloc_r+0xc2>
 8000ba2:	1961      	adds	r1, r4, r5
 8000ba4:	42a3      	cmp	r3, r4
 8000ba6:	6025      	str	r5, [r4, #0]
 8000ba8:	bf18      	it	ne
 8000baa:	6059      	strne	r1, [r3, #4]
 8000bac:	6863      	ldr	r3, [r4, #4]
 8000bae:	bf08      	it	eq
 8000bb0:	f8c8 1000 	streq.w	r1, [r8]
 8000bb4:	5162      	str	r2, [r4, r5]
 8000bb6:	604b      	str	r3, [r1, #4]
 8000bb8:	4630      	mov	r0, r6
 8000bba:	f000 f82f 	bl	8000c1c <__malloc_unlock>
 8000bbe:	f104 000b 	add.w	r0, r4, #11
 8000bc2:	1d23      	adds	r3, r4, #4
 8000bc4:	f020 0007 	bic.w	r0, r0, #7
 8000bc8:	1ac2      	subs	r2, r0, r3
 8000bca:	bf1c      	itt	ne
 8000bcc:	1a1b      	subne	r3, r3, r0
 8000bce:	50a3      	strne	r3, [r4, r2]
 8000bd0:	e7af      	b.n	8000b32 <_malloc_r+0x22>
 8000bd2:	6862      	ldr	r2, [r4, #4]
 8000bd4:	42a3      	cmp	r3, r4
 8000bd6:	bf0c      	ite	eq
 8000bd8:	f8c8 2000 	streq.w	r2, [r8]
 8000bdc:	605a      	strne	r2, [r3, #4]
 8000bde:	e7eb      	b.n	8000bb8 <_malloc_r+0xa8>
 8000be0:	4623      	mov	r3, r4
 8000be2:	6864      	ldr	r4, [r4, #4]
 8000be4:	e7ae      	b.n	8000b44 <_malloc_r+0x34>
 8000be6:	463c      	mov	r4, r7
 8000be8:	687f      	ldr	r7, [r7, #4]
 8000bea:	e7b6      	b.n	8000b5a <_malloc_r+0x4a>
 8000bec:	461a      	mov	r2, r3
 8000bee:	685b      	ldr	r3, [r3, #4]
 8000bf0:	42a3      	cmp	r3, r4
 8000bf2:	d1fb      	bne.n	8000bec <_malloc_r+0xdc>
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	6053      	str	r3, [r2, #4]
 8000bf8:	e7de      	b.n	8000bb8 <_malloc_r+0xa8>
 8000bfa:	230c      	movs	r3, #12
 8000bfc:	6033      	str	r3, [r6, #0]
 8000bfe:	4630      	mov	r0, r6
 8000c00:	f000 f80c 	bl	8000c1c <__malloc_unlock>
 8000c04:	e794      	b.n	8000b30 <_malloc_r+0x20>
 8000c06:	6005      	str	r5, [r0, #0]
 8000c08:	e7d6      	b.n	8000bb8 <_malloc_r+0xa8>
 8000c0a:	bf00      	nop
 8000c0c:	200001c4 	.word	0x200001c4

08000c10 <__malloc_lock>:
 8000c10:	4801      	ldr	r0, [pc, #4]	@ (8000c18 <__malloc_lock+0x8>)
 8000c12:	f7ff bf0e 	b.w	8000a32 <__retarget_lock_acquire_recursive>
 8000c16:	bf00      	nop
 8000c18:	200001bc 	.word	0x200001bc

08000c1c <__malloc_unlock>:
 8000c1c:	4801      	ldr	r0, [pc, #4]	@ (8000c24 <__malloc_unlock+0x8>)
 8000c1e:	f7ff bf09 	b.w	8000a34 <__retarget_lock_release_recursive>
 8000c22:	bf00      	nop
 8000c24:	200001bc 	.word	0x200001bc

08000c28 <__sfputc_r>:
 8000c28:	6893      	ldr	r3, [r2, #8]
 8000c2a:	3b01      	subs	r3, #1
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	b410      	push	{r4}
 8000c30:	6093      	str	r3, [r2, #8]
 8000c32:	da07      	bge.n	8000c44 <__sfputc_r+0x1c>
 8000c34:	6994      	ldr	r4, [r2, #24]
 8000c36:	42a3      	cmp	r3, r4
 8000c38:	db01      	blt.n	8000c3e <__sfputc_r+0x16>
 8000c3a:	290a      	cmp	r1, #10
 8000c3c:	d102      	bne.n	8000c44 <__sfputc_r+0x1c>
 8000c3e:	bc10      	pop	{r4}
 8000c40:	f7ff bde9 	b.w	8000816 <__swbuf_r>
 8000c44:	6813      	ldr	r3, [r2, #0]
 8000c46:	1c58      	adds	r0, r3, #1
 8000c48:	6010      	str	r0, [r2, #0]
 8000c4a:	7019      	strb	r1, [r3, #0]
 8000c4c:	4608      	mov	r0, r1
 8000c4e:	bc10      	pop	{r4}
 8000c50:	4770      	bx	lr

08000c52 <__sfputs_r>:
 8000c52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c54:	4606      	mov	r6, r0
 8000c56:	460f      	mov	r7, r1
 8000c58:	4614      	mov	r4, r2
 8000c5a:	18d5      	adds	r5, r2, r3
 8000c5c:	42ac      	cmp	r4, r5
 8000c5e:	d101      	bne.n	8000c64 <__sfputs_r+0x12>
 8000c60:	2000      	movs	r0, #0
 8000c62:	e007      	b.n	8000c74 <__sfputs_r+0x22>
 8000c64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c68:	463a      	mov	r2, r7
 8000c6a:	4630      	mov	r0, r6
 8000c6c:	f7ff ffdc 	bl	8000c28 <__sfputc_r>
 8000c70:	1c43      	adds	r3, r0, #1
 8000c72:	d1f3      	bne.n	8000c5c <__sfputs_r+0xa>
 8000c74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c78 <_vfiprintf_r>:
 8000c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c7c:	460d      	mov	r5, r1
 8000c7e:	b09d      	sub	sp, #116	@ 0x74
 8000c80:	4614      	mov	r4, r2
 8000c82:	4698      	mov	r8, r3
 8000c84:	4606      	mov	r6, r0
 8000c86:	b118      	cbz	r0, 8000c90 <_vfiprintf_r+0x18>
 8000c88:	6a03      	ldr	r3, [r0, #32]
 8000c8a:	b90b      	cbnz	r3, 8000c90 <_vfiprintf_r+0x18>
 8000c8c:	f7ff fcda 	bl	8000644 <__sinit>
 8000c90:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c92:	07d9      	lsls	r1, r3, #31
 8000c94:	d405      	bmi.n	8000ca2 <_vfiprintf_r+0x2a>
 8000c96:	89ab      	ldrh	r3, [r5, #12]
 8000c98:	059a      	lsls	r2, r3, #22
 8000c9a:	d402      	bmi.n	8000ca2 <_vfiprintf_r+0x2a>
 8000c9c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c9e:	f7ff fec8 	bl	8000a32 <__retarget_lock_acquire_recursive>
 8000ca2:	89ab      	ldrh	r3, [r5, #12]
 8000ca4:	071b      	lsls	r3, r3, #28
 8000ca6:	d501      	bpl.n	8000cac <_vfiprintf_r+0x34>
 8000ca8:	692b      	ldr	r3, [r5, #16]
 8000caa:	b99b      	cbnz	r3, 8000cd4 <_vfiprintf_r+0x5c>
 8000cac:	4629      	mov	r1, r5
 8000cae:	4630      	mov	r0, r6
 8000cb0:	f7ff fdf0 	bl	8000894 <__swsetup_r>
 8000cb4:	b170      	cbz	r0, 8000cd4 <_vfiprintf_r+0x5c>
 8000cb6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cb8:	07dc      	lsls	r4, r3, #31
 8000cba:	d504      	bpl.n	8000cc6 <_vfiprintf_r+0x4e>
 8000cbc:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc0:	b01d      	add	sp, #116	@ 0x74
 8000cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cc6:	89ab      	ldrh	r3, [r5, #12]
 8000cc8:	0598      	lsls	r0, r3, #22
 8000cca:	d4f7      	bmi.n	8000cbc <_vfiprintf_r+0x44>
 8000ccc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cce:	f7ff feb1 	bl	8000a34 <__retarget_lock_release_recursive>
 8000cd2:	e7f3      	b.n	8000cbc <_vfiprintf_r+0x44>
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	9309      	str	r3, [sp, #36]	@ 0x24
 8000cd8:	2320      	movs	r3, #32
 8000cda:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000cde:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ce2:	2330      	movs	r3, #48	@ 0x30
 8000ce4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000e94 <_vfiprintf_r+0x21c>
 8000ce8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000cec:	f04f 0901 	mov.w	r9, #1
 8000cf0:	4623      	mov	r3, r4
 8000cf2:	469a      	mov	sl, r3
 8000cf4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cf8:	b10a      	cbz	r2, 8000cfe <_vfiprintf_r+0x86>
 8000cfa:	2a25      	cmp	r2, #37	@ 0x25
 8000cfc:	d1f9      	bne.n	8000cf2 <_vfiprintf_r+0x7a>
 8000cfe:	ebba 0b04 	subs.w	fp, sl, r4
 8000d02:	d00b      	beq.n	8000d1c <_vfiprintf_r+0xa4>
 8000d04:	465b      	mov	r3, fp
 8000d06:	4622      	mov	r2, r4
 8000d08:	4629      	mov	r1, r5
 8000d0a:	4630      	mov	r0, r6
 8000d0c:	f7ff ffa1 	bl	8000c52 <__sfputs_r>
 8000d10:	3001      	adds	r0, #1
 8000d12:	f000 80a7 	beq.w	8000e64 <_vfiprintf_r+0x1ec>
 8000d16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d18:	445a      	add	r2, fp
 8000d1a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d1c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	f000 809f 	beq.w	8000e64 <_vfiprintf_r+0x1ec>
 8000d26:	2300      	movs	r3, #0
 8000d28:	f04f 32ff 	mov.w	r2, #4294967295
 8000d2c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d30:	f10a 0a01 	add.w	sl, sl, #1
 8000d34:	9304      	str	r3, [sp, #16]
 8000d36:	9307      	str	r3, [sp, #28]
 8000d38:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d3c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d3e:	4654      	mov	r4, sl
 8000d40:	2205      	movs	r2, #5
 8000d42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d46:	4853      	ldr	r0, [pc, #332]	@ (8000e94 <_vfiprintf_r+0x21c>)
 8000d48:	f7ff fa62 	bl	8000210 <memchr>
 8000d4c:	9a04      	ldr	r2, [sp, #16]
 8000d4e:	b9d8      	cbnz	r0, 8000d88 <_vfiprintf_r+0x110>
 8000d50:	06d1      	lsls	r1, r2, #27
 8000d52:	bf44      	itt	mi
 8000d54:	2320      	movmi	r3, #32
 8000d56:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d5a:	0713      	lsls	r3, r2, #28
 8000d5c:	bf44      	itt	mi
 8000d5e:	232b      	movmi	r3, #43	@ 0x2b
 8000d60:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d64:	f89a 3000 	ldrb.w	r3, [sl]
 8000d68:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d6a:	d015      	beq.n	8000d98 <_vfiprintf_r+0x120>
 8000d6c:	9a07      	ldr	r2, [sp, #28]
 8000d6e:	4654      	mov	r4, sl
 8000d70:	2000      	movs	r0, #0
 8000d72:	f04f 0c0a 	mov.w	ip, #10
 8000d76:	4621      	mov	r1, r4
 8000d78:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d7c:	3b30      	subs	r3, #48	@ 0x30
 8000d7e:	2b09      	cmp	r3, #9
 8000d80:	d94b      	bls.n	8000e1a <_vfiprintf_r+0x1a2>
 8000d82:	b1b0      	cbz	r0, 8000db2 <_vfiprintf_r+0x13a>
 8000d84:	9207      	str	r2, [sp, #28]
 8000d86:	e014      	b.n	8000db2 <_vfiprintf_r+0x13a>
 8000d88:	eba0 0308 	sub.w	r3, r0, r8
 8000d8c:	fa09 f303 	lsl.w	r3, r9, r3
 8000d90:	4313      	orrs	r3, r2
 8000d92:	9304      	str	r3, [sp, #16]
 8000d94:	46a2      	mov	sl, r4
 8000d96:	e7d2      	b.n	8000d3e <_vfiprintf_r+0xc6>
 8000d98:	9b03      	ldr	r3, [sp, #12]
 8000d9a:	1d19      	adds	r1, r3, #4
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	9103      	str	r1, [sp, #12]
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	bfbb      	ittet	lt
 8000da4:	425b      	neglt	r3, r3
 8000da6:	f042 0202 	orrlt.w	r2, r2, #2
 8000daa:	9307      	strge	r3, [sp, #28]
 8000dac:	9307      	strlt	r3, [sp, #28]
 8000dae:	bfb8      	it	lt
 8000db0:	9204      	strlt	r2, [sp, #16]
 8000db2:	7823      	ldrb	r3, [r4, #0]
 8000db4:	2b2e      	cmp	r3, #46	@ 0x2e
 8000db6:	d10a      	bne.n	8000dce <_vfiprintf_r+0x156>
 8000db8:	7863      	ldrb	r3, [r4, #1]
 8000dba:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dbc:	d132      	bne.n	8000e24 <_vfiprintf_r+0x1ac>
 8000dbe:	9b03      	ldr	r3, [sp, #12]
 8000dc0:	1d1a      	adds	r2, r3, #4
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	9203      	str	r2, [sp, #12]
 8000dc6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000dca:	3402      	adds	r4, #2
 8000dcc:	9305      	str	r3, [sp, #20]
 8000dce:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000e98 <_vfiprintf_r+0x220>
 8000dd2:	7821      	ldrb	r1, [r4, #0]
 8000dd4:	2203      	movs	r2, #3
 8000dd6:	4650      	mov	r0, sl
 8000dd8:	f7ff fa1a 	bl	8000210 <memchr>
 8000ddc:	b138      	cbz	r0, 8000dee <_vfiprintf_r+0x176>
 8000dde:	9b04      	ldr	r3, [sp, #16]
 8000de0:	eba0 000a 	sub.w	r0, r0, sl
 8000de4:	2240      	movs	r2, #64	@ 0x40
 8000de6:	4082      	lsls	r2, r0
 8000de8:	4313      	orrs	r3, r2
 8000dea:	3401      	adds	r4, #1
 8000dec:	9304      	str	r3, [sp, #16]
 8000dee:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000df2:	482a      	ldr	r0, [pc, #168]	@ (8000e9c <_vfiprintf_r+0x224>)
 8000df4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000df8:	2206      	movs	r2, #6
 8000dfa:	f7ff fa09 	bl	8000210 <memchr>
 8000dfe:	2800      	cmp	r0, #0
 8000e00:	d03f      	beq.n	8000e82 <_vfiprintf_r+0x20a>
 8000e02:	4b27      	ldr	r3, [pc, #156]	@ (8000ea0 <_vfiprintf_r+0x228>)
 8000e04:	bb1b      	cbnz	r3, 8000e4e <_vfiprintf_r+0x1d6>
 8000e06:	9b03      	ldr	r3, [sp, #12]
 8000e08:	3307      	adds	r3, #7
 8000e0a:	f023 0307 	bic.w	r3, r3, #7
 8000e0e:	3308      	adds	r3, #8
 8000e10:	9303      	str	r3, [sp, #12]
 8000e12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e14:	443b      	add	r3, r7
 8000e16:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e18:	e76a      	b.n	8000cf0 <_vfiprintf_r+0x78>
 8000e1a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e1e:	460c      	mov	r4, r1
 8000e20:	2001      	movs	r0, #1
 8000e22:	e7a8      	b.n	8000d76 <_vfiprintf_r+0xfe>
 8000e24:	2300      	movs	r3, #0
 8000e26:	3401      	adds	r4, #1
 8000e28:	9305      	str	r3, [sp, #20]
 8000e2a:	4619      	mov	r1, r3
 8000e2c:	f04f 0c0a 	mov.w	ip, #10
 8000e30:	4620      	mov	r0, r4
 8000e32:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e36:	3a30      	subs	r2, #48	@ 0x30
 8000e38:	2a09      	cmp	r2, #9
 8000e3a:	d903      	bls.n	8000e44 <_vfiprintf_r+0x1cc>
 8000e3c:	2b00      	cmp	r3, #0
 8000e3e:	d0c6      	beq.n	8000dce <_vfiprintf_r+0x156>
 8000e40:	9105      	str	r1, [sp, #20]
 8000e42:	e7c4      	b.n	8000dce <_vfiprintf_r+0x156>
 8000e44:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e48:	4604      	mov	r4, r0
 8000e4a:	2301      	movs	r3, #1
 8000e4c:	e7f0      	b.n	8000e30 <_vfiprintf_r+0x1b8>
 8000e4e:	ab03      	add	r3, sp, #12
 8000e50:	9300      	str	r3, [sp, #0]
 8000e52:	462a      	mov	r2, r5
 8000e54:	4b13      	ldr	r3, [pc, #76]	@ (8000ea4 <_vfiprintf_r+0x22c>)
 8000e56:	a904      	add	r1, sp, #16
 8000e58:	4630      	mov	r0, r6
 8000e5a:	f3af 8000 	nop.w
 8000e5e:	4607      	mov	r7, r0
 8000e60:	1c78      	adds	r0, r7, #1
 8000e62:	d1d6      	bne.n	8000e12 <_vfiprintf_r+0x19a>
 8000e64:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e66:	07d9      	lsls	r1, r3, #31
 8000e68:	d405      	bmi.n	8000e76 <_vfiprintf_r+0x1fe>
 8000e6a:	89ab      	ldrh	r3, [r5, #12]
 8000e6c:	059a      	lsls	r2, r3, #22
 8000e6e:	d402      	bmi.n	8000e76 <_vfiprintf_r+0x1fe>
 8000e70:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e72:	f7ff fddf 	bl	8000a34 <__retarget_lock_release_recursive>
 8000e76:	89ab      	ldrh	r3, [r5, #12]
 8000e78:	065b      	lsls	r3, r3, #25
 8000e7a:	f53f af1f 	bmi.w	8000cbc <_vfiprintf_r+0x44>
 8000e7e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000e80:	e71e      	b.n	8000cc0 <_vfiprintf_r+0x48>
 8000e82:	ab03      	add	r3, sp, #12
 8000e84:	9300      	str	r3, [sp, #0]
 8000e86:	462a      	mov	r2, r5
 8000e88:	4b06      	ldr	r3, [pc, #24]	@ (8000ea4 <_vfiprintf_r+0x22c>)
 8000e8a:	a904      	add	r1, sp, #16
 8000e8c:	4630      	mov	r0, r6
 8000e8e:	f000 f879 	bl	8000f84 <_printf_i>
 8000e92:	e7e4      	b.n	8000e5e <_vfiprintf_r+0x1e6>
 8000e94:	080014ab 	.word	0x080014ab
 8000e98:	080014b1 	.word	0x080014b1
 8000e9c:	080014b5 	.word	0x080014b5
 8000ea0:	00000000 	.word	0x00000000
 8000ea4:	08000c53 	.word	0x08000c53

08000ea8 <_printf_common>:
 8000ea8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000eac:	4616      	mov	r6, r2
 8000eae:	4698      	mov	r8, r3
 8000eb0:	688a      	ldr	r2, [r1, #8]
 8000eb2:	690b      	ldr	r3, [r1, #16]
 8000eb4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000eb8:	4293      	cmp	r3, r2
 8000eba:	bfb8      	it	lt
 8000ebc:	4613      	movlt	r3, r2
 8000ebe:	6033      	str	r3, [r6, #0]
 8000ec0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000ec4:	4607      	mov	r7, r0
 8000ec6:	460c      	mov	r4, r1
 8000ec8:	b10a      	cbz	r2, 8000ece <_printf_common+0x26>
 8000eca:	3301      	adds	r3, #1
 8000ecc:	6033      	str	r3, [r6, #0]
 8000ece:	6823      	ldr	r3, [r4, #0]
 8000ed0:	0699      	lsls	r1, r3, #26
 8000ed2:	bf42      	ittt	mi
 8000ed4:	6833      	ldrmi	r3, [r6, #0]
 8000ed6:	3302      	addmi	r3, #2
 8000ed8:	6033      	strmi	r3, [r6, #0]
 8000eda:	6825      	ldr	r5, [r4, #0]
 8000edc:	f015 0506 	ands.w	r5, r5, #6
 8000ee0:	d106      	bne.n	8000ef0 <_printf_common+0x48>
 8000ee2:	f104 0a19 	add.w	sl, r4, #25
 8000ee6:	68e3      	ldr	r3, [r4, #12]
 8000ee8:	6832      	ldr	r2, [r6, #0]
 8000eea:	1a9b      	subs	r3, r3, r2
 8000eec:	42ab      	cmp	r3, r5
 8000eee:	dc26      	bgt.n	8000f3e <_printf_common+0x96>
 8000ef0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000ef4:	6822      	ldr	r2, [r4, #0]
 8000ef6:	3b00      	subs	r3, #0
 8000ef8:	bf18      	it	ne
 8000efa:	2301      	movne	r3, #1
 8000efc:	0692      	lsls	r2, r2, #26
 8000efe:	d42b      	bmi.n	8000f58 <_printf_common+0xb0>
 8000f00:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f04:	4641      	mov	r1, r8
 8000f06:	4638      	mov	r0, r7
 8000f08:	47c8      	blx	r9
 8000f0a:	3001      	adds	r0, #1
 8000f0c:	d01e      	beq.n	8000f4c <_printf_common+0xa4>
 8000f0e:	6823      	ldr	r3, [r4, #0]
 8000f10:	6922      	ldr	r2, [r4, #16]
 8000f12:	f003 0306 	and.w	r3, r3, #6
 8000f16:	2b04      	cmp	r3, #4
 8000f18:	bf02      	ittt	eq
 8000f1a:	68e5      	ldreq	r5, [r4, #12]
 8000f1c:	6833      	ldreq	r3, [r6, #0]
 8000f1e:	1aed      	subeq	r5, r5, r3
 8000f20:	68a3      	ldr	r3, [r4, #8]
 8000f22:	bf0c      	ite	eq
 8000f24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f28:	2500      	movne	r5, #0
 8000f2a:	4293      	cmp	r3, r2
 8000f2c:	bfc4      	itt	gt
 8000f2e:	1a9b      	subgt	r3, r3, r2
 8000f30:	18ed      	addgt	r5, r5, r3
 8000f32:	2600      	movs	r6, #0
 8000f34:	341a      	adds	r4, #26
 8000f36:	42b5      	cmp	r5, r6
 8000f38:	d11a      	bne.n	8000f70 <_printf_common+0xc8>
 8000f3a:	2000      	movs	r0, #0
 8000f3c:	e008      	b.n	8000f50 <_printf_common+0xa8>
 8000f3e:	2301      	movs	r3, #1
 8000f40:	4652      	mov	r2, sl
 8000f42:	4641      	mov	r1, r8
 8000f44:	4638      	mov	r0, r7
 8000f46:	47c8      	blx	r9
 8000f48:	3001      	adds	r0, #1
 8000f4a:	d103      	bne.n	8000f54 <_printf_common+0xac>
 8000f4c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f54:	3501      	adds	r5, #1
 8000f56:	e7c6      	b.n	8000ee6 <_printf_common+0x3e>
 8000f58:	18e1      	adds	r1, r4, r3
 8000f5a:	1c5a      	adds	r2, r3, #1
 8000f5c:	2030      	movs	r0, #48	@ 0x30
 8000f5e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000f62:	4422      	add	r2, r4
 8000f64:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000f68:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000f6c:	3302      	adds	r3, #2
 8000f6e:	e7c7      	b.n	8000f00 <_printf_common+0x58>
 8000f70:	2301      	movs	r3, #1
 8000f72:	4622      	mov	r2, r4
 8000f74:	4641      	mov	r1, r8
 8000f76:	4638      	mov	r0, r7
 8000f78:	47c8      	blx	r9
 8000f7a:	3001      	adds	r0, #1
 8000f7c:	d0e6      	beq.n	8000f4c <_printf_common+0xa4>
 8000f7e:	3601      	adds	r6, #1
 8000f80:	e7d9      	b.n	8000f36 <_printf_common+0x8e>
	...

08000f84 <_printf_i>:
 8000f84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f88:	7e0f      	ldrb	r7, [r1, #24]
 8000f8a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000f8c:	2f78      	cmp	r7, #120	@ 0x78
 8000f8e:	4691      	mov	r9, r2
 8000f90:	4680      	mov	r8, r0
 8000f92:	460c      	mov	r4, r1
 8000f94:	469a      	mov	sl, r3
 8000f96:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000f9a:	d807      	bhi.n	8000fac <_printf_i+0x28>
 8000f9c:	2f62      	cmp	r7, #98	@ 0x62
 8000f9e:	d80a      	bhi.n	8000fb6 <_printf_i+0x32>
 8000fa0:	2f00      	cmp	r7, #0
 8000fa2:	f000 80d2 	beq.w	800114a <_printf_i+0x1c6>
 8000fa6:	2f58      	cmp	r7, #88	@ 0x58
 8000fa8:	f000 80b9 	beq.w	800111e <_printf_i+0x19a>
 8000fac:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000fb0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000fb4:	e03a      	b.n	800102c <_printf_i+0xa8>
 8000fb6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000fba:	2b15      	cmp	r3, #21
 8000fbc:	d8f6      	bhi.n	8000fac <_printf_i+0x28>
 8000fbe:	a101      	add	r1, pc, #4	@ (adr r1, 8000fc4 <_printf_i+0x40>)
 8000fc0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fc4:	0800101d 	.word	0x0800101d
 8000fc8:	08001031 	.word	0x08001031
 8000fcc:	08000fad 	.word	0x08000fad
 8000fd0:	08000fad 	.word	0x08000fad
 8000fd4:	08000fad 	.word	0x08000fad
 8000fd8:	08000fad 	.word	0x08000fad
 8000fdc:	08001031 	.word	0x08001031
 8000fe0:	08000fad 	.word	0x08000fad
 8000fe4:	08000fad 	.word	0x08000fad
 8000fe8:	08000fad 	.word	0x08000fad
 8000fec:	08000fad 	.word	0x08000fad
 8000ff0:	08001131 	.word	0x08001131
 8000ff4:	0800105b 	.word	0x0800105b
 8000ff8:	080010eb 	.word	0x080010eb
 8000ffc:	08000fad 	.word	0x08000fad
 8001000:	08000fad 	.word	0x08000fad
 8001004:	08001153 	.word	0x08001153
 8001008:	08000fad 	.word	0x08000fad
 800100c:	0800105b 	.word	0x0800105b
 8001010:	08000fad 	.word	0x08000fad
 8001014:	08000fad 	.word	0x08000fad
 8001018:	080010f3 	.word	0x080010f3
 800101c:	6833      	ldr	r3, [r6, #0]
 800101e:	1d1a      	adds	r2, r3, #4
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	6032      	str	r2, [r6, #0]
 8001024:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001028:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800102c:	2301      	movs	r3, #1
 800102e:	e09d      	b.n	800116c <_printf_i+0x1e8>
 8001030:	6833      	ldr	r3, [r6, #0]
 8001032:	6820      	ldr	r0, [r4, #0]
 8001034:	1d19      	adds	r1, r3, #4
 8001036:	6031      	str	r1, [r6, #0]
 8001038:	0606      	lsls	r6, r0, #24
 800103a:	d501      	bpl.n	8001040 <_printf_i+0xbc>
 800103c:	681d      	ldr	r5, [r3, #0]
 800103e:	e003      	b.n	8001048 <_printf_i+0xc4>
 8001040:	0645      	lsls	r5, r0, #25
 8001042:	d5fb      	bpl.n	800103c <_printf_i+0xb8>
 8001044:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001048:	2d00      	cmp	r5, #0
 800104a:	da03      	bge.n	8001054 <_printf_i+0xd0>
 800104c:	232d      	movs	r3, #45	@ 0x2d
 800104e:	426d      	negs	r5, r5
 8001050:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001054:	4859      	ldr	r0, [pc, #356]	@ (80011bc <_printf_i+0x238>)
 8001056:	230a      	movs	r3, #10
 8001058:	e011      	b.n	800107e <_printf_i+0xfa>
 800105a:	6821      	ldr	r1, [r4, #0]
 800105c:	6833      	ldr	r3, [r6, #0]
 800105e:	0608      	lsls	r0, r1, #24
 8001060:	f853 5b04 	ldr.w	r5, [r3], #4
 8001064:	d402      	bmi.n	800106c <_printf_i+0xe8>
 8001066:	0649      	lsls	r1, r1, #25
 8001068:	bf48      	it	mi
 800106a:	b2ad      	uxthmi	r5, r5
 800106c:	2f6f      	cmp	r7, #111	@ 0x6f
 800106e:	4853      	ldr	r0, [pc, #332]	@ (80011bc <_printf_i+0x238>)
 8001070:	6033      	str	r3, [r6, #0]
 8001072:	bf14      	ite	ne
 8001074:	230a      	movne	r3, #10
 8001076:	2308      	moveq	r3, #8
 8001078:	2100      	movs	r1, #0
 800107a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800107e:	6866      	ldr	r6, [r4, #4]
 8001080:	60a6      	str	r6, [r4, #8]
 8001082:	2e00      	cmp	r6, #0
 8001084:	bfa2      	ittt	ge
 8001086:	6821      	ldrge	r1, [r4, #0]
 8001088:	f021 0104 	bicge.w	r1, r1, #4
 800108c:	6021      	strge	r1, [r4, #0]
 800108e:	b90d      	cbnz	r5, 8001094 <_printf_i+0x110>
 8001090:	2e00      	cmp	r6, #0
 8001092:	d04b      	beq.n	800112c <_printf_i+0x1a8>
 8001094:	4616      	mov	r6, r2
 8001096:	fbb5 f1f3 	udiv	r1, r5, r3
 800109a:	fb03 5711 	mls	r7, r3, r1, r5
 800109e:	5dc7      	ldrb	r7, [r0, r7]
 80010a0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80010a4:	462f      	mov	r7, r5
 80010a6:	42bb      	cmp	r3, r7
 80010a8:	460d      	mov	r5, r1
 80010aa:	d9f4      	bls.n	8001096 <_printf_i+0x112>
 80010ac:	2b08      	cmp	r3, #8
 80010ae:	d10b      	bne.n	80010c8 <_printf_i+0x144>
 80010b0:	6823      	ldr	r3, [r4, #0]
 80010b2:	07df      	lsls	r7, r3, #31
 80010b4:	d508      	bpl.n	80010c8 <_printf_i+0x144>
 80010b6:	6923      	ldr	r3, [r4, #16]
 80010b8:	6861      	ldr	r1, [r4, #4]
 80010ba:	4299      	cmp	r1, r3
 80010bc:	bfde      	ittt	le
 80010be:	2330      	movle	r3, #48	@ 0x30
 80010c0:	f806 3c01 	strble.w	r3, [r6, #-1]
 80010c4:	f106 36ff 	addle.w	r6, r6, #4294967295
 80010c8:	1b92      	subs	r2, r2, r6
 80010ca:	6122      	str	r2, [r4, #16]
 80010cc:	f8cd a000 	str.w	sl, [sp]
 80010d0:	464b      	mov	r3, r9
 80010d2:	aa03      	add	r2, sp, #12
 80010d4:	4621      	mov	r1, r4
 80010d6:	4640      	mov	r0, r8
 80010d8:	f7ff fee6 	bl	8000ea8 <_printf_common>
 80010dc:	3001      	adds	r0, #1
 80010de:	d14a      	bne.n	8001176 <_printf_i+0x1f2>
 80010e0:	f04f 30ff 	mov.w	r0, #4294967295
 80010e4:	b004      	add	sp, #16
 80010e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010ea:	6823      	ldr	r3, [r4, #0]
 80010ec:	f043 0320 	orr.w	r3, r3, #32
 80010f0:	6023      	str	r3, [r4, #0]
 80010f2:	4833      	ldr	r0, [pc, #204]	@ (80011c0 <_printf_i+0x23c>)
 80010f4:	2778      	movs	r7, #120	@ 0x78
 80010f6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80010fa:	6823      	ldr	r3, [r4, #0]
 80010fc:	6831      	ldr	r1, [r6, #0]
 80010fe:	061f      	lsls	r7, r3, #24
 8001100:	f851 5b04 	ldr.w	r5, [r1], #4
 8001104:	d402      	bmi.n	800110c <_printf_i+0x188>
 8001106:	065f      	lsls	r7, r3, #25
 8001108:	bf48      	it	mi
 800110a:	b2ad      	uxthmi	r5, r5
 800110c:	6031      	str	r1, [r6, #0]
 800110e:	07d9      	lsls	r1, r3, #31
 8001110:	bf44      	itt	mi
 8001112:	f043 0320 	orrmi.w	r3, r3, #32
 8001116:	6023      	strmi	r3, [r4, #0]
 8001118:	b11d      	cbz	r5, 8001122 <_printf_i+0x19e>
 800111a:	2310      	movs	r3, #16
 800111c:	e7ac      	b.n	8001078 <_printf_i+0xf4>
 800111e:	4827      	ldr	r0, [pc, #156]	@ (80011bc <_printf_i+0x238>)
 8001120:	e7e9      	b.n	80010f6 <_printf_i+0x172>
 8001122:	6823      	ldr	r3, [r4, #0]
 8001124:	f023 0320 	bic.w	r3, r3, #32
 8001128:	6023      	str	r3, [r4, #0]
 800112a:	e7f6      	b.n	800111a <_printf_i+0x196>
 800112c:	4616      	mov	r6, r2
 800112e:	e7bd      	b.n	80010ac <_printf_i+0x128>
 8001130:	6833      	ldr	r3, [r6, #0]
 8001132:	6825      	ldr	r5, [r4, #0]
 8001134:	6961      	ldr	r1, [r4, #20]
 8001136:	1d18      	adds	r0, r3, #4
 8001138:	6030      	str	r0, [r6, #0]
 800113a:	062e      	lsls	r6, r5, #24
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	d501      	bpl.n	8001144 <_printf_i+0x1c0>
 8001140:	6019      	str	r1, [r3, #0]
 8001142:	e002      	b.n	800114a <_printf_i+0x1c6>
 8001144:	0668      	lsls	r0, r5, #25
 8001146:	d5fb      	bpl.n	8001140 <_printf_i+0x1bc>
 8001148:	8019      	strh	r1, [r3, #0]
 800114a:	2300      	movs	r3, #0
 800114c:	6123      	str	r3, [r4, #16]
 800114e:	4616      	mov	r6, r2
 8001150:	e7bc      	b.n	80010cc <_printf_i+0x148>
 8001152:	6833      	ldr	r3, [r6, #0]
 8001154:	1d1a      	adds	r2, r3, #4
 8001156:	6032      	str	r2, [r6, #0]
 8001158:	681e      	ldr	r6, [r3, #0]
 800115a:	6862      	ldr	r2, [r4, #4]
 800115c:	2100      	movs	r1, #0
 800115e:	4630      	mov	r0, r6
 8001160:	f7ff f856 	bl	8000210 <memchr>
 8001164:	b108      	cbz	r0, 800116a <_printf_i+0x1e6>
 8001166:	1b80      	subs	r0, r0, r6
 8001168:	6060      	str	r0, [r4, #4]
 800116a:	6863      	ldr	r3, [r4, #4]
 800116c:	6123      	str	r3, [r4, #16]
 800116e:	2300      	movs	r3, #0
 8001170:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001174:	e7aa      	b.n	80010cc <_printf_i+0x148>
 8001176:	6923      	ldr	r3, [r4, #16]
 8001178:	4632      	mov	r2, r6
 800117a:	4649      	mov	r1, r9
 800117c:	4640      	mov	r0, r8
 800117e:	47d0      	blx	sl
 8001180:	3001      	adds	r0, #1
 8001182:	d0ad      	beq.n	80010e0 <_printf_i+0x15c>
 8001184:	6823      	ldr	r3, [r4, #0]
 8001186:	079b      	lsls	r3, r3, #30
 8001188:	d413      	bmi.n	80011b2 <_printf_i+0x22e>
 800118a:	68e0      	ldr	r0, [r4, #12]
 800118c:	9b03      	ldr	r3, [sp, #12]
 800118e:	4298      	cmp	r0, r3
 8001190:	bfb8      	it	lt
 8001192:	4618      	movlt	r0, r3
 8001194:	e7a6      	b.n	80010e4 <_printf_i+0x160>
 8001196:	2301      	movs	r3, #1
 8001198:	4632      	mov	r2, r6
 800119a:	4649      	mov	r1, r9
 800119c:	4640      	mov	r0, r8
 800119e:	47d0      	blx	sl
 80011a0:	3001      	adds	r0, #1
 80011a2:	d09d      	beq.n	80010e0 <_printf_i+0x15c>
 80011a4:	3501      	adds	r5, #1
 80011a6:	68e3      	ldr	r3, [r4, #12]
 80011a8:	9903      	ldr	r1, [sp, #12]
 80011aa:	1a5b      	subs	r3, r3, r1
 80011ac:	42ab      	cmp	r3, r5
 80011ae:	dcf2      	bgt.n	8001196 <_printf_i+0x212>
 80011b0:	e7eb      	b.n	800118a <_printf_i+0x206>
 80011b2:	2500      	movs	r5, #0
 80011b4:	f104 0619 	add.w	r6, r4, #25
 80011b8:	e7f5      	b.n	80011a6 <_printf_i+0x222>
 80011ba:	bf00      	nop
 80011bc:	080014bc 	.word	0x080014bc
 80011c0:	080014cd 	.word	0x080014cd

080011c4 <__sflush_r>:
 80011c4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80011c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011ca:	0716      	lsls	r6, r2, #28
 80011cc:	4605      	mov	r5, r0
 80011ce:	460c      	mov	r4, r1
 80011d0:	d454      	bmi.n	800127c <__sflush_r+0xb8>
 80011d2:	684b      	ldr	r3, [r1, #4]
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	dc02      	bgt.n	80011de <__sflush_r+0x1a>
 80011d8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80011da:	2b00      	cmp	r3, #0
 80011dc:	dd48      	ble.n	8001270 <__sflush_r+0xac>
 80011de:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80011e0:	2e00      	cmp	r6, #0
 80011e2:	d045      	beq.n	8001270 <__sflush_r+0xac>
 80011e4:	2300      	movs	r3, #0
 80011e6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80011ea:	682f      	ldr	r7, [r5, #0]
 80011ec:	6a21      	ldr	r1, [r4, #32]
 80011ee:	602b      	str	r3, [r5, #0]
 80011f0:	d030      	beq.n	8001254 <__sflush_r+0x90>
 80011f2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80011f4:	89a3      	ldrh	r3, [r4, #12]
 80011f6:	0759      	lsls	r1, r3, #29
 80011f8:	d505      	bpl.n	8001206 <__sflush_r+0x42>
 80011fa:	6863      	ldr	r3, [r4, #4]
 80011fc:	1ad2      	subs	r2, r2, r3
 80011fe:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001200:	b10b      	cbz	r3, 8001206 <__sflush_r+0x42>
 8001202:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001204:	1ad2      	subs	r2, r2, r3
 8001206:	2300      	movs	r3, #0
 8001208:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800120a:	6a21      	ldr	r1, [r4, #32]
 800120c:	4628      	mov	r0, r5
 800120e:	47b0      	blx	r6
 8001210:	1c43      	adds	r3, r0, #1
 8001212:	89a3      	ldrh	r3, [r4, #12]
 8001214:	d106      	bne.n	8001224 <__sflush_r+0x60>
 8001216:	6829      	ldr	r1, [r5, #0]
 8001218:	291d      	cmp	r1, #29
 800121a:	d82b      	bhi.n	8001274 <__sflush_r+0xb0>
 800121c:	4a28      	ldr	r2, [pc, #160]	@ (80012c0 <__sflush_r+0xfc>)
 800121e:	410a      	asrs	r2, r1
 8001220:	07d6      	lsls	r6, r2, #31
 8001222:	d427      	bmi.n	8001274 <__sflush_r+0xb0>
 8001224:	2200      	movs	r2, #0
 8001226:	6062      	str	r2, [r4, #4]
 8001228:	04d9      	lsls	r1, r3, #19
 800122a:	6922      	ldr	r2, [r4, #16]
 800122c:	6022      	str	r2, [r4, #0]
 800122e:	d504      	bpl.n	800123a <__sflush_r+0x76>
 8001230:	1c42      	adds	r2, r0, #1
 8001232:	d101      	bne.n	8001238 <__sflush_r+0x74>
 8001234:	682b      	ldr	r3, [r5, #0]
 8001236:	b903      	cbnz	r3, 800123a <__sflush_r+0x76>
 8001238:	6560      	str	r0, [r4, #84]	@ 0x54
 800123a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800123c:	602f      	str	r7, [r5, #0]
 800123e:	b1b9      	cbz	r1, 8001270 <__sflush_r+0xac>
 8001240:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001244:	4299      	cmp	r1, r3
 8001246:	d002      	beq.n	800124e <__sflush_r+0x8a>
 8001248:	4628      	mov	r0, r5
 800124a:	f7ff fbf5 	bl	8000a38 <_free_r>
 800124e:	2300      	movs	r3, #0
 8001250:	6363      	str	r3, [r4, #52]	@ 0x34
 8001252:	e00d      	b.n	8001270 <__sflush_r+0xac>
 8001254:	2301      	movs	r3, #1
 8001256:	4628      	mov	r0, r5
 8001258:	47b0      	blx	r6
 800125a:	4602      	mov	r2, r0
 800125c:	1c50      	adds	r0, r2, #1
 800125e:	d1c9      	bne.n	80011f4 <__sflush_r+0x30>
 8001260:	682b      	ldr	r3, [r5, #0]
 8001262:	2b00      	cmp	r3, #0
 8001264:	d0c6      	beq.n	80011f4 <__sflush_r+0x30>
 8001266:	2b1d      	cmp	r3, #29
 8001268:	d001      	beq.n	800126e <__sflush_r+0xaa>
 800126a:	2b16      	cmp	r3, #22
 800126c:	d11d      	bne.n	80012aa <__sflush_r+0xe6>
 800126e:	602f      	str	r7, [r5, #0]
 8001270:	2000      	movs	r0, #0
 8001272:	e021      	b.n	80012b8 <__sflush_r+0xf4>
 8001274:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001278:	b21b      	sxth	r3, r3
 800127a:	e01a      	b.n	80012b2 <__sflush_r+0xee>
 800127c:	690f      	ldr	r7, [r1, #16]
 800127e:	2f00      	cmp	r7, #0
 8001280:	d0f6      	beq.n	8001270 <__sflush_r+0xac>
 8001282:	0793      	lsls	r3, r2, #30
 8001284:	680e      	ldr	r6, [r1, #0]
 8001286:	bf08      	it	eq
 8001288:	694b      	ldreq	r3, [r1, #20]
 800128a:	600f      	str	r7, [r1, #0]
 800128c:	bf18      	it	ne
 800128e:	2300      	movne	r3, #0
 8001290:	1bf6      	subs	r6, r6, r7
 8001292:	608b      	str	r3, [r1, #8]
 8001294:	2e00      	cmp	r6, #0
 8001296:	ddeb      	ble.n	8001270 <__sflush_r+0xac>
 8001298:	6a21      	ldr	r1, [r4, #32]
 800129a:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 800129e:	4633      	mov	r3, r6
 80012a0:	463a      	mov	r2, r7
 80012a2:	4628      	mov	r0, r5
 80012a4:	47e0      	blx	ip
 80012a6:	2800      	cmp	r0, #0
 80012a8:	dc07      	bgt.n	80012ba <__sflush_r+0xf6>
 80012aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012b2:	81a3      	strh	r3, [r4, #12]
 80012b4:	f04f 30ff 	mov.w	r0, #4294967295
 80012b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012ba:	4407      	add	r7, r0
 80012bc:	1a36      	subs	r6, r6, r0
 80012be:	e7e9      	b.n	8001294 <__sflush_r+0xd0>
 80012c0:	dfbffffe 	.word	0xdfbffffe

080012c4 <_fflush_r>:
 80012c4:	b538      	push	{r3, r4, r5, lr}
 80012c6:	690b      	ldr	r3, [r1, #16]
 80012c8:	4605      	mov	r5, r0
 80012ca:	460c      	mov	r4, r1
 80012cc:	b913      	cbnz	r3, 80012d4 <_fflush_r+0x10>
 80012ce:	2500      	movs	r5, #0
 80012d0:	4628      	mov	r0, r5
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	b118      	cbz	r0, 80012de <_fflush_r+0x1a>
 80012d6:	6a03      	ldr	r3, [r0, #32]
 80012d8:	b90b      	cbnz	r3, 80012de <_fflush_r+0x1a>
 80012da:	f7ff f9b3 	bl	8000644 <__sinit>
 80012de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d0f3      	beq.n	80012ce <_fflush_r+0xa>
 80012e6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80012e8:	07d0      	lsls	r0, r2, #31
 80012ea:	d404      	bmi.n	80012f6 <_fflush_r+0x32>
 80012ec:	0599      	lsls	r1, r3, #22
 80012ee:	d402      	bmi.n	80012f6 <_fflush_r+0x32>
 80012f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80012f2:	f7ff fb9e 	bl	8000a32 <__retarget_lock_acquire_recursive>
 80012f6:	4628      	mov	r0, r5
 80012f8:	4621      	mov	r1, r4
 80012fa:	f7ff ff63 	bl	80011c4 <__sflush_r>
 80012fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001300:	07da      	lsls	r2, r3, #31
 8001302:	4605      	mov	r5, r0
 8001304:	d4e4      	bmi.n	80012d0 <_fflush_r+0xc>
 8001306:	89a3      	ldrh	r3, [r4, #12]
 8001308:	059b      	lsls	r3, r3, #22
 800130a:	d4e1      	bmi.n	80012d0 <_fflush_r+0xc>
 800130c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800130e:	f7ff fb91 	bl	8000a34 <__retarget_lock_release_recursive>
 8001312:	e7dd      	b.n	80012d0 <_fflush_r+0xc>

08001314 <__swhatbuf_r>:
 8001314:	b570      	push	{r4, r5, r6, lr}
 8001316:	460c      	mov	r4, r1
 8001318:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800131c:	2900      	cmp	r1, #0
 800131e:	b096      	sub	sp, #88	@ 0x58
 8001320:	4615      	mov	r5, r2
 8001322:	461e      	mov	r6, r3
 8001324:	da0d      	bge.n	8001342 <__swhatbuf_r+0x2e>
 8001326:	89a3      	ldrh	r3, [r4, #12]
 8001328:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800132c:	f04f 0100 	mov.w	r1, #0
 8001330:	bf14      	ite	ne
 8001332:	2340      	movne	r3, #64	@ 0x40
 8001334:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001338:	2000      	movs	r0, #0
 800133a:	6031      	str	r1, [r6, #0]
 800133c:	602b      	str	r3, [r5, #0]
 800133e:	b016      	add	sp, #88	@ 0x58
 8001340:	bd70      	pop	{r4, r5, r6, pc}
 8001342:	466a      	mov	r2, sp
 8001344:	f000 f848 	bl	80013d8 <_fstat_r>
 8001348:	2800      	cmp	r0, #0
 800134a:	dbec      	blt.n	8001326 <__swhatbuf_r+0x12>
 800134c:	9901      	ldr	r1, [sp, #4]
 800134e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001352:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001356:	4259      	negs	r1, r3
 8001358:	4159      	adcs	r1, r3
 800135a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800135e:	e7eb      	b.n	8001338 <__swhatbuf_r+0x24>

08001360 <__smakebuf_r>:
 8001360:	898b      	ldrh	r3, [r1, #12]
 8001362:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001364:	079d      	lsls	r5, r3, #30
 8001366:	4606      	mov	r6, r0
 8001368:	460c      	mov	r4, r1
 800136a:	d507      	bpl.n	800137c <__smakebuf_r+0x1c>
 800136c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001370:	6023      	str	r3, [r4, #0]
 8001372:	6123      	str	r3, [r4, #16]
 8001374:	2301      	movs	r3, #1
 8001376:	6163      	str	r3, [r4, #20]
 8001378:	b003      	add	sp, #12
 800137a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800137c:	ab01      	add	r3, sp, #4
 800137e:	466a      	mov	r2, sp
 8001380:	f7ff ffc8 	bl	8001314 <__swhatbuf_r>
 8001384:	9f00      	ldr	r7, [sp, #0]
 8001386:	4605      	mov	r5, r0
 8001388:	4639      	mov	r1, r7
 800138a:	4630      	mov	r0, r6
 800138c:	f7ff fbc0 	bl	8000b10 <_malloc_r>
 8001390:	b948      	cbnz	r0, 80013a6 <__smakebuf_r+0x46>
 8001392:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001396:	059a      	lsls	r2, r3, #22
 8001398:	d4ee      	bmi.n	8001378 <__smakebuf_r+0x18>
 800139a:	f023 0303 	bic.w	r3, r3, #3
 800139e:	f043 0302 	orr.w	r3, r3, #2
 80013a2:	81a3      	strh	r3, [r4, #12]
 80013a4:	e7e2      	b.n	800136c <__smakebuf_r+0xc>
 80013a6:	89a3      	ldrh	r3, [r4, #12]
 80013a8:	6020      	str	r0, [r4, #0]
 80013aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80013ae:	81a3      	strh	r3, [r4, #12]
 80013b0:	9b01      	ldr	r3, [sp, #4]
 80013b2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80013b6:	b15b      	cbz	r3, 80013d0 <__smakebuf_r+0x70>
 80013b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013bc:	4630      	mov	r0, r6
 80013be:	f000 f81d 	bl	80013fc <_isatty_r>
 80013c2:	b128      	cbz	r0, 80013d0 <__smakebuf_r+0x70>
 80013c4:	89a3      	ldrh	r3, [r4, #12]
 80013c6:	f023 0303 	bic.w	r3, r3, #3
 80013ca:	f043 0301 	orr.w	r3, r3, #1
 80013ce:	81a3      	strh	r3, [r4, #12]
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	431d      	orrs	r5, r3
 80013d4:	81a5      	strh	r5, [r4, #12]
 80013d6:	e7cf      	b.n	8001378 <__smakebuf_r+0x18>

080013d8 <_fstat_r>:
 80013d8:	b538      	push	{r3, r4, r5, lr}
 80013da:	4d07      	ldr	r5, [pc, #28]	@ (80013f8 <_fstat_r+0x20>)
 80013dc:	2300      	movs	r3, #0
 80013de:	4604      	mov	r4, r0
 80013e0:	4608      	mov	r0, r1
 80013e2:	4611      	mov	r1, r2
 80013e4:	602b      	str	r3, [r5, #0]
 80013e6:	f7ff f81b 	bl	8000420 <_fstat>
 80013ea:	1c43      	adds	r3, r0, #1
 80013ec:	d102      	bne.n	80013f4 <_fstat_r+0x1c>
 80013ee:	682b      	ldr	r3, [r5, #0]
 80013f0:	b103      	cbz	r3, 80013f4 <_fstat_r+0x1c>
 80013f2:	6023      	str	r3, [r4, #0]
 80013f4:	bd38      	pop	{r3, r4, r5, pc}
 80013f6:	bf00      	nop
 80013f8:	200001b8 	.word	0x200001b8

080013fc <_isatty_r>:
 80013fc:	b538      	push	{r3, r4, r5, lr}
 80013fe:	4d06      	ldr	r5, [pc, #24]	@ (8001418 <_isatty_r+0x1c>)
 8001400:	2300      	movs	r3, #0
 8001402:	4604      	mov	r4, r0
 8001404:	4608      	mov	r0, r1
 8001406:	602b      	str	r3, [r5, #0]
 8001408:	f7ff f819 	bl	800043e <_isatty>
 800140c:	1c43      	adds	r3, r0, #1
 800140e:	d102      	bne.n	8001416 <_isatty_r+0x1a>
 8001410:	682b      	ldr	r3, [r5, #0]
 8001412:	b103      	cbz	r3, 8001416 <_isatty_r+0x1a>
 8001414:	6023      	str	r3, [r4, #0]
 8001416:	bd38      	pop	{r3, r4, r5, pc}
 8001418:	200001b8 	.word	0x200001b8

0800141c <_sbrk_r>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	4d06      	ldr	r5, [pc, #24]	@ (8001438 <_sbrk_r+0x1c>)
 8001420:	2300      	movs	r3, #0
 8001422:	4604      	mov	r4, r0
 8001424:	4608      	mov	r0, r1
 8001426:	602b      	str	r3, [r5, #0]
 8001428:	f7ff f820 	bl	800046c <_sbrk>
 800142c:	1c43      	adds	r3, r0, #1
 800142e:	d102      	bne.n	8001436 <_sbrk_r+0x1a>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	b103      	cbz	r3, 8001436 <_sbrk_r+0x1a>
 8001434:	6023      	str	r3, [r4, #0]
 8001436:	bd38      	pop	{r3, r4, r5, pc}
 8001438:	200001b8 	.word	0x200001b8

0800143c <_init>:
 800143c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800143e:	bf00      	nop
 8001440:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001442:	bc08      	pop	{r3}
 8001444:	469e      	mov	lr, r3
 8001446:	4770      	bx	lr

08001448 <_fini>:
 8001448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800144a:	bf00      	nop
 800144c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800144e:	bc08      	pop	{r3}
 8001450:	469e      	mov	lr, r3
 8001452:	4770      	bx	lr
