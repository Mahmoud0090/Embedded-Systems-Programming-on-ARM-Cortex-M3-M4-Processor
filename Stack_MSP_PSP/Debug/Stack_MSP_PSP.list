
Stack_MSP_PSP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012c4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000090  08001494  08001494  00002494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001524  08001524  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001524  08001524  00002524  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800152c  0800152c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800152c  0800152c  0000252c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001530  08001530  00002530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001534  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001590  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001590  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a0f  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003bd  00000000  00000000  00003a95  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00003e58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000dc  00000000  00000000  00003f98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002ce8  00000000  00000000  00004074  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014be  00000000  00000000  00006d5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000988d  00000000  00000000  0000821a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011aa7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000be0  00000000  00000000  00011aec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000050  00000000  00000000  000126cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800147c 	.word	0x0800147c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	0800147c 	.word	0x0800147c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <func_add>:
#define STACK_MSP_END   (STACK_MSP_START + 512)
#define STACK_PSP_START   STACK_MSP_END


int func_add(int a , int b , int c , int d)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	60f8      	str	r0, [r7, #12]
 80002b8:	60b9      	str	r1, [r7, #8]
 80002ba:	607a      	str	r2, [r7, #4]
 80002bc:	603b      	str	r3, [r7, #0]
	return a+b+c+d;
 80002be:	68fa      	ldr	r2, [r7, #12]
 80002c0:	68bb      	ldr	r3, [r7, #8]
 80002c2:	441a      	add	r2, r3
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	441a      	add	r2, r3
 80002c8:	683b      	ldr	r3, [r7, #0]
 80002ca:	4413      	add	r3, r2
}
 80002cc:	4618      	mov	r0, r3
 80002ce:	3714      	adds	r7, #20
 80002d0:	46bd      	mov	sp, r7
 80002d2:	bc80      	pop	{r7}
 80002d4:	4770      	bx	lr
	...

080002d8 <change_sp_to_psp>:

__attribute__((naked)) void change_sp_to_psp(void)
{
    __asm volatile (
 80002d8:	4805      	ldr	r0, [pc, #20]	@ (80002f0 <change_sp_to_psp+0x18>)
 80002da:	f380 8809 	msr	PSP, r0
 80002de:	f04f 0002 	mov.w	r0, #2
 80002e2:	f380 8814 	msr	CONTROL, r0
 80002e6:	f3bf 8f6f 	isb	sy
 80002ea:	4770      	bx	lr
        "MOV R0, #0x02\n"        // Set CONTROL register to use PSP
        "MSR CONTROL, R0\n"
        "ISB\n"                  // Instruction Synchronization Barrier
        "BX LR\n"
    );
}
 80002ec:	bf00      	nop
 80002ee:	0000      	.short	0x0000
 80002f0:	2001ff80 	.word	0x2001ff80

080002f4 <print_SP_register_values>:

void print_SP_register_values(void)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b086      	sub	sp, #24
 80002f8:	af02      	add	r7, sp, #8
	uint32_t msp, psp, current_sp, control;

	// Read MSP (Main Stack Pointer)
	__asm volatile ("MRS %0, MSP" : "=r"(msp));
 80002fa:	f3ef 8308 	mrs	r3, MSP
 80002fe:	60fb      	str	r3, [r7, #12]

	// Read PSP (Process Stack Pointer)
	__asm volatile ("MRS %0, PSP" : "=r"(psp));
 8000300:	f3ef 8309 	mrs	r3, PSP
 8000304:	60bb      	str	r3, [r7, #8]

	// Read the current SP (Stack Pointer)
	__asm volatile ("MOV %0, SP" : "=r"(current_sp));
 8000306:	466b      	mov	r3, sp
 8000308:	607b      	str	r3, [r7, #4]

	// Read CONTROL register to check which SP is in use
	__asm volatile ("MRS %0, CONTROL" : "=r"(control));
 800030a:	f3ef 8314 	mrs	r3, CONTROL
 800030e:	603b      	str	r3, [r7, #0]

	// Print the values
	printf("MSP = 0x%08X, PSP = 0x%08X, SP = 0x%08X, CONTROL = 0x%08X\n",
 8000310:	683b      	ldr	r3, [r7, #0]
 8000312:	9300      	str	r3, [sp, #0]
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	68ba      	ldr	r2, [r7, #8]
 8000318:	68f9      	ldr	r1, [r7, #12]
 800031a:	4803      	ldr	r0, [pc, #12]	@ (8000328 <print_SP_register_values+0x34>)
 800031c:	f000 f9e8 	bl	80006f0 <iprintf>
			msp, psp, current_sp, control);
}
 8000320:	bf00      	nop
 8000322:	3710      	adds	r7, #16
 8000324:	46bd      	mov	sp, r7
 8000326:	bd80      	pop	{r7, pc}
 8000328:	08001494 	.word	0x08001494

0800032c <generate_execption>:

void generate_execption(void)
{
 800032c:	b480      	push	{r7}
 800032e:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0X2");
 8000330:	df02      	svc	2
}
 8000332:	bf00      	nop
 8000334:	46bd      	mov	sp, r7
 8000336:	bc80      	pop	{r7}
 8000338:	4770      	bx	lr
	...

0800033c <main>:

int main(void)
{
 800033c:	b580      	push	{r7, lr}
 800033e:	b082      	sub	sp, #8
 8000340:	af00      	add	r7, sp, #0

	print_SP_register_values();
 8000342:	f7ff ffd7 	bl	80002f4 <print_SP_register_values>

	change_sp_to_psp();
 8000346:	f7ff ffc7 	bl	80002d8 <change_sp_to_psp>

	print_SP_register_values();
 800034a:	f7ff ffd3 	bl	80002f4 <print_SP_register_values>


    int ret;

    ret = func_add(1 , 4 , 5 , 6);
 800034e:	2306      	movs	r3, #6
 8000350:	2205      	movs	r2, #5
 8000352:	2104      	movs	r1, #4
 8000354:	2001      	movs	r0, #1
 8000356:	f7ff ffab 	bl	80002b0 <func_add>
 800035a:	6078      	str	r0, [r7, #4]

    printf("result = %d\n" , ret);
 800035c:	6879      	ldr	r1, [r7, #4]
 800035e:	4804      	ldr	r0, [pc, #16]	@ (8000370 <main+0x34>)
 8000360:	f000 f9c6 	bl	80006f0 <iprintf>

    generate_execption();
 8000364:	f7ff ffe2 	bl	800032c <generate_execption>

    print_SP_register_values();
 8000368:	f7ff ffc4 	bl	80002f4 <print_SP_register_values>

	for(;;);
 800036c:	bf00      	nop
 800036e:	e7fd      	b.n	800036c <main+0x30>
 8000370:	080014d0 	.word	0x080014d0

08000374 <SVC_Handler>:
}

void SVC_Handler(void)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	af00      	add	r7, sp, #0
    print_SP_register_values();
 8000378:	f7ff ffbc 	bl	80002f4 <print_SP_register_values>
    printf("in SVC handler\n");
 800037c:	4802      	ldr	r0, [pc, #8]	@ (8000388 <SVC_Handler+0x14>)
 800037e:	f000 fa1f 	bl	80007c0 <puts>

    __asm volatile ("BX LR"); // Properly return from exception
 8000382:	4770      	bx	lr
}
 8000384:	bf00      	nop
 8000386:	bd80      	pop	{r7, pc}
 8000388:	080014e0 	.word	0x080014e0

0800038c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800038c:	b480      	push	{r7}
 800038e:	b083      	sub	sp, #12
 8000390:	af00      	add	r7, sp, #0
 8000392:	4603      	mov	r3, r0
 8000394:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000396:	4b0e      	ldr	r3, [pc, #56]	@ (80003d0 <ITM_SendChar+0x44>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	4a0d      	ldr	r2, [pc, #52]	@ (80003d0 <ITM_SendChar+0x44>)
 800039c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80003a0:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003a2:	4b0c      	ldr	r3, [pc, #48]	@ (80003d4 <ITM_SendChar+0x48>)
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	4a0b      	ldr	r2, [pc, #44]	@ (80003d4 <ITM_SendChar+0x48>)
 80003a8:	f043 0301 	orr.w	r3, r3, #1
 80003ac:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003ae:	bf00      	nop
 80003b0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	f003 0301 	and.w	r3, r3, #1
 80003ba:	2b00      	cmp	r3, #0
 80003bc:	d0f8      	beq.n	80003b0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003be:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80003c2:	79fb      	ldrb	r3, [r7, #7]
 80003c4:	6013      	str	r3, [r2, #0]
}
 80003c6:	bf00      	nop
 80003c8:	370c      	adds	r7, #12
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bc80      	pop	{r7}
 80003ce:	4770      	bx	lr
 80003d0:	e000edfc 	.word	0xe000edfc
 80003d4:	e0000e00 	.word	0xe0000e00

080003d8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b086      	sub	sp, #24
 80003dc:	af00      	add	r7, sp, #0
 80003de:	60f8      	str	r0, [r7, #12]
 80003e0:	60b9      	str	r1, [r7, #8]
 80003e2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e4:	2300      	movs	r3, #0
 80003e6:	617b      	str	r3, [r7, #20]
 80003e8:	e00a      	b.n	8000400 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003ea:	f3af 8000 	nop.w
 80003ee:	4601      	mov	r1, r0
 80003f0:	68bb      	ldr	r3, [r7, #8]
 80003f2:	1c5a      	adds	r2, r3, #1
 80003f4:	60ba      	str	r2, [r7, #8]
 80003f6:	b2ca      	uxtb	r2, r1
 80003f8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fa:	697b      	ldr	r3, [r7, #20]
 80003fc:	3301      	adds	r3, #1
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	697a      	ldr	r2, [r7, #20]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	429a      	cmp	r2, r3
 8000406:	dbf0      	blt.n	80003ea <_read+0x12>
  }

  return len;
 8000408:	687b      	ldr	r3, [r7, #4]
}
 800040a:	4618      	mov	r0, r3
 800040c:	3718      	adds	r7, #24
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}

08000412 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000412:	b580      	push	{r7, lr}
 8000414:	b086      	sub	sp, #24
 8000416:	af00      	add	r7, sp, #0
 8000418:	60f8      	str	r0, [r7, #12]
 800041a:	60b9      	str	r1, [r7, #8]
 800041c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041e:	2300      	movs	r3, #0
 8000420:	617b      	str	r3, [r7, #20]
 8000422:	e009      	b.n	8000438 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000424:	68bb      	ldr	r3, [r7, #8]
 8000426:	1c5a      	adds	r2, r3, #1
 8000428:	60ba      	str	r2, [r7, #8]
 800042a:	781b      	ldrb	r3, [r3, #0]
 800042c:	4618      	mov	r0, r3
 800042e:	f7ff ffad 	bl	800038c <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000432:	697b      	ldr	r3, [r7, #20]
 8000434:	3301      	adds	r3, #1
 8000436:	617b      	str	r3, [r7, #20]
 8000438:	697a      	ldr	r2, [r7, #20]
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	429a      	cmp	r2, r3
 800043e:	dbf1      	blt.n	8000424 <_write+0x12>
  }
  return len;
 8000440:	687b      	ldr	r3, [r7, #4]
}
 8000442:	4618      	mov	r0, r3
 8000444:	3718      	adds	r7, #24
 8000446:	46bd      	mov	sp, r7
 8000448:	bd80      	pop	{r7, pc}

0800044a <_close>:

int _close(int file)
{
 800044a:	b480      	push	{r7}
 800044c:	b083      	sub	sp, #12
 800044e:	af00      	add	r7, sp, #0
 8000450:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000452:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000456:	4618      	mov	r0, r3
 8000458:	370c      	adds	r7, #12
 800045a:	46bd      	mov	sp, r7
 800045c:	bc80      	pop	{r7}
 800045e:	4770      	bx	lr

08000460 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000460:	b480      	push	{r7}
 8000462:	b083      	sub	sp, #12
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
 8000468:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800046a:	683b      	ldr	r3, [r7, #0]
 800046c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000470:	605a      	str	r2, [r3, #4]
  return 0;
 8000472:	2300      	movs	r3, #0
}
 8000474:	4618      	mov	r0, r3
 8000476:	370c      	adds	r7, #12
 8000478:	46bd      	mov	sp, r7
 800047a:	bc80      	pop	{r7}
 800047c:	4770      	bx	lr

0800047e <_isatty>:

int _isatty(int file)
{
 800047e:	b480      	push	{r7}
 8000480:	b083      	sub	sp, #12
 8000482:	af00      	add	r7, sp, #0
 8000484:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000486:	2301      	movs	r3, #1
}
 8000488:	4618      	mov	r0, r3
 800048a:	370c      	adds	r7, #12
 800048c:	46bd      	mov	sp, r7
 800048e:	bc80      	pop	{r7}
 8000490:	4770      	bx	lr

08000492 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000492:	b480      	push	{r7}
 8000494:	b085      	sub	sp, #20
 8000496:	af00      	add	r7, sp, #0
 8000498:	60f8      	str	r0, [r7, #12]
 800049a:	60b9      	str	r1, [r7, #8]
 800049c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800049e:	2300      	movs	r3, #0
}
 80004a0:	4618      	mov	r0, r3
 80004a2:	3714      	adds	r7, #20
 80004a4:	46bd      	mov	sp, r7
 80004a6:	bc80      	pop	{r7}
 80004a8:	4770      	bx	lr
	...

080004ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004ac:	b580      	push	{r7, lr}
 80004ae:	b086      	sub	sp, #24
 80004b0:	af00      	add	r7, sp, #0
 80004b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004b4:	4a14      	ldr	r2, [pc, #80]	@ (8000508 <_sbrk+0x5c>)
 80004b6:	4b15      	ldr	r3, [pc, #84]	@ (800050c <_sbrk+0x60>)
 80004b8:	1ad3      	subs	r3, r2, r3
 80004ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004bc:	697b      	ldr	r3, [r7, #20]
 80004be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004c0:	4b13      	ldr	r3, [pc, #76]	@ (8000510 <_sbrk+0x64>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	2b00      	cmp	r3, #0
 80004c6:	d102      	bne.n	80004ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004c8:	4b11      	ldr	r3, [pc, #68]	@ (8000510 <_sbrk+0x64>)
 80004ca:	4a12      	ldr	r2, [pc, #72]	@ (8000514 <_sbrk+0x68>)
 80004cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004ce:	4b10      	ldr	r3, [pc, #64]	@ (8000510 <_sbrk+0x64>)
 80004d0:	681a      	ldr	r2, [r3, #0]
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	4413      	add	r3, r2
 80004d6:	693a      	ldr	r2, [r7, #16]
 80004d8:	429a      	cmp	r2, r3
 80004da:	d207      	bcs.n	80004ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004dc:	f000 fa9e 	bl	8000a1c <__errno>
 80004e0:	4603      	mov	r3, r0
 80004e2:	220c      	movs	r2, #12
 80004e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004e6:	f04f 33ff 	mov.w	r3, #4294967295
 80004ea:	e009      	b.n	8000500 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004ec:	4b08      	ldr	r3, [pc, #32]	@ (8000510 <_sbrk+0x64>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004f2:	4b07      	ldr	r3, [pc, #28]	@ (8000510 <_sbrk+0x64>)
 80004f4:	681a      	ldr	r2, [r3, #0]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	4413      	add	r3, r2
 80004fa:	4a05      	ldr	r2, [pc, #20]	@ (8000510 <_sbrk+0x64>)
 80004fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004fe:	68fb      	ldr	r3, [r7, #12]
}
 8000500:	4618      	mov	r0, r3
 8000502:	3718      	adds	r7, #24
 8000504:	46bd      	mov	sp, r7
 8000506:	bd80      	pop	{r7, pc}
 8000508:	20020000 	.word	0x20020000
 800050c:	00000400 	.word	0x00000400
 8000510:	20000078 	.word	0x20000078
 8000514:	200001c8 	.word	0x200001c8

08000518 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000518:	480d      	ldr	r0, [pc, #52]	@ (8000550 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800051a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800051c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000520:	480c      	ldr	r0, [pc, #48]	@ (8000554 <LoopForever+0x6>)
  ldr r1, =_edata
 8000522:	490d      	ldr	r1, [pc, #52]	@ (8000558 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000524:	4a0d      	ldr	r2, [pc, #52]	@ (800055c <LoopForever+0xe>)
  movs r3, #0
 8000526:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000528:	e002      	b.n	8000530 <LoopCopyDataInit>

0800052a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800052a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800052c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052e:	3304      	adds	r3, #4

08000530 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000530:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000532:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000534:	d3f9      	bcc.n	800052a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000536:	4a0a      	ldr	r2, [pc, #40]	@ (8000560 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000538:	4c0a      	ldr	r4, [pc, #40]	@ (8000564 <LoopForever+0x16>)
  movs r3, #0
 800053a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800053c:	e001      	b.n	8000542 <LoopFillZerobss>

0800053e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000540:	3204      	adds	r2, #4

08000542 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000542:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000544:	d3fb      	bcc.n	800053e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000546:	f000 fa6f 	bl	8000a28 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800054a:	f7ff fef7 	bl	800033c <main>

0800054e <LoopForever>:

LoopForever:
  b LoopForever
 800054e:	e7fe      	b.n	800054e <LoopForever>
  ldr   r0, =_estack
 8000550:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000554:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000558:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800055c:	08001534 	.word	0x08001534
  ldr r2, =_sbss
 8000560:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000564:	200001c8 	.word	0x200001c8

08000568 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000568:	e7fe      	b.n	8000568 <ADC_IRQHandler>
	...

0800056c <std>:
 800056c:	2300      	movs	r3, #0
 800056e:	b510      	push	{r4, lr}
 8000570:	4604      	mov	r4, r0
 8000572:	e9c0 3300 	strd	r3, r3, [r0]
 8000576:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800057a:	6083      	str	r3, [r0, #8]
 800057c:	8181      	strh	r1, [r0, #12]
 800057e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000580:	81c2      	strh	r2, [r0, #14]
 8000582:	6183      	str	r3, [r0, #24]
 8000584:	4619      	mov	r1, r3
 8000586:	2208      	movs	r2, #8
 8000588:	305c      	adds	r0, #92	@ 0x5c
 800058a:	f000 f9f9 	bl	8000980 <memset>
 800058e:	4b0d      	ldr	r3, [pc, #52]	@ (80005c4 <std+0x58>)
 8000590:	6263      	str	r3, [r4, #36]	@ 0x24
 8000592:	4b0d      	ldr	r3, [pc, #52]	@ (80005c8 <std+0x5c>)
 8000594:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000596:	4b0d      	ldr	r3, [pc, #52]	@ (80005cc <std+0x60>)
 8000598:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800059a:	4b0d      	ldr	r3, [pc, #52]	@ (80005d0 <std+0x64>)
 800059c:	6323      	str	r3, [r4, #48]	@ 0x30
 800059e:	4b0d      	ldr	r3, [pc, #52]	@ (80005d4 <std+0x68>)
 80005a0:	6224      	str	r4, [r4, #32]
 80005a2:	429c      	cmp	r4, r3
 80005a4:	d006      	beq.n	80005b4 <std+0x48>
 80005a6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80005aa:	4294      	cmp	r4, r2
 80005ac:	d002      	beq.n	80005b4 <std+0x48>
 80005ae:	33d0      	adds	r3, #208	@ 0xd0
 80005b0:	429c      	cmp	r4, r3
 80005b2:	d105      	bne.n	80005c0 <std+0x54>
 80005b4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80005b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005bc:	f000 ba58 	b.w	8000a70 <__retarget_lock_init_recursive>
 80005c0:	bd10      	pop	{r4, pc}
 80005c2:	bf00      	nop
 80005c4:	080007d1 	.word	0x080007d1
 80005c8:	080007f3 	.word	0x080007f3
 80005cc:	0800082b 	.word	0x0800082b
 80005d0:	0800084f 	.word	0x0800084f
 80005d4:	2000007c 	.word	0x2000007c

080005d8 <stdio_exit_handler>:
 80005d8:	4a02      	ldr	r2, [pc, #8]	@ (80005e4 <stdio_exit_handler+0xc>)
 80005da:	4903      	ldr	r1, [pc, #12]	@ (80005e8 <stdio_exit_handler+0x10>)
 80005dc:	4803      	ldr	r0, [pc, #12]	@ (80005ec <stdio_exit_handler+0x14>)
 80005de:	f000 b869 	b.w	80006b4 <_fwalk_sglue>
 80005e2:	bf00      	nop
 80005e4:	20000000 	.word	0x20000000
 80005e8:	08001305 	.word	0x08001305
 80005ec:	20000010 	.word	0x20000010

080005f0 <cleanup_stdio>:
 80005f0:	6841      	ldr	r1, [r0, #4]
 80005f2:	4b0c      	ldr	r3, [pc, #48]	@ (8000624 <cleanup_stdio+0x34>)
 80005f4:	4299      	cmp	r1, r3
 80005f6:	b510      	push	{r4, lr}
 80005f8:	4604      	mov	r4, r0
 80005fa:	d001      	beq.n	8000600 <cleanup_stdio+0x10>
 80005fc:	f000 fe82 	bl	8001304 <_fflush_r>
 8000600:	68a1      	ldr	r1, [r4, #8]
 8000602:	4b09      	ldr	r3, [pc, #36]	@ (8000628 <cleanup_stdio+0x38>)
 8000604:	4299      	cmp	r1, r3
 8000606:	d002      	beq.n	800060e <cleanup_stdio+0x1e>
 8000608:	4620      	mov	r0, r4
 800060a:	f000 fe7b 	bl	8001304 <_fflush_r>
 800060e:	68e1      	ldr	r1, [r4, #12]
 8000610:	4b06      	ldr	r3, [pc, #24]	@ (800062c <cleanup_stdio+0x3c>)
 8000612:	4299      	cmp	r1, r3
 8000614:	d004      	beq.n	8000620 <cleanup_stdio+0x30>
 8000616:	4620      	mov	r0, r4
 8000618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800061c:	f000 be72 	b.w	8001304 <_fflush_r>
 8000620:	bd10      	pop	{r4, pc}
 8000622:	bf00      	nop
 8000624:	2000007c 	.word	0x2000007c
 8000628:	200000e4 	.word	0x200000e4
 800062c:	2000014c 	.word	0x2000014c

08000630 <global_stdio_init.part.0>:
 8000630:	b510      	push	{r4, lr}
 8000632:	4b0b      	ldr	r3, [pc, #44]	@ (8000660 <global_stdio_init.part.0+0x30>)
 8000634:	4c0b      	ldr	r4, [pc, #44]	@ (8000664 <global_stdio_init.part.0+0x34>)
 8000636:	4a0c      	ldr	r2, [pc, #48]	@ (8000668 <global_stdio_init.part.0+0x38>)
 8000638:	601a      	str	r2, [r3, #0]
 800063a:	4620      	mov	r0, r4
 800063c:	2200      	movs	r2, #0
 800063e:	2104      	movs	r1, #4
 8000640:	f7ff ff94 	bl	800056c <std>
 8000644:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000648:	2201      	movs	r2, #1
 800064a:	2109      	movs	r1, #9
 800064c:	f7ff ff8e 	bl	800056c <std>
 8000650:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000654:	2202      	movs	r2, #2
 8000656:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800065a:	2112      	movs	r1, #18
 800065c:	f7ff bf86 	b.w	800056c <std>
 8000660:	200001b4 	.word	0x200001b4
 8000664:	2000007c 	.word	0x2000007c
 8000668:	080005d9 	.word	0x080005d9

0800066c <__sfp_lock_acquire>:
 800066c:	4801      	ldr	r0, [pc, #4]	@ (8000674 <__sfp_lock_acquire+0x8>)
 800066e:	f000 ba00 	b.w	8000a72 <__retarget_lock_acquire_recursive>
 8000672:	bf00      	nop
 8000674:	200001bd 	.word	0x200001bd

08000678 <__sfp_lock_release>:
 8000678:	4801      	ldr	r0, [pc, #4]	@ (8000680 <__sfp_lock_release+0x8>)
 800067a:	f000 b9fb 	b.w	8000a74 <__retarget_lock_release_recursive>
 800067e:	bf00      	nop
 8000680:	200001bd 	.word	0x200001bd

08000684 <__sinit>:
 8000684:	b510      	push	{r4, lr}
 8000686:	4604      	mov	r4, r0
 8000688:	f7ff fff0 	bl	800066c <__sfp_lock_acquire>
 800068c:	6a23      	ldr	r3, [r4, #32]
 800068e:	b11b      	cbz	r3, 8000698 <__sinit+0x14>
 8000690:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000694:	f7ff bff0 	b.w	8000678 <__sfp_lock_release>
 8000698:	4b04      	ldr	r3, [pc, #16]	@ (80006ac <__sinit+0x28>)
 800069a:	6223      	str	r3, [r4, #32]
 800069c:	4b04      	ldr	r3, [pc, #16]	@ (80006b0 <__sinit+0x2c>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	d1f5      	bne.n	8000690 <__sinit+0xc>
 80006a4:	f7ff ffc4 	bl	8000630 <global_stdio_init.part.0>
 80006a8:	e7f2      	b.n	8000690 <__sinit+0xc>
 80006aa:	bf00      	nop
 80006ac:	080005f1 	.word	0x080005f1
 80006b0:	200001b4 	.word	0x200001b4

080006b4 <_fwalk_sglue>:
 80006b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006b8:	4607      	mov	r7, r0
 80006ba:	4688      	mov	r8, r1
 80006bc:	4614      	mov	r4, r2
 80006be:	2600      	movs	r6, #0
 80006c0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006c4:	f1b9 0901 	subs.w	r9, r9, #1
 80006c8:	d505      	bpl.n	80006d6 <_fwalk_sglue+0x22>
 80006ca:	6824      	ldr	r4, [r4, #0]
 80006cc:	2c00      	cmp	r4, #0
 80006ce:	d1f7      	bne.n	80006c0 <_fwalk_sglue+0xc>
 80006d0:	4630      	mov	r0, r6
 80006d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006d6:	89ab      	ldrh	r3, [r5, #12]
 80006d8:	2b01      	cmp	r3, #1
 80006da:	d907      	bls.n	80006ec <_fwalk_sglue+0x38>
 80006dc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006e0:	3301      	adds	r3, #1
 80006e2:	d003      	beq.n	80006ec <_fwalk_sglue+0x38>
 80006e4:	4629      	mov	r1, r5
 80006e6:	4638      	mov	r0, r7
 80006e8:	47c0      	blx	r8
 80006ea:	4306      	orrs	r6, r0
 80006ec:	3568      	adds	r5, #104	@ 0x68
 80006ee:	e7e9      	b.n	80006c4 <_fwalk_sglue+0x10>

080006f0 <iprintf>:
 80006f0:	b40f      	push	{r0, r1, r2, r3}
 80006f2:	b507      	push	{r0, r1, r2, lr}
 80006f4:	4906      	ldr	r1, [pc, #24]	@ (8000710 <iprintf+0x20>)
 80006f6:	ab04      	add	r3, sp, #16
 80006f8:	6808      	ldr	r0, [r1, #0]
 80006fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80006fe:	6881      	ldr	r1, [r0, #8]
 8000700:	9301      	str	r3, [sp, #4]
 8000702:	f000 fad9 	bl	8000cb8 <_vfiprintf_r>
 8000706:	b003      	add	sp, #12
 8000708:	f85d eb04 	ldr.w	lr, [sp], #4
 800070c:	b004      	add	sp, #16
 800070e:	4770      	bx	lr
 8000710:	2000000c 	.word	0x2000000c

08000714 <_puts_r>:
 8000714:	6a03      	ldr	r3, [r0, #32]
 8000716:	b570      	push	{r4, r5, r6, lr}
 8000718:	6884      	ldr	r4, [r0, #8]
 800071a:	4605      	mov	r5, r0
 800071c:	460e      	mov	r6, r1
 800071e:	b90b      	cbnz	r3, 8000724 <_puts_r+0x10>
 8000720:	f7ff ffb0 	bl	8000684 <__sinit>
 8000724:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000726:	07db      	lsls	r3, r3, #31
 8000728:	d405      	bmi.n	8000736 <_puts_r+0x22>
 800072a:	89a3      	ldrh	r3, [r4, #12]
 800072c:	0598      	lsls	r0, r3, #22
 800072e:	d402      	bmi.n	8000736 <_puts_r+0x22>
 8000730:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000732:	f000 f99e 	bl	8000a72 <__retarget_lock_acquire_recursive>
 8000736:	89a3      	ldrh	r3, [r4, #12]
 8000738:	0719      	lsls	r1, r3, #28
 800073a:	d502      	bpl.n	8000742 <_puts_r+0x2e>
 800073c:	6923      	ldr	r3, [r4, #16]
 800073e:	2b00      	cmp	r3, #0
 8000740:	d135      	bne.n	80007ae <_puts_r+0x9a>
 8000742:	4621      	mov	r1, r4
 8000744:	4628      	mov	r0, r5
 8000746:	f000 f8c5 	bl	80008d4 <__swsetup_r>
 800074a:	b380      	cbz	r0, 80007ae <_puts_r+0x9a>
 800074c:	f04f 35ff 	mov.w	r5, #4294967295
 8000750:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000752:	07da      	lsls	r2, r3, #31
 8000754:	d405      	bmi.n	8000762 <_puts_r+0x4e>
 8000756:	89a3      	ldrh	r3, [r4, #12]
 8000758:	059b      	lsls	r3, r3, #22
 800075a:	d402      	bmi.n	8000762 <_puts_r+0x4e>
 800075c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800075e:	f000 f989 	bl	8000a74 <__retarget_lock_release_recursive>
 8000762:	4628      	mov	r0, r5
 8000764:	bd70      	pop	{r4, r5, r6, pc}
 8000766:	2b00      	cmp	r3, #0
 8000768:	da04      	bge.n	8000774 <_puts_r+0x60>
 800076a:	69a2      	ldr	r2, [r4, #24]
 800076c:	429a      	cmp	r2, r3
 800076e:	dc17      	bgt.n	80007a0 <_puts_r+0x8c>
 8000770:	290a      	cmp	r1, #10
 8000772:	d015      	beq.n	80007a0 <_puts_r+0x8c>
 8000774:	6823      	ldr	r3, [r4, #0]
 8000776:	1c5a      	adds	r2, r3, #1
 8000778:	6022      	str	r2, [r4, #0]
 800077a:	7019      	strb	r1, [r3, #0]
 800077c:	68a3      	ldr	r3, [r4, #8]
 800077e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000782:	3b01      	subs	r3, #1
 8000784:	60a3      	str	r3, [r4, #8]
 8000786:	2900      	cmp	r1, #0
 8000788:	d1ed      	bne.n	8000766 <_puts_r+0x52>
 800078a:	2b00      	cmp	r3, #0
 800078c:	da11      	bge.n	80007b2 <_puts_r+0x9e>
 800078e:	4622      	mov	r2, r4
 8000790:	210a      	movs	r1, #10
 8000792:	4628      	mov	r0, r5
 8000794:	f000 f85f 	bl	8000856 <__swbuf_r>
 8000798:	3001      	adds	r0, #1
 800079a:	d0d7      	beq.n	800074c <_puts_r+0x38>
 800079c:	250a      	movs	r5, #10
 800079e:	e7d7      	b.n	8000750 <_puts_r+0x3c>
 80007a0:	4622      	mov	r2, r4
 80007a2:	4628      	mov	r0, r5
 80007a4:	f000 f857 	bl	8000856 <__swbuf_r>
 80007a8:	3001      	adds	r0, #1
 80007aa:	d1e7      	bne.n	800077c <_puts_r+0x68>
 80007ac:	e7ce      	b.n	800074c <_puts_r+0x38>
 80007ae:	3e01      	subs	r6, #1
 80007b0:	e7e4      	b.n	800077c <_puts_r+0x68>
 80007b2:	6823      	ldr	r3, [r4, #0]
 80007b4:	1c5a      	adds	r2, r3, #1
 80007b6:	6022      	str	r2, [r4, #0]
 80007b8:	220a      	movs	r2, #10
 80007ba:	701a      	strb	r2, [r3, #0]
 80007bc:	e7ee      	b.n	800079c <_puts_r+0x88>
	...

080007c0 <puts>:
 80007c0:	4b02      	ldr	r3, [pc, #8]	@ (80007cc <puts+0xc>)
 80007c2:	4601      	mov	r1, r0
 80007c4:	6818      	ldr	r0, [r3, #0]
 80007c6:	f7ff bfa5 	b.w	8000714 <_puts_r>
 80007ca:	bf00      	nop
 80007cc:	2000000c 	.word	0x2000000c

080007d0 <__sread>:
 80007d0:	b510      	push	{r4, lr}
 80007d2:	460c      	mov	r4, r1
 80007d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007d8:	f000 f8fc 	bl	80009d4 <_read_r>
 80007dc:	2800      	cmp	r0, #0
 80007de:	bfab      	itete	ge
 80007e0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80007e2:	89a3      	ldrhlt	r3, [r4, #12]
 80007e4:	181b      	addge	r3, r3, r0
 80007e6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80007ea:	bfac      	ite	ge
 80007ec:	6563      	strge	r3, [r4, #84]	@ 0x54
 80007ee:	81a3      	strhlt	r3, [r4, #12]
 80007f0:	bd10      	pop	{r4, pc}

080007f2 <__swrite>:
 80007f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007f6:	461f      	mov	r7, r3
 80007f8:	898b      	ldrh	r3, [r1, #12]
 80007fa:	05db      	lsls	r3, r3, #23
 80007fc:	4605      	mov	r5, r0
 80007fe:	460c      	mov	r4, r1
 8000800:	4616      	mov	r6, r2
 8000802:	d505      	bpl.n	8000810 <__swrite+0x1e>
 8000804:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000808:	2302      	movs	r3, #2
 800080a:	2200      	movs	r2, #0
 800080c:	f000 f8d0 	bl	80009b0 <_lseek_r>
 8000810:	89a3      	ldrh	r3, [r4, #12]
 8000812:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000816:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800081a:	81a3      	strh	r3, [r4, #12]
 800081c:	4632      	mov	r2, r6
 800081e:	463b      	mov	r3, r7
 8000820:	4628      	mov	r0, r5
 8000822:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000826:	f000 b8e7 	b.w	80009f8 <_write_r>

0800082a <__sseek>:
 800082a:	b510      	push	{r4, lr}
 800082c:	460c      	mov	r4, r1
 800082e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000832:	f000 f8bd 	bl	80009b0 <_lseek_r>
 8000836:	1c43      	adds	r3, r0, #1
 8000838:	89a3      	ldrh	r3, [r4, #12]
 800083a:	bf15      	itete	ne
 800083c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800083e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000842:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000846:	81a3      	strheq	r3, [r4, #12]
 8000848:	bf18      	it	ne
 800084a:	81a3      	strhne	r3, [r4, #12]
 800084c:	bd10      	pop	{r4, pc}

0800084e <__sclose>:
 800084e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000852:	f000 b89d 	b.w	8000990 <_close_r>

08000856 <__swbuf_r>:
 8000856:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000858:	460e      	mov	r6, r1
 800085a:	4614      	mov	r4, r2
 800085c:	4605      	mov	r5, r0
 800085e:	b118      	cbz	r0, 8000868 <__swbuf_r+0x12>
 8000860:	6a03      	ldr	r3, [r0, #32]
 8000862:	b90b      	cbnz	r3, 8000868 <__swbuf_r+0x12>
 8000864:	f7ff ff0e 	bl	8000684 <__sinit>
 8000868:	69a3      	ldr	r3, [r4, #24]
 800086a:	60a3      	str	r3, [r4, #8]
 800086c:	89a3      	ldrh	r3, [r4, #12]
 800086e:	071a      	lsls	r2, r3, #28
 8000870:	d501      	bpl.n	8000876 <__swbuf_r+0x20>
 8000872:	6923      	ldr	r3, [r4, #16]
 8000874:	b943      	cbnz	r3, 8000888 <__swbuf_r+0x32>
 8000876:	4621      	mov	r1, r4
 8000878:	4628      	mov	r0, r5
 800087a:	f000 f82b 	bl	80008d4 <__swsetup_r>
 800087e:	b118      	cbz	r0, 8000888 <__swbuf_r+0x32>
 8000880:	f04f 37ff 	mov.w	r7, #4294967295
 8000884:	4638      	mov	r0, r7
 8000886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000888:	6823      	ldr	r3, [r4, #0]
 800088a:	6922      	ldr	r2, [r4, #16]
 800088c:	1a98      	subs	r0, r3, r2
 800088e:	6963      	ldr	r3, [r4, #20]
 8000890:	b2f6      	uxtb	r6, r6
 8000892:	4283      	cmp	r3, r0
 8000894:	4637      	mov	r7, r6
 8000896:	dc05      	bgt.n	80008a4 <__swbuf_r+0x4e>
 8000898:	4621      	mov	r1, r4
 800089a:	4628      	mov	r0, r5
 800089c:	f000 fd32 	bl	8001304 <_fflush_r>
 80008a0:	2800      	cmp	r0, #0
 80008a2:	d1ed      	bne.n	8000880 <__swbuf_r+0x2a>
 80008a4:	68a3      	ldr	r3, [r4, #8]
 80008a6:	3b01      	subs	r3, #1
 80008a8:	60a3      	str	r3, [r4, #8]
 80008aa:	6823      	ldr	r3, [r4, #0]
 80008ac:	1c5a      	adds	r2, r3, #1
 80008ae:	6022      	str	r2, [r4, #0]
 80008b0:	701e      	strb	r6, [r3, #0]
 80008b2:	6962      	ldr	r2, [r4, #20]
 80008b4:	1c43      	adds	r3, r0, #1
 80008b6:	429a      	cmp	r2, r3
 80008b8:	d004      	beq.n	80008c4 <__swbuf_r+0x6e>
 80008ba:	89a3      	ldrh	r3, [r4, #12]
 80008bc:	07db      	lsls	r3, r3, #31
 80008be:	d5e1      	bpl.n	8000884 <__swbuf_r+0x2e>
 80008c0:	2e0a      	cmp	r6, #10
 80008c2:	d1df      	bne.n	8000884 <__swbuf_r+0x2e>
 80008c4:	4621      	mov	r1, r4
 80008c6:	4628      	mov	r0, r5
 80008c8:	f000 fd1c 	bl	8001304 <_fflush_r>
 80008cc:	2800      	cmp	r0, #0
 80008ce:	d0d9      	beq.n	8000884 <__swbuf_r+0x2e>
 80008d0:	e7d6      	b.n	8000880 <__swbuf_r+0x2a>
	...

080008d4 <__swsetup_r>:
 80008d4:	b538      	push	{r3, r4, r5, lr}
 80008d6:	4b29      	ldr	r3, [pc, #164]	@ (800097c <__swsetup_r+0xa8>)
 80008d8:	4605      	mov	r5, r0
 80008da:	6818      	ldr	r0, [r3, #0]
 80008dc:	460c      	mov	r4, r1
 80008de:	b118      	cbz	r0, 80008e8 <__swsetup_r+0x14>
 80008e0:	6a03      	ldr	r3, [r0, #32]
 80008e2:	b90b      	cbnz	r3, 80008e8 <__swsetup_r+0x14>
 80008e4:	f7ff fece 	bl	8000684 <__sinit>
 80008e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008ec:	0719      	lsls	r1, r3, #28
 80008ee:	d422      	bmi.n	8000936 <__swsetup_r+0x62>
 80008f0:	06da      	lsls	r2, r3, #27
 80008f2:	d407      	bmi.n	8000904 <__swsetup_r+0x30>
 80008f4:	2209      	movs	r2, #9
 80008f6:	602a      	str	r2, [r5, #0]
 80008f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80008fc:	81a3      	strh	r3, [r4, #12]
 80008fe:	f04f 30ff 	mov.w	r0, #4294967295
 8000902:	e033      	b.n	800096c <__swsetup_r+0x98>
 8000904:	0758      	lsls	r0, r3, #29
 8000906:	d512      	bpl.n	800092e <__swsetup_r+0x5a>
 8000908:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800090a:	b141      	cbz	r1, 800091e <__swsetup_r+0x4a>
 800090c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000910:	4299      	cmp	r1, r3
 8000912:	d002      	beq.n	800091a <__swsetup_r+0x46>
 8000914:	4628      	mov	r0, r5
 8000916:	f000 f8af 	bl	8000a78 <_free_r>
 800091a:	2300      	movs	r3, #0
 800091c:	6363      	str	r3, [r4, #52]	@ 0x34
 800091e:	89a3      	ldrh	r3, [r4, #12]
 8000920:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000924:	81a3      	strh	r3, [r4, #12]
 8000926:	2300      	movs	r3, #0
 8000928:	6063      	str	r3, [r4, #4]
 800092a:	6923      	ldr	r3, [r4, #16]
 800092c:	6023      	str	r3, [r4, #0]
 800092e:	89a3      	ldrh	r3, [r4, #12]
 8000930:	f043 0308 	orr.w	r3, r3, #8
 8000934:	81a3      	strh	r3, [r4, #12]
 8000936:	6923      	ldr	r3, [r4, #16]
 8000938:	b94b      	cbnz	r3, 800094e <__swsetup_r+0x7a>
 800093a:	89a3      	ldrh	r3, [r4, #12]
 800093c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000940:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000944:	d003      	beq.n	800094e <__swsetup_r+0x7a>
 8000946:	4621      	mov	r1, r4
 8000948:	4628      	mov	r0, r5
 800094a:	f000 fd29 	bl	80013a0 <__smakebuf_r>
 800094e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000952:	f013 0201 	ands.w	r2, r3, #1
 8000956:	d00a      	beq.n	800096e <__swsetup_r+0x9a>
 8000958:	2200      	movs	r2, #0
 800095a:	60a2      	str	r2, [r4, #8]
 800095c:	6962      	ldr	r2, [r4, #20]
 800095e:	4252      	negs	r2, r2
 8000960:	61a2      	str	r2, [r4, #24]
 8000962:	6922      	ldr	r2, [r4, #16]
 8000964:	b942      	cbnz	r2, 8000978 <__swsetup_r+0xa4>
 8000966:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800096a:	d1c5      	bne.n	80008f8 <__swsetup_r+0x24>
 800096c:	bd38      	pop	{r3, r4, r5, pc}
 800096e:	0799      	lsls	r1, r3, #30
 8000970:	bf58      	it	pl
 8000972:	6962      	ldrpl	r2, [r4, #20]
 8000974:	60a2      	str	r2, [r4, #8]
 8000976:	e7f4      	b.n	8000962 <__swsetup_r+0x8e>
 8000978:	2000      	movs	r0, #0
 800097a:	e7f7      	b.n	800096c <__swsetup_r+0x98>
 800097c:	2000000c 	.word	0x2000000c

08000980 <memset>:
 8000980:	4402      	add	r2, r0
 8000982:	4603      	mov	r3, r0
 8000984:	4293      	cmp	r3, r2
 8000986:	d100      	bne.n	800098a <memset+0xa>
 8000988:	4770      	bx	lr
 800098a:	f803 1b01 	strb.w	r1, [r3], #1
 800098e:	e7f9      	b.n	8000984 <memset+0x4>

08000990 <_close_r>:
 8000990:	b538      	push	{r3, r4, r5, lr}
 8000992:	4d06      	ldr	r5, [pc, #24]	@ (80009ac <_close_r+0x1c>)
 8000994:	2300      	movs	r3, #0
 8000996:	4604      	mov	r4, r0
 8000998:	4608      	mov	r0, r1
 800099a:	602b      	str	r3, [r5, #0]
 800099c:	f7ff fd55 	bl	800044a <_close>
 80009a0:	1c43      	adds	r3, r0, #1
 80009a2:	d102      	bne.n	80009aa <_close_r+0x1a>
 80009a4:	682b      	ldr	r3, [r5, #0]
 80009a6:	b103      	cbz	r3, 80009aa <_close_r+0x1a>
 80009a8:	6023      	str	r3, [r4, #0]
 80009aa:	bd38      	pop	{r3, r4, r5, pc}
 80009ac:	200001b8 	.word	0x200001b8

080009b0 <_lseek_r>:
 80009b0:	b538      	push	{r3, r4, r5, lr}
 80009b2:	4d07      	ldr	r5, [pc, #28]	@ (80009d0 <_lseek_r+0x20>)
 80009b4:	4604      	mov	r4, r0
 80009b6:	4608      	mov	r0, r1
 80009b8:	4611      	mov	r1, r2
 80009ba:	2200      	movs	r2, #0
 80009bc:	602a      	str	r2, [r5, #0]
 80009be:	461a      	mov	r2, r3
 80009c0:	f7ff fd67 	bl	8000492 <_lseek>
 80009c4:	1c43      	adds	r3, r0, #1
 80009c6:	d102      	bne.n	80009ce <_lseek_r+0x1e>
 80009c8:	682b      	ldr	r3, [r5, #0]
 80009ca:	b103      	cbz	r3, 80009ce <_lseek_r+0x1e>
 80009cc:	6023      	str	r3, [r4, #0]
 80009ce:	bd38      	pop	{r3, r4, r5, pc}
 80009d0:	200001b8 	.word	0x200001b8

080009d4 <_read_r>:
 80009d4:	b538      	push	{r3, r4, r5, lr}
 80009d6:	4d07      	ldr	r5, [pc, #28]	@ (80009f4 <_read_r+0x20>)
 80009d8:	4604      	mov	r4, r0
 80009da:	4608      	mov	r0, r1
 80009dc:	4611      	mov	r1, r2
 80009de:	2200      	movs	r2, #0
 80009e0:	602a      	str	r2, [r5, #0]
 80009e2:	461a      	mov	r2, r3
 80009e4:	f7ff fcf8 	bl	80003d8 <_read>
 80009e8:	1c43      	adds	r3, r0, #1
 80009ea:	d102      	bne.n	80009f2 <_read_r+0x1e>
 80009ec:	682b      	ldr	r3, [r5, #0]
 80009ee:	b103      	cbz	r3, 80009f2 <_read_r+0x1e>
 80009f0:	6023      	str	r3, [r4, #0]
 80009f2:	bd38      	pop	{r3, r4, r5, pc}
 80009f4:	200001b8 	.word	0x200001b8

080009f8 <_write_r>:
 80009f8:	b538      	push	{r3, r4, r5, lr}
 80009fa:	4d07      	ldr	r5, [pc, #28]	@ (8000a18 <_write_r+0x20>)
 80009fc:	4604      	mov	r4, r0
 80009fe:	4608      	mov	r0, r1
 8000a00:	4611      	mov	r1, r2
 8000a02:	2200      	movs	r2, #0
 8000a04:	602a      	str	r2, [r5, #0]
 8000a06:	461a      	mov	r2, r3
 8000a08:	f7ff fd03 	bl	8000412 <_write>
 8000a0c:	1c43      	adds	r3, r0, #1
 8000a0e:	d102      	bne.n	8000a16 <_write_r+0x1e>
 8000a10:	682b      	ldr	r3, [r5, #0]
 8000a12:	b103      	cbz	r3, 8000a16 <_write_r+0x1e>
 8000a14:	6023      	str	r3, [r4, #0]
 8000a16:	bd38      	pop	{r3, r4, r5, pc}
 8000a18:	200001b8 	.word	0x200001b8

08000a1c <__errno>:
 8000a1c:	4b01      	ldr	r3, [pc, #4]	@ (8000a24 <__errno+0x8>)
 8000a1e:	6818      	ldr	r0, [r3, #0]
 8000a20:	4770      	bx	lr
 8000a22:	bf00      	nop
 8000a24:	2000000c 	.word	0x2000000c

08000a28 <__libc_init_array>:
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	4d0d      	ldr	r5, [pc, #52]	@ (8000a60 <__libc_init_array+0x38>)
 8000a2c:	4c0d      	ldr	r4, [pc, #52]	@ (8000a64 <__libc_init_array+0x3c>)
 8000a2e:	1b64      	subs	r4, r4, r5
 8000a30:	10a4      	asrs	r4, r4, #2
 8000a32:	2600      	movs	r6, #0
 8000a34:	42a6      	cmp	r6, r4
 8000a36:	d109      	bne.n	8000a4c <__libc_init_array+0x24>
 8000a38:	4d0b      	ldr	r5, [pc, #44]	@ (8000a68 <__libc_init_array+0x40>)
 8000a3a:	4c0c      	ldr	r4, [pc, #48]	@ (8000a6c <__libc_init_array+0x44>)
 8000a3c:	f000 fd1e 	bl	800147c <_init>
 8000a40:	1b64      	subs	r4, r4, r5
 8000a42:	10a4      	asrs	r4, r4, #2
 8000a44:	2600      	movs	r6, #0
 8000a46:	42a6      	cmp	r6, r4
 8000a48:	d105      	bne.n	8000a56 <__libc_init_array+0x2e>
 8000a4a:	bd70      	pop	{r4, r5, r6, pc}
 8000a4c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a50:	4798      	blx	r3
 8000a52:	3601      	adds	r6, #1
 8000a54:	e7ee      	b.n	8000a34 <__libc_init_array+0xc>
 8000a56:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a5a:	4798      	blx	r3
 8000a5c:	3601      	adds	r6, #1
 8000a5e:	e7f2      	b.n	8000a46 <__libc_init_array+0x1e>
 8000a60:	0800152c 	.word	0x0800152c
 8000a64:	0800152c 	.word	0x0800152c
 8000a68:	0800152c 	.word	0x0800152c
 8000a6c:	08001530 	.word	0x08001530

08000a70 <__retarget_lock_init_recursive>:
 8000a70:	4770      	bx	lr

08000a72 <__retarget_lock_acquire_recursive>:
 8000a72:	4770      	bx	lr

08000a74 <__retarget_lock_release_recursive>:
 8000a74:	4770      	bx	lr
	...

08000a78 <_free_r>:
 8000a78:	b538      	push	{r3, r4, r5, lr}
 8000a7a:	4605      	mov	r5, r0
 8000a7c:	2900      	cmp	r1, #0
 8000a7e:	d041      	beq.n	8000b04 <_free_r+0x8c>
 8000a80:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a84:	1f0c      	subs	r4, r1, #4
 8000a86:	2b00      	cmp	r3, #0
 8000a88:	bfb8      	it	lt
 8000a8a:	18e4      	addlt	r4, r4, r3
 8000a8c:	f000 f8e0 	bl	8000c50 <__malloc_lock>
 8000a90:	4a1d      	ldr	r2, [pc, #116]	@ (8000b08 <_free_r+0x90>)
 8000a92:	6813      	ldr	r3, [r2, #0]
 8000a94:	b933      	cbnz	r3, 8000aa4 <_free_r+0x2c>
 8000a96:	6063      	str	r3, [r4, #4]
 8000a98:	6014      	str	r4, [r2, #0]
 8000a9a:	4628      	mov	r0, r5
 8000a9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000aa0:	f000 b8dc 	b.w	8000c5c <__malloc_unlock>
 8000aa4:	42a3      	cmp	r3, r4
 8000aa6:	d908      	bls.n	8000aba <_free_r+0x42>
 8000aa8:	6820      	ldr	r0, [r4, #0]
 8000aaa:	1821      	adds	r1, r4, r0
 8000aac:	428b      	cmp	r3, r1
 8000aae:	bf01      	itttt	eq
 8000ab0:	6819      	ldreq	r1, [r3, #0]
 8000ab2:	685b      	ldreq	r3, [r3, #4]
 8000ab4:	1809      	addeq	r1, r1, r0
 8000ab6:	6021      	streq	r1, [r4, #0]
 8000ab8:	e7ed      	b.n	8000a96 <_free_r+0x1e>
 8000aba:	461a      	mov	r2, r3
 8000abc:	685b      	ldr	r3, [r3, #4]
 8000abe:	b10b      	cbz	r3, 8000ac4 <_free_r+0x4c>
 8000ac0:	42a3      	cmp	r3, r4
 8000ac2:	d9fa      	bls.n	8000aba <_free_r+0x42>
 8000ac4:	6811      	ldr	r1, [r2, #0]
 8000ac6:	1850      	adds	r0, r2, r1
 8000ac8:	42a0      	cmp	r0, r4
 8000aca:	d10b      	bne.n	8000ae4 <_free_r+0x6c>
 8000acc:	6820      	ldr	r0, [r4, #0]
 8000ace:	4401      	add	r1, r0
 8000ad0:	1850      	adds	r0, r2, r1
 8000ad2:	4283      	cmp	r3, r0
 8000ad4:	6011      	str	r1, [r2, #0]
 8000ad6:	d1e0      	bne.n	8000a9a <_free_r+0x22>
 8000ad8:	6818      	ldr	r0, [r3, #0]
 8000ada:	685b      	ldr	r3, [r3, #4]
 8000adc:	6053      	str	r3, [r2, #4]
 8000ade:	4408      	add	r0, r1
 8000ae0:	6010      	str	r0, [r2, #0]
 8000ae2:	e7da      	b.n	8000a9a <_free_r+0x22>
 8000ae4:	d902      	bls.n	8000aec <_free_r+0x74>
 8000ae6:	230c      	movs	r3, #12
 8000ae8:	602b      	str	r3, [r5, #0]
 8000aea:	e7d6      	b.n	8000a9a <_free_r+0x22>
 8000aec:	6820      	ldr	r0, [r4, #0]
 8000aee:	1821      	adds	r1, r4, r0
 8000af0:	428b      	cmp	r3, r1
 8000af2:	bf04      	itt	eq
 8000af4:	6819      	ldreq	r1, [r3, #0]
 8000af6:	685b      	ldreq	r3, [r3, #4]
 8000af8:	6063      	str	r3, [r4, #4]
 8000afa:	bf04      	itt	eq
 8000afc:	1809      	addeq	r1, r1, r0
 8000afe:	6021      	streq	r1, [r4, #0]
 8000b00:	6054      	str	r4, [r2, #4]
 8000b02:	e7ca      	b.n	8000a9a <_free_r+0x22>
 8000b04:	bd38      	pop	{r3, r4, r5, pc}
 8000b06:	bf00      	nop
 8000b08:	200001c4 	.word	0x200001c4

08000b0c <sbrk_aligned>:
 8000b0c:	b570      	push	{r4, r5, r6, lr}
 8000b0e:	4e0f      	ldr	r6, [pc, #60]	@ (8000b4c <sbrk_aligned+0x40>)
 8000b10:	460c      	mov	r4, r1
 8000b12:	6831      	ldr	r1, [r6, #0]
 8000b14:	4605      	mov	r5, r0
 8000b16:	b911      	cbnz	r1, 8000b1e <sbrk_aligned+0x12>
 8000b18:	f000 fca0 	bl	800145c <_sbrk_r>
 8000b1c:	6030      	str	r0, [r6, #0]
 8000b1e:	4621      	mov	r1, r4
 8000b20:	4628      	mov	r0, r5
 8000b22:	f000 fc9b 	bl	800145c <_sbrk_r>
 8000b26:	1c43      	adds	r3, r0, #1
 8000b28:	d103      	bne.n	8000b32 <sbrk_aligned+0x26>
 8000b2a:	f04f 34ff 	mov.w	r4, #4294967295
 8000b2e:	4620      	mov	r0, r4
 8000b30:	bd70      	pop	{r4, r5, r6, pc}
 8000b32:	1cc4      	adds	r4, r0, #3
 8000b34:	f024 0403 	bic.w	r4, r4, #3
 8000b38:	42a0      	cmp	r0, r4
 8000b3a:	d0f8      	beq.n	8000b2e <sbrk_aligned+0x22>
 8000b3c:	1a21      	subs	r1, r4, r0
 8000b3e:	4628      	mov	r0, r5
 8000b40:	f000 fc8c 	bl	800145c <_sbrk_r>
 8000b44:	3001      	adds	r0, #1
 8000b46:	d1f2      	bne.n	8000b2e <sbrk_aligned+0x22>
 8000b48:	e7ef      	b.n	8000b2a <sbrk_aligned+0x1e>
 8000b4a:	bf00      	nop
 8000b4c:	200001c0 	.word	0x200001c0

08000b50 <_malloc_r>:
 8000b50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b54:	1ccd      	adds	r5, r1, #3
 8000b56:	f025 0503 	bic.w	r5, r5, #3
 8000b5a:	3508      	adds	r5, #8
 8000b5c:	2d0c      	cmp	r5, #12
 8000b5e:	bf38      	it	cc
 8000b60:	250c      	movcc	r5, #12
 8000b62:	2d00      	cmp	r5, #0
 8000b64:	4606      	mov	r6, r0
 8000b66:	db01      	blt.n	8000b6c <_malloc_r+0x1c>
 8000b68:	42a9      	cmp	r1, r5
 8000b6a:	d904      	bls.n	8000b76 <_malloc_r+0x26>
 8000b6c:	230c      	movs	r3, #12
 8000b6e:	6033      	str	r3, [r6, #0]
 8000b70:	2000      	movs	r0, #0
 8000b72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b76:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c4c <_malloc_r+0xfc>
 8000b7a:	f000 f869 	bl	8000c50 <__malloc_lock>
 8000b7e:	f8d8 3000 	ldr.w	r3, [r8]
 8000b82:	461c      	mov	r4, r3
 8000b84:	bb44      	cbnz	r4, 8000bd8 <_malloc_r+0x88>
 8000b86:	4629      	mov	r1, r5
 8000b88:	4630      	mov	r0, r6
 8000b8a:	f7ff ffbf 	bl	8000b0c <sbrk_aligned>
 8000b8e:	1c43      	adds	r3, r0, #1
 8000b90:	4604      	mov	r4, r0
 8000b92:	d158      	bne.n	8000c46 <_malloc_r+0xf6>
 8000b94:	f8d8 4000 	ldr.w	r4, [r8]
 8000b98:	4627      	mov	r7, r4
 8000b9a:	2f00      	cmp	r7, #0
 8000b9c:	d143      	bne.n	8000c26 <_malloc_r+0xd6>
 8000b9e:	2c00      	cmp	r4, #0
 8000ba0:	d04b      	beq.n	8000c3a <_malloc_r+0xea>
 8000ba2:	6823      	ldr	r3, [r4, #0]
 8000ba4:	4639      	mov	r1, r7
 8000ba6:	4630      	mov	r0, r6
 8000ba8:	eb04 0903 	add.w	r9, r4, r3
 8000bac:	f000 fc56 	bl	800145c <_sbrk_r>
 8000bb0:	4581      	cmp	r9, r0
 8000bb2:	d142      	bne.n	8000c3a <_malloc_r+0xea>
 8000bb4:	6821      	ldr	r1, [r4, #0]
 8000bb6:	1a6d      	subs	r5, r5, r1
 8000bb8:	4629      	mov	r1, r5
 8000bba:	4630      	mov	r0, r6
 8000bbc:	f7ff ffa6 	bl	8000b0c <sbrk_aligned>
 8000bc0:	3001      	adds	r0, #1
 8000bc2:	d03a      	beq.n	8000c3a <_malloc_r+0xea>
 8000bc4:	6823      	ldr	r3, [r4, #0]
 8000bc6:	442b      	add	r3, r5
 8000bc8:	6023      	str	r3, [r4, #0]
 8000bca:	f8d8 3000 	ldr.w	r3, [r8]
 8000bce:	685a      	ldr	r2, [r3, #4]
 8000bd0:	bb62      	cbnz	r2, 8000c2c <_malloc_r+0xdc>
 8000bd2:	f8c8 7000 	str.w	r7, [r8]
 8000bd6:	e00f      	b.n	8000bf8 <_malloc_r+0xa8>
 8000bd8:	6822      	ldr	r2, [r4, #0]
 8000bda:	1b52      	subs	r2, r2, r5
 8000bdc:	d420      	bmi.n	8000c20 <_malloc_r+0xd0>
 8000bde:	2a0b      	cmp	r2, #11
 8000be0:	d917      	bls.n	8000c12 <_malloc_r+0xc2>
 8000be2:	1961      	adds	r1, r4, r5
 8000be4:	42a3      	cmp	r3, r4
 8000be6:	6025      	str	r5, [r4, #0]
 8000be8:	bf18      	it	ne
 8000bea:	6059      	strne	r1, [r3, #4]
 8000bec:	6863      	ldr	r3, [r4, #4]
 8000bee:	bf08      	it	eq
 8000bf0:	f8c8 1000 	streq.w	r1, [r8]
 8000bf4:	5162      	str	r2, [r4, r5]
 8000bf6:	604b      	str	r3, [r1, #4]
 8000bf8:	4630      	mov	r0, r6
 8000bfa:	f000 f82f 	bl	8000c5c <__malloc_unlock>
 8000bfe:	f104 000b 	add.w	r0, r4, #11
 8000c02:	1d23      	adds	r3, r4, #4
 8000c04:	f020 0007 	bic.w	r0, r0, #7
 8000c08:	1ac2      	subs	r2, r0, r3
 8000c0a:	bf1c      	itt	ne
 8000c0c:	1a1b      	subne	r3, r3, r0
 8000c0e:	50a3      	strne	r3, [r4, r2]
 8000c10:	e7af      	b.n	8000b72 <_malloc_r+0x22>
 8000c12:	6862      	ldr	r2, [r4, #4]
 8000c14:	42a3      	cmp	r3, r4
 8000c16:	bf0c      	ite	eq
 8000c18:	f8c8 2000 	streq.w	r2, [r8]
 8000c1c:	605a      	strne	r2, [r3, #4]
 8000c1e:	e7eb      	b.n	8000bf8 <_malloc_r+0xa8>
 8000c20:	4623      	mov	r3, r4
 8000c22:	6864      	ldr	r4, [r4, #4]
 8000c24:	e7ae      	b.n	8000b84 <_malloc_r+0x34>
 8000c26:	463c      	mov	r4, r7
 8000c28:	687f      	ldr	r7, [r7, #4]
 8000c2a:	e7b6      	b.n	8000b9a <_malloc_r+0x4a>
 8000c2c:	461a      	mov	r2, r3
 8000c2e:	685b      	ldr	r3, [r3, #4]
 8000c30:	42a3      	cmp	r3, r4
 8000c32:	d1fb      	bne.n	8000c2c <_malloc_r+0xdc>
 8000c34:	2300      	movs	r3, #0
 8000c36:	6053      	str	r3, [r2, #4]
 8000c38:	e7de      	b.n	8000bf8 <_malloc_r+0xa8>
 8000c3a:	230c      	movs	r3, #12
 8000c3c:	6033      	str	r3, [r6, #0]
 8000c3e:	4630      	mov	r0, r6
 8000c40:	f000 f80c 	bl	8000c5c <__malloc_unlock>
 8000c44:	e794      	b.n	8000b70 <_malloc_r+0x20>
 8000c46:	6005      	str	r5, [r0, #0]
 8000c48:	e7d6      	b.n	8000bf8 <_malloc_r+0xa8>
 8000c4a:	bf00      	nop
 8000c4c:	200001c4 	.word	0x200001c4

08000c50 <__malloc_lock>:
 8000c50:	4801      	ldr	r0, [pc, #4]	@ (8000c58 <__malloc_lock+0x8>)
 8000c52:	f7ff bf0e 	b.w	8000a72 <__retarget_lock_acquire_recursive>
 8000c56:	bf00      	nop
 8000c58:	200001bc 	.word	0x200001bc

08000c5c <__malloc_unlock>:
 8000c5c:	4801      	ldr	r0, [pc, #4]	@ (8000c64 <__malloc_unlock+0x8>)
 8000c5e:	f7ff bf09 	b.w	8000a74 <__retarget_lock_release_recursive>
 8000c62:	bf00      	nop
 8000c64:	200001bc 	.word	0x200001bc

08000c68 <__sfputc_r>:
 8000c68:	6893      	ldr	r3, [r2, #8]
 8000c6a:	3b01      	subs	r3, #1
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	b410      	push	{r4}
 8000c70:	6093      	str	r3, [r2, #8]
 8000c72:	da07      	bge.n	8000c84 <__sfputc_r+0x1c>
 8000c74:	6994      	ldr	r4, [r2, #24]
 8000c76:	42a3      	cmp	r3, r4
 8000c78:	db01      	blt.n	8000c7e <__sfputc_r+0x16>
 8000c7a:	290a      	cmp	r1, #10
 8000c7c:	d102      	bne.n	8000c84 <__sfputc_r+0x1c>
 8000c7e:	bc10      	pop	{r4}
 8000c80:	f7ff bde9 	b.w	8000856 <__swbuf_r>
 8000c84:	6813      	ldr	r3, [r2, #0]
 8000c86:	1c58      	adds	r0, r3, #1
 8000c88:	6010      	str	r0, [r2, #0]
 8000c8a:	7019      	strb	r1, [r3, #0]
 8000c8c:	4608      	mov	r0, r1
 8000c8e:	bc10      	pop	{r4}
 8000c90:	4770      	bx	lr

08000c92 <__sfputs_r>:
 8000c92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c94:	4606      	mov	r6, r0
 8000c96:	460f      	mov	r7, r1
 8000c98:	4614      	mov	r4, r2
 8000c9a:	18d5      	adds	r5, r2, r3
 8000c9c:	42ac      	cmp	r4, r5
 8000c9e:	d101      	bne.n	8000ca4 <__sfputs_r+0x12>
 8000ca0:	2000      	movs	r0, #0
 8000ca2:	e007      	b.n	8000cb4 <__sfputs_r+0x22>
 8000ca4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ca8:	463a      	mov	r2, r7
 8000caa:	4630      	mov	r0, r6
 8000cac:	f7ff ffdc 	bl	8000c68 <__sfputc_r>
 8000cb0:	1c43      	adds	r3, r0, #1
 8000cb2:	d1f3      	bne.n	8000c9c <__sfputs_r+0xa>
 8000cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cb8 <_vfiprintf_r>:
 8000cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cbc:	460d      	mov	r5, r1
 8000cbe:	b09d      	sub	sp, #116	@ 0x74
 8000cc0:	4614      	mov	r4, r2
 8000cc2:	4698      	mov	r8, r3
 8000cc4:	4606      	mov	r6, r0
 8000cc6:	b118      	cbz	r0, 8000cd0 <_vfiprintf_r+0x18>
 8000cc8:	6a03      	ldr	r3, [r0, #32]
 8000cca:	b90b      	cbnz	r3, 8000cd0 <_vfiprintf_r+0x18>
 8000ccc:	f7ff fcda 	bl	8000684 <__sinit>
 8000cd0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cd2:	07d9      	lsls	r1, r3, #31
 8000cd4:	d405      	bmi.n	8000ce2 <_vfiprintf_r+0x2a>
 8000cd6:	89ab      	ldrh	r3, [r5, #12]
 8000cd8:	059a      	lsls	r2, r3, #22
 8000cda:	d402      	bmi.n	8000ce2 <_vfiprintf_r+0x2a>
 8000cdc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cde:	f7ff fec8 	bl	8000a72 <__retarget_lock_acquire_recursive>
 8000ce2:	89ab      	ldrh	r3, [r5, #12]
 8000ce4:	071b      	lsls	r3, r3, #28
 8000ce6:	d501      	bpl.n	8000cec <_vfiprintf_r+0x34>
 8000ce8:	692b      	ldr	r3, [r5, #16]
 8000cea:	b99b      	cbnz	r3, 8000d14 <_vfiprintf_r+0x5c>
 8000cec:	4629      	mov	r1, r5
 8000cee:	4630      	mov	r0, r6
 8000cf0:	f7ff fdf0 	bl	80008d4 <__swsetup_r>
 8000cf4:	b170      	cbz	r0, 8000d14 <_vfiprintf_r+0x5c>
 8000cf6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cf8:	07dc      	lsls	r4, r3, #31
 8000cfa:	d504      	bpl.n	8000d06 <_vfiprintf_r+0x4e>
 8000cfc:	f04f 30ff 	mov.w	r0, #4294967295
 8000d00:	b01d      	add	sp, #116	@ 0x74
 8000d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d06:	89ab      	ldrh	r3, [r5, #12]
 8000d08:	0598      	lsls	r0, r3, #22
 8000d0a:	d4f7      	bmi.n	8000cfc <_vfiprintf_r+0x44>
 8000d0c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d0e:	f7ff feb1 	bl	8000a74 <__retarget_lock_release_recursive>
 8000d12:	e7f3      	b.n	8000cfc <_vfiprintf_r+0x44>
 8000d14:	2300      	movs	r3, #0
 8000d16:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d18:	2320      	movs	r3, #32
 8000d1a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d1e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d22:	2330      	movs	r3, #48	@ 0x30
 8000d24:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000ed4 <_vfiprintf_r+0x21c>
 8000d28:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d2c:	f04f 0901 	mov.w	r9, #1
 8000d30:	4623      	mov	r3, r4
 8000d32:	469a      	mov	sl, r3
 8000d34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d38:	b10a      	cbz	r2, 8000d3e <_vfiprintf_r+0x86>
 8000d3a:	2a25      	cmp	r2, #37	@ 0x25
 8000d3c:	d1f9      	bne.n	8000d32 <_vfiprintf_r+0x7a>
 8000d3e:	ebba 0b04 	subs.w	fp, sl, r4
 8000d42:	d00b      	beq.n	8000d5c <_vfiprintf_r+0xa4>
 8000d44:	465b      	mov	r3, fp
 8000d46:	4622      	mov	r2, r4
 8000d48:	4629      	mov	r1, r5
 8000d4a:	4630      	mov	r0, r6
 8000d4c:	f7ff ffa1 	bl	8000c92 <__sfputs_r>
 8000d50:	3001      	adds	r0, #1
 8000d52:	f000 80a7 	beq.w	8000ea4 <_vfiprintf_r+0x1ec>
 8000d56:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d58:	445a      	add	r2, fp
 8000d5a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d5c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	f000 809f 	beq.w	8000ea4 <_vfiprintf_r+0x1ec>
 8000d66:	2300      	movs	r3, #0
 8000d68:	f04f 32ff 	mov.w	r2, #4294967295
 8000d6c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d70:	f10a 0a01 	add.w	sl, sl, #1
 8000d74:	9304      	str	r3, [sp, #16]
 8000d76:	9307      	str	r3, [sp, #28]
 8000d78:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d7c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d7e:	4654      	mov	r4, sl
 8000d80:	2205      	movs	r2, #5
 8000d82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d86:	4853      	ldr	r0, [pc, #332]	@ (8000ed4 <_vfiprintf_r+0x21c>)
 8000d88:	f7ff fa42 	bl	8000210 <memchr>
 8000d8c:	9a04      	ldr	r2, [sp, #16]
 8000d8e:	b9d8      	cbnz	r0, 8000dc8 <_vfiprintf_r+0x110>
 8000d90:	06d1      	lsls	r1, r2, #27
 8000d92:	bf44      	itt	mi
 8000d94:	2320      	movmi	r3, #32
 8000d96:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d9a:	0713      	lsls	r3, r2, #28
 8000d9c:	bf44      	itt	mi
 8000d9e:	232b      	movmi	r3, #43	@ 0x2b
 8000da0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000da4:	f89a 3000 	ldrb.w	r3, [sl]
 8000da8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000daa:	d015      	beq.n	8000dd8 <_vfiprintf_r+0x120>
 8000dac:	9a07      	ldr	r2, [sp, #28]
 8000dae:	4654      	mov	r4, sl
 8000db0:	2000      	movs	r0, #0
 8000db2:	f04f 0c0a 	mov.w	ip, #10
 8000db6:	4621      	mov	r1, r4
 8000db8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dbc:	3b30      	subs	r3, #48	@ 0x30
 8000dbe:	2b09      	cmp	r3, #9
 8000dc0:	d94b      	bls.n	8000e5a <_vfiprintf_r+0x1a2>
 8000dc2:	b1b0      	cbz	r0, 8000df2 <_vfiprintf_r+0x13a>
 8000dc4:	9207      	str	r2, [sp, #28]
 8000dc6:	e014      	b.n	8000df2 <_vfiprintf_r+0x13a>
 8000dc8:	eba0 0308 	sub.w	r3, r0, r8
 8000dcc:	fa09 f303 	lsl.w	r3, r9, r3
 8000dd0:	4313      	orrs	r3, r2
 8000dd2:	9304      	str	r3, [sp, #16]
 8000dd4:	46a2      	mov	sl, r4
 8000dd6:	e7d2      	b.n	8000d7e <_vfiprintf_r+0xc6>
 8000dd8:	9b03      	ldr	r3, [sp, #12]
 8000dda:	1d19      	adds	r1, r3, #4
 8000ddc:	681b      	ldr	r3, [r3, #0]
 8000dde:	9103      	str	r1, [sp, #12]
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	bfbb      	ittet	lt
 8000de4:	425b      	neglt	r3, r3
 8000de6:	f042 0202 	orrlt.w	r2, r2, #2
 8000dea:	9307      	strge	r3, [sp, #28]
 8000dec:	9307      	strlt	r3, [sp, #28]
 8000dee:	bfb8      	it	lt
 8000df0:	9204      	strlt	r2, [sp, #16]
 8000df2:	7823      	ldrb	r3, [r4, #0]
 8000df4:	2b2e      	cmp	r3, #46	@ 0x2e
 8000df6:	d10a      	bne.n	8000e0e <_vfiprintf_r+0x156>
 8000df8:	7863      	ldrb	r3, [r4, #1]
 8000dfa:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dfc:	d132      	bne.n	8000e64 <_vfiprintf_r+0x1ac>
 8000dfe:	9b03      	ldr	r3, [sp, #12]
 8000e00:	1d1a      	adds	r2, r3, #4
 8000e02:	681b      	ldr	r3, [r3, #0]
 8000e04:	9203      	str	r2, [sp, #12]
 8000e06:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e0a:	3402      	adds	r4, #2
 8000e0c:	9305      	str	r3, [sp, #20]
 8000e0e:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000ed8 <_vfiprintf_r+0x220>
 8000e12:	7821      	ldrb	r1, [r4, #0]
 8000e14:	2203      	movs	r2, #3
 8000e16:	4650      	mov	r0, sl
 8000e18:	f7ff f9fa 	bl	8000210 <memchr>
 8000e1c:	b138      	cbz	r0, 8000e2e <_vfiprintf_r+0x176>
 8000e1e:	9b04      	ldr	r3, [sp, #16]
 8000e20:	eba0 000a 	sub.w	r0, r0, sl
 8000e24:	2240      	movs	r2, #64	@ 0x40
 8000e26:	4082      	lsls	r2, r0
 8000e28:	4313      	orrs	r3, r2
 8000e2a:	3401      	adds	r4, #1
 8000e2c:	9304      	str	r3, [sp, #16]
 8000e2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e32:	482a      	ldr	r0, [pc, #168]	@ (8000edc <_vfiprintf_r+0x224>)
 8000e34:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000e38:	2206      	movs	r2, #6
 8000e3a:	f7ff f9e9 	bl	8000210 <memchr>
 8000e3e:	2800      	cmp	r0, #0
 8000e40:	d03f      	beq.n	8000ec2 <_vfiprintf_r+0x20a>
 8000e42:	4b27      	ldr	r3, [pc, #156]	@ (8000ee0 <_vfiprintf_r+0x228>)
 8000e44:	bb1b      	cbnz	r3, 8000e8e <_vfiprintf_r+0x1d6>
 8000e46:	9b03      	ldr	r3, [sp, #12]
 8000e48:	3307      	adds	r3, #7
 8000e4a:	f023 0307 	bic.w	r3, r3, #7
 8000e4e:	3308      	adds	r3, #8
 8000e50:	9303      	str	r3, [sp, #12]
 8000e52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e54:	443b      	add	r3, r7
 8000e56:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e58:	e76a      	b.n	8000d30 <_vfiprintf_r+0x78>
 8000e5a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e5e:	460c      	mov	r4, r1
 8000e60:	2001      	movs	r0, #1
 8000e62:	e7a8      	b.n	8000db6 <_vfiprintf_r+0xfe>
 8000e64:	2300      	movs	r3, #0
 8000e66:	3401      	adds	r4, #1
 8000e68:	9305      	str	r3, [sp, #20]
 8000e6a:	4619      	mov	r1, r3
 8000e6c:	f04f 0c0a 	mov.w	ip, #10
 8000e70:	4620      	mov	r0, r4
 8000e72:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e76:	3a30      	subs	r2, #48	@ 0x30
 8000e78:	2a09      	cmp	r2, #9
 8000e7a:	d903      	bls.n	8000e84 <_vfiprintf_r+0x1cc>
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	d0c6      	beq.n	8000e0e <_vfiprintf_r+0x156>
 8000e80:	9105      	str	r1, [sp, #20]
 8000e82:	e7c4      	b.n	8000e0e <_vfiprintf_r+0x156>
 8000e84:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e88:	4604      	mov	r4, r0
 8000e8a:	2301      	movs	r3, #1
 8000e8c:	e7f0      	b.n	8000e70 <_vfiprintf_r+0x1b8>
 8000e8e:	ab03      	add	r3, sp, #12
 8000e90:	9300      	str	r3, [sp, #0]
 8000e92:	462a      	mov	r2, r5
 8000e94:	4b13      	ldr	r3, [pc, #76]	@ (8000ee4 <_vfiprintf_r+0x22c>)
 8000e96:	a904      	add	r1, sp, #16
 8000e98:	4630      	mov	r0, r6
 8000e9a:	f3af 8000 	nop.w
 8000e9e:	4607      	mov	r7, r0
 8000ea0:	1c78      	adds	r0, r7, #1
 8000ea2:	d1d6      	bne.n	8000e52 <_vfiprintf_r+0x19a>
 8000ea4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ea6:	07d9      	lsls	r1, r3, #31
 8000ea8:	d405      	bmi.n	8000eb6 <_vfiprintf_r+0x1fe>
 8000eaa:	89ab      	ldrh	r3, [r5, #12]
 8000eac:	059a      	lsls	r2, r3, #22
 8000eae:	d402      	bmi.n	8000eb6 <_vfiprintf_r+0x1fe>
 8000eb0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000eb2:	f7ff fddf 	bl	8000a74 <__retarget_lock_release_recursive>
 8000eb6:	89ab      	ldrh	r3, [r5, #12]
 8000eb8:	065b      	lsls	r3, r3, #25
 8000eba:	f53f af1f 	bmi.w	8000cfc <_vfiprintf_r+0x44>
 8000ebe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000ec0:	e71e      	b.n	8000d00 <_vfiprintf_r+0x48>
 8000ec2:	ab03      	add	r3, sp, #12
 8000ec4:	9300      	str	r3, [sp, #0]
 8000ec6:	462a      	mov	r2, r5
 8000ec8:	4b06      	ldr	r3, [pc, #24]	@ (8000ee4 <_vfiprintf_r+0x22c>)
 8000eca:	a904      	add	r1, sp, #16
 8000ecc:	4630      	mov	r0, r6
 8000ece:	f000 f879 	bl	8000fc4 <_printf_i>
 8000ed2:	e7e4      	b.n	8000e9e <_vfiprintf_r+0x1e6>
 8000ed4:	080014ef 	.word	0x080014ef
 8000ed8:	080014f5 	.word	0x080014f5
 8000edc:	080014f9 	.word	0x080014f9
 8000ee0:	00000000 	.word	0x00000000
 8000ee4:	08000c93 	.word	0x08000c93

08000ee8 <_printf_common>:
 8000ee8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000eec:	4616      	mov	r6, r2
 8000eee:	4698      	mov	r8, r3
 8000ef0:	688a      	ldr	r2, [r1, #8]
 8000ef2:	690b      	ldr	r3, [r1, #16]
 8000ef4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ef8:	4293      	cmp	r3, r2
 8000efa:	bfb8      	it	lt
 8000efc:	4613      	movlt	r3, r2
 8000efe:	6033      	str	r3, [r6, #0]
 8000f00:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000f04:	4607      	mov	r7, r0
 8000f06:	460c      	mov	r4, r1
 8000f08:	b10a      	cbz	r2, 8000f0e <_printf_common+0x26>
 8000f0a:	3301      	adds	r3, #1
 8000f0c:	6033      	str	r3, [r6, #0]
 8000f0e:	6823      	ldr	r3, [r4, #0]
 8000f10:	0699      	lsls	r1, r3, #26
 8000f12:	bf42      	ittt	mi
 8000f14:	6833      	ldrmi	r3, [r6, #0]
 8000f16:	3302      	addmi	r3, #2
 8000f18:	6033      	strmi	r3, [r6, #0]
 8000f1a:	6825      	ldr	r5, [r4, #0]
 8000f1c:	f015 0506 	ands.w	r5, r5, #6
 8000f20:	d106      	bne.n	8000f30 <_printf_common+0x48>
 8000f22:	f104 0a19 	add.w	sl, r4, #25
 8000f26:	68e3      	ldr	r3, [r4, #12]
 8000f28:	6832      	ldr	r2, [r6, #0]
 8000f2a:	1a9b      	subs	r3, r3, r2
 8000f2c:	42ab      	cmp	r3, r5
 8000f2e:	dc26      	bgt.n	8000f7e <_printf_common+0x96>
 8000f30:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000f34:	6822      	ldr	r2, [r4, #0]
 8000f36:	3b00      	subs	r3, #0
 8000f38:	bf18      	it	ne
 8000f3a:	2301      	movne	r3, #1
 8000f3c:	0692      	lsls	r2, r2, #26
 8000f3e:	d42b      	bmi.n	8000f98 <_printf_common+0xb0>
 8000f40:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f44:	4641      	mov	r1, r8
 8000f46:	4638      	mov	r0, r7
 8000f48:	47c8      	blx	r9
 8000f4a:	3001      	adds	r0, #1
 8000f4c:	d01e      	beq.n	8000f8c <_printf_common+0xa4>
 8000f4e:	6823      	ldr	r3, [r4, #0]
 8000f50:	6922      	ldr	r2, [r4, #16]
 8000f52:	f003 0306 	and.w	r3, r3, #6
 8000f56:	2b04      	cmp	r3, #4
 8000f58:	bf02      	ittt	eq
 8000f5a:	68e5      	ldreq	r5, [r4, #12]
 8000f5c:	6833      	ldreq	r3, [r6, #0]
 8000f5e:	1aed      	subeq	r5, r5, r3
 8000f60:	68a3      	ldr	r3, [r4, #8]
 8000f62:	bf0c      	ite	eq
 8000f64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f68:	2500      	movne	r5, #0
 8000f6a:	4293      	cmp	r3, r2
 8000f6c:	bfc4      	itt	gt
 8000f6e:	1a9b      	subgt	r3, r3, r2
 8000f70:	18ed      	addgt	r5, r5, r3
 8000f72:	2600      	movs	r6, #0
 8000f74:	341a      	adds	r4, #26
 8000f76:	42b5      	cmp	r5, r6
 8000f78:	d11a      	bne.n	8000fb0 <_printf_common+0xc8>
 8000f7a:	2000      	movs	r0, #0
 8000f7c:	e008      	b.n	8000f90 <_printf_common+0xa8>
 8000f7e:	2301      	movs	r3, #1
 8000f80:	4652      	mov	r2, sl
 8000f82:	4641      	mov	r1, r8
 8000f84:	4638      	mov	r0, r7
 8000f86:	47c8      	blx	r9
 8000f88:	3001      	adds	r0, #1
 8000f8a:	d103      	bne.n	8000f94 <_printf_common+0xac>
 8000f8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f94:	3501      	adds	r5, #1
 8000f96:	e7c6      	b.n	8000f26 <_printf_common+0x3e>
 8000f98:	18e1      	adds	r1, r4, r3
 8000f9a:	1c5a      	adds	r2, r3, #1
 8000f9c:	2030      	movs	r0, #48	@ 0x30
 8000f9e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000fa2:	4422      	add	r2, r4
 8000fa4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000fa8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000fac:	3302      	adds	r3, #2
 8000fae:	e7c7      	b.n	8000f40 <_printf_common+0x58>
 8000fb0:	2301      	movs	r3, #1
 8000fb2:	4622      	mov	r2, r4
 8000fb4:	4641      	mov	r1, r8
 8000fb6:	4638      	mov	r0, r7
 8000fb8:	47c8      	blx	r9
 8000fba:	3001      	adds	r0, #1
 8000fbc:	d0e6      	beq.n	8000f8c <_printf_common+0xa4>
 8000fbe:	3601      	adds	r6, #1
 8000fc0:	e7d9      	b.n	8000f76 <_printf_common+0x8e>
	...

08000fc4 <_printf_i>:
 8000fc4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fc8:	7e0f      	ldrb	r7, [r1, #24]
 8000fca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000fcc:	2f78      	cmp	r7, #120	@ 0x78
 8000fce:	4691      	mov	r9, r2
 8000fd0:	4680      	mov	r8, r0
 8000fd2:	460c      	mov	r4, r1
 8000fd4:	469a      	mov	sl, r3
 8000fd6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000fda:	d807      	bhi.n	8000fec <_printf_i+0x28>
 8000fdc:	2f62      	cmp	r7, #98	@ 0x62
 8000fde:	d80a      	bhi.n	8000ff6 <_printf_i+0x32>
 8000fe0:	2f00      	cmp	r7, #0
 8000fe2:	f000 80d2 	beq.w	800118a <_printf_i+0x1c6>
 8000fe6:	2f58      	cmp	r7, #88	@ 0x58
 8000fe8:	f000 80b9 	beq.w	800115e <_printf_i+0x19a>
 8000fec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ff0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000ff4:	e03a      	b.n	800106c <_printf_i+0xa8>
 8000ff6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000ffa:	2b15      	cmp	r3, #21
 8000ffc:	d8f6      	bhi.n	8000fec <_printf_i+0x28>
 8000ffe:	a101      	add	r1, pc, #4	@ (adr r1, 8001004 <_printf_i+0x40>)
 8001000:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001004:	0800105d 	.word	0x0800105d
 8001008:	08001071 	.word	0x08001071
 800100c:	08000fed 	.word	0x08000fed
 8001010:	08000fed 	.word	0x08000fed
 8001014:	08000fed 	.word	0x08000fed
 8001018:	08000fed 	.word	0x08000fed
 800101c:	08001071 	.word	0x08001071
 8001020:	08000fed 	.word	0x08000fed
 8001024:	08000fed 	.word	0x08000fed
 8001028:	08000fed 	.word	0x08000fed
 800102c:	08000fed 	.word	0x08000fed
 8001030:	08001171 	.word	0x08001171
 8001034:	0800109b 	.word	0x0800109b
 8001038:	0800112b 	.word	0x0800112b
 800103c:	08000fed 	.word	0x08000fed
 8001040:	08000fed 	.word	0x08000fed
 8001044:	08001193 	.word	0x08001193
 8001048:	08000fed 	.word	0x08000fed
 800104c:	0800109b 	.word	0x0800109b
 8001050:	08000fed 	.word	0x08000fed
 8001054:	08000fed 	.word	0x08000fed
 8001058:	08001133 	.word	0x08001133
 800105c:	6833      	ldr	r3, [r6, #0]
 800105e:	1d1a      	adds	r2, r3, #4
 8001060:	681b      	ldr	r3, [r3, #0]
 8001062:	6032      	str	r2, [r6, #0]
 8001064:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001068:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800106c:	2301      	movs	r3, #1
 800106e:	e09d      	b.n	80011ac <_printf_i+0x1e8>
 8001070:	6833      	ldr	r3, [r6, #0]
 8001072:	6820      	ldr	r0, [r4, #0]
 8001074:	1d19      	adds	r1, r3, #4
 8001076:	6031      	str	r1, [r6, #0]
 8001078:	0606      	lsls	r6, r0, #24
 800107a:	d501      	bpl.n	8001080 <_printf_i+0xbc>
 800107c:	681d      	ldr	r5, [r3, #0]
 800107e:	e003      	b.n	8001088 <_printf_i+0xc4>
 8001080:	0645      	lsls	r5, r0, #25
 8001082:	d5fb      	bpl.n	800107c <_printf_i+0xb8>
 8001084:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001088:	2d00      	cmp	r5, #0
 800108a:	da03      	bge.n	8001094 <_printf_i+0xd0>
 800108c:	232d      	movs	r3, #45	@ 0x2d
 800108e:	426d      	negs	r5, r5
 8001090:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001094:	4859      	ldr	r0, [pc, #356]	@ (80011fc <_printf_i+0x238>)
 8001096:	230a      	movs	r3, #10
 8001098:	e011      	b.n	80010be <_printf_i+0xfa>
 800109a:	6821      	ldr	r1, [r4, #0]
 800109c:	6833      	ldr	r3, [r6, #0]
 800109e:	0608      	lsls	r0, r1, #24
 80010a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80010a4:	d402      	bmi.n	80010ac <_printf_i+0xe8>
 80010a6:	0649      	lsls	r1, r1, #25
 80010a8:	bf48      	it	mi
 80010aa:	b2ad      	uxthmi	r5, r5
 80010ac:	2f6f      	cmp	r7, #111	@ 0x6f
 80010ae:	4853      	ldr	r0, [pc, #332]	@ (80011fc <_printf_i+0x238>)
 80010b0:	6033      	str	r3, [r6, #0]
 80010b2:	bf14      	ite	ne
 80010b4:	230a      	movne	r3, #10
 80010b6:	2308      	moveq	r3, #8
 80010b8:	2100      	movs	r1, #0
 80010ba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80010be:	6866      	ldr	r6, [r4, #4]
 80010c0:	60a6      	str	r6, [r4, #8]
 80010c2:	2e00      	cmp	r6, #0
 80010c4:	bfa2      	ittt	ge
 80010c6:	6821      	ldrge	r1, [r4, #0]
 80010c8:	f021 0104 	bicge.w	r1, r1, #4
 80010cc:	6021      	strge	r1, [r4, #0]
 80010ce:	b90d      	cbnz	r5, 80010d4 <_printf_i+0x110>
 80010d0:	2e00      	cmp	r6, #0
 80010d2:	d04b      	beq.n	800116c <_printf_i+0x1a8>
 80010d4:	4616      	mov	r6, r2
 80010d6:	fbb5 f1f3 	udiv	r1, r5, r3
 80010da:	fb03 5711 	mls	r7, r3, r1, r5
 80010de:	5dc7      	ldrb	r7, [r0, r7]
 80010e0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80010e4:	462f      	mov	r7, r5
 80010e6:	42bb      	cmp	r3, r7
 80010e8:	460d      	mov	r5, r1
 80010ea:	d9f4      	bls.n	80010d6 <_printf_i+0x112>
 80010ec:	2b08      	cmp	r3, #8
 80010ee:	d10b      	bne.n	8001108 <_printf_i+0x144>
 80010f0:	6823      	ldr	r3, [r4, #0]
 80010f2:	07df      	lsls	r7, r3, #31
 80010f4:	d508      	bpl.n	8001108 <_printf_i+0x144>
 80010f6:	6923      	ldr	r3, [r4, #16]
 80010f8:	6861      	ldr	r1, [r4, #4]
 80010fa:	4299      	cmp	r1, r3
 80010fc:	bfde      	ittt	le
 80010fe:	2330      	movle	r3, #48	@ 0x30
 8001100:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001104:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001108:	1b92      	subs	r2, r2, r6
 800110a:	6122      	str	r2, [r4, #16]
 800110c:	f8cd a000 	str.w	sl, [sp]
 8001110:	464b      	mov	r3, r9
 8001112:	aa03      	add	r2, sp, #12
 8001114:	4621      	mov	r1, r4
 8001116:	4640      	mov	r0, r8
 8001118:	f7ff fee6 	bl	8000ee8 <_printf_common>
 800111c:	3001      	adds	r0, #1
 800111e:	d14a      	bne.n	80011b6 <_printf_i+0x1f2>
 8001120:	f04f 30ff 	mov.w	r0, #4294967295
 8001124:	b004      	add	sp, #16
 8001126:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800112a:	6823      	ldr	r3, [r4, #0]
 800112c:	f043 0320 	orr.w	r3, r3, #32
 8001130:	6023      	str	r3, [r4, #0]
 8001132:	4833      	ldr	r0, [pc, #204]	@ (8001200 <_printf_i+0x23c>)
 8001134:	2778      	movs	r7, #120	@ 0x78
 8001136:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800113a:	6823      	ldr	r3, [r4, #0]
 800113c:	6831      	ldr	r1, [r6, #0]
 800113e:	061f      	lsls	r7, r3, #24
 8001140:	f851 5b04 	ldr.w	r5, [r1], #4
 8001144:	d402      	bmi.n	800114c <_printf_i+0x188>
 8001146:	065f      	lsls	r7, r3, #25
 8001148:	bf48      	it	mi
 800114a:	b2ad      	uxthmi	r5, r5
 800114c:	6031      	str	r1, [r6, #0]
 800114e:	07d9      	lsls	r1, r3, #31
 8001150:	bf44      	itt	mi
 8001152:	f043 0320 	orrmi.w	r3, r3, #32
 8001156:	6023      	strmi	r3, [r4, #0]
 8001158:	b11d      	cbz	r5, 8001162 <_printf_i+0x19e>
 800115a:	2310      	movs	r3, #16
 800115c:	e7ac      	b.n	80010b8 <_printf_i+0xf4>
 800115e:	4827      	ldr	r0, [pc, #156]	@ (80011fc <_printf_i+0x238>)
 8001160:	e7e9      	b.n	8001136 <_printf_i+0x172>
 8001162:	6823      	ldr	r3, [r4, #0]
 8001164:	f023 0320 	bic.w	r3, r3, #32
 8001168:	6023      	str	r3, [r4, #0]
 800116a:	e7f6      	b.n	800115a <_printf_i+0x196>
 800116c:	4616      	mov	r6, r2
 800116e:	e7bd      	b.n	80010ec <_printf_i+0x128>
 8001170:	6833      	ldr	r3, [r6, #0]
 8001172:	6825      	ldr	r5, [r4, #0]
 8001174:	6961      	ldr	r1, [r4, #20]
 8001176:	1d18      	adds	r0, r3, #4
 8001178:	6030      	str	r0, [r6, #0]
 800117a:	062e      	lsls	r6, r5, #24
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	d501      	bpl.n	8001184 <_printf_i+0x1c0>
 8001180:	6019      	str	r1, [r3, #0]
 8001182:	e002      	b.n	800118a <_printf_i+0x1c6>
 8001184:	0668      	lsls	r0, r5, #25
 8001186:	d5fb      	bpl.n	8001180 <_printf_i+0x1bc>
 8001188:	8019      	strh	r1, [r3, #0]
 800118a:	2300      	movs	r3, #0
 800118c:	6123      	str	r3, [r4, #16]
 800118e:	4616      	mov	r6, r2
 8001190:	e7bc      	b.n	800110c <_printf_i+0x148>
 8001192:	6833      	ldr	r3, [r6, #0]
 8001194:	1d1a      	adds	r2, r3, #4
 8001196:	6032      	str	r2, [r6, #0]
 8001198:	681e      	ldr	r6, [r3, #0]
 800119a:	6862      	ldr	r2, [r4, #4]
 800119c:	2100      	movs	r1, #0
 800119e:	4630      	mov	r0, r6
 80011a0:	f7ff f836 	bl	8000210 <memchr>
 80011a4:	b108      	cbz	r0, 80011aa <_printf_i+0x1e6>
 80011a6:	1b80      	subs	r0, r0, r6
 80011a8:	6060      	str	r0, [r4, #4]
 80011aa:	6863      	ldr	r3, [r4, #4]
 80011ac:	6123      	str	r3, [r4, #16]
 80011ae:	2300      	movs	r3, #0
 80011b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011b4:	e7aa      	b.n	800110c <_printf_i+0x148>
 80011b6:	6923      	ldr	r3, [r4, #16]
 80011b8:	4632      	mov	r2, r6
 80011ba:	4649      	mov	r1, r9
 80011bc:	4640      	mov	r0, r8
 80011be:	47d0      	blx	sl
 80011c0:	3001      	adds	r0, #1
 80011c2:	d0ad      	beq.n	8001120 <_printf_i+0x15c>
 80011c4:	6823      	ldr	r3, [r4, #0]
 80011c6:	079b      	lsls	r3, r3, #30
 80011c8:	d413      	bmi.n	80011f2 <_printf_i+0x22e>
 80011ca:	68e0      	ldr	r0, [r4, #12]
 80011cc:	9b03      	ldr	r3, [sp, #12]
 80011ce:	4298      	cmp	r0, r3
 80011d0:	bfb8      	it	lt
 80011d2:	4618      	movlt	r0, r3
 80011d4:	e7a6      	b.n	8001124 <_printf_i+0x160>
 80011d6:	2301      	movs	r3, #1
 80011d8:	4632      	mov	r2, r6
 80011da:	4649      	mov	r1, r9
 80011dc:	4640      	mov	r0, r8
 80011de:	47d0      	blx	sl
 80011e0:	3001      	adds	r0, #1
 80011e2:	d09d      	beq.n	8001120 <_printf_i+0x15c>
 80011e4:	3501      	adds	r5, #1
 80011e6:	68e3      	ldr	r3, [r4, #12]
 80011e8:	9903      	ldr	r1, [sp, #12]
 80011ea:	1a5b      	subs	r3, r3, r1
 80011ec:	42ab      	cmp	r3, r5
 80011ee:	dcf2      	bgt.n	80011d6 <_printf_i+0x212>
 80011f0:	e7eb      	b.n	80011ca <_printf_i+0x206>
 80011f2:	2500      	movs	r5, #0
 80011f4:	f104 0619 	add.w	r6, r4, #25
 80011f8:	e7f5      	b.n	80011e6 <_printf_i+0x222>
 80011fa:	bf00      	nop
 80011fc:	08001500 	.word	0x08001500
 8001200:	08001511 	.word	0x08001511

08001204 <__sflush_r>:
 8001204:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001208:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800120a:	0716      	lsls	r6, r2, #28
 800120c:	4605      	mov	r5, r0
 800120e:	460c      	mov	r4, r1
 8001210:	d454      	bmi.n	80012bc <__sflush_r+0xb8>
 8001212:	684b      	ldr	r3, [r1, #4]
 8001214:	2b00      	cmp	r3, #0
 8001216:	dc02      	bgt.n	800121e <__sflush_r+0x1a>
 8001218:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800121a:	2b00      	cmp	r3, #0
 800121c:	dd48      	ble.n	80012b0 <__sflush_r+0xac>
 800121e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001220:	2e00      	cmp	r6, #0
 8001222:	d045      	beq.n	80012b0 <__sflush_r+0xac>
 8001224:	2300      	movs	r3, #0
 8001226:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800122a:	682f      	ldr	r7, [r5, #0]
 800122c:	6a21      	ldr	r1, [r4, #32]
 800122e:	602b      	str	r3, [r5, #0]
 8001230:	d030      	beq.n	8001294 <__sflush_r+0x90>
 8001232:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001234:	89a3      	ldrh	r3, [r4, #12]
 8001236:	0759      	lsls	r1, r3, #29
 8001238:	d505      	bpl.n	8001246 <__sflush_r+0x42>
 800123a:	6863      	ldr	r3, [r4, #4]
 800123c:	1ad2      	subs	r2, r2, r3
 800123e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001240:	b10b      	cbz	r3, 8001246 <__sflush_r+0x42>
 8001242:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001244:	1ad2      	subs	r2, r2, r3
 8001246:	2300      	movs	r3, #0
 8001248:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800124a:	6a21      	ldr	r1, [r4, #32]
 800124c:	4628      	mov	r0, r5
 800124e:	47b0      	blx	r6
 8001250:	1c43      	adds	r3, r0, #1
 8001252:	89a3      	ldrh	r3, [r4, #12]
 8001254:	d106      	bne.n	8001264 <__sflush_r+0x60>
 8001256:	6829      	ldr	r1, [r5, #0]
 8001258:	291d      	cmp	r1, #29
 800125a:	d82b      	bhi.n	80012b4 <__sflush_r+0xb0>
 800125c:	4a28      	ldr	r2, [pc, #160]	@ (8001300 <__sflush_r+0xfc>)
 800125e:	410a      	asrs	r2, r1
 8001260:	07d6      	lsls	r6, r2, #31
 8001262:	d427      	bmi.n	80012b4 <__sflush_r+0xb0>
 8001264:	2200      	movs	r2, #0
 8001266:	6062      	str	r2, [r4, #4]
 8001268:	04d9      	lsls	r1, r3, #19
 800126a:	6922      	ldr	r2, [r4, #16]
 800126c:	6022      	str	r2, [r4, #0]
 800126e:	d504      	bpl.n	800127a <__sflush_r+0x76>
 8001270:	1c42      	adds	r2, r0, #1
 8001272:	d101      	bne.n	8001278 <__sflush_r+0x74>
 8001274:	682b      	ldr	r3, [r5, #0]
 8001276:	b903      	cbnz	r3, 800127a <__sflush_r+0x76>
 8001278:	6560      	str	r0, [r4, #84]	@ 0x54
 800127a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800127c:	602f      	str	r7, [r5, #0]
 800127e:	b1b9      	cbz	r1, 80012b0 <__sflush_r+0xac>
 8001280:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001284:	4299      	cmp	r1, r3
 8001286:	d002      	beq.n	800128e <__sflush_r+0x8a>
 8001288:	4628      	mov	r0, r5
 800128a:	f7ff fbf5 	bl	8000a78 <_free_r>
 800128e:	2300      	movs	r3, #0
 8001290:	6363      	str	r3, [r4, #52]	@ 0x34
 8001292:	e00d      	b.n	80012b0 <__sflush_r+0xac>
 8001294:	2301      	movs	r3, #1
 8001296:	4628      	mov	r0, r5
 8001298:	47b0      	blx	r6
 800129a:	4602      	mov	r2, r0
 800129c:	1c50      	adds	r0, r2, #1
 800129e:	d1c9      	bne.n	8001234 <__sflush_r+0x30>
 80012a0:	682b      	ldr	r3, [r5, #0]
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	d0c6      	beq.n	8001234 <__sflush_r+0x30>
 80012a6:	2b1d      	cmp	r3, #29
 80012a8:	d001      	beq.n	80012ae <__sflush_r+0xaa>
 80012aa:	2b16      	cmp	r3, #22
 80012ac:	d11d      	bne.n	80012ea <__sflush_r+0xe6>
 80012ae:	602f      	str	r7, [r5, #0]
 80012b0:	2000      	movs	r0, #0
 80012b2:	e021      	b.n	80012f8 <__sflush_r+0xf4>
 80012b4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012b8:	b21b      	sxth	r3, r3
 80012ba:	e01a      	b.n	80012f2 <__sflush_r+0xee>
 80012bc:	690f      	ldr	r7, [r1, #16]
 80012be:	2f00      	cmp	r7, #0
 80012c0:	d0f6      	beq.n	80012b0 <__sflush_r+0xac>
 80012c2:	0793      	lsls	r3, r2, #30
 80012c4:	680e      	ldr	r6, [r1, #0]
 80012c6:	bf08      	it	eq
 80012c8:	694b      	ldreq	r3, [r1, #20]
 80012ca:	600f      	str	r7, [r1, #0]
 80012cc:	bf18      	it	ne
 80012ce:	2300      	movne	r3, #0
 80012d0:	1bf6      	subs	r6, r6, r7
 80012d2:	608b      	str	r3, [r1, #8]
 80012d4:	2e00      	cmp	r6, #0
 80012d6:	ddeb      	ble.n	80012b0 <__sflush_r+0xac>
 80012d8:	6a21      	ldr	r1, [r4, #32]
 80012da:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80012de:	4633      	mov	r3, r6
 80012e0:	463a      	mov	r2, r7
 80012e2:	4628      	mov	r0, r5
 80012e4:	47e0      	blx	ip
 80012e6:	2800      	cmp	r0, #0
 80012e8:	dc07      	bgt.n	80012fa <__sflush_r+0xf6>
 80012ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012f2:	81a3      	strh	r3, [r4, #12]
 80012f4:	f04f 30ff 	mov.w	r0, #4294967295
 80012f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012fa:	4407      	add	r7, r0
 80012fc:	1a36      	subs	r6, r6, r0
 80012fe:	e7e9      	b.n	80012d4 <__sflush_r+0xd0>
 8001300:	dfbffffe 	.word	0xdfbffffe

08001304 <_fflush_r>:
 8001304:	b538      	push	{r3, r4, r5, lr}
 8001306:	690b      	ldr	r3, [r1, #16]
 8001308:	4605      	mov	r5, r0
 800130a:	460c      	mov	r4, r1
 800130c:	b913      	cbnz	r3, 8001314 <_fflush_r+0x10>
 800130e:	2500      	movs	r5, #0
 8001310:	4628      	mov	r0, r5
 8001312:	bd38      	pop	{r3, r4, r5, pc}
 8001314:	b118      	cbz	r0, 800131e <_fflush_r+0x1a>
 8001316:	6a03      	ldr	r3, [r0, #32]
 8001318:	b90b      	cbnz	r3, 800131e <_fflush_r+0x1a>
 800131a:	f7ff f9b3 	bl	8000684 <__sinit>
 800131e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001322:	2b00      	cmp	r3, #0
 8001324:	d0f3      	beq.n	800130e <_fflush_r+0xa>
 8001326:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001328:	07d0      	lsls	r0, r2, #31
 800132a:	d404      	bmi.n	8001336 <_fflush_r+0x32>
 800132c:	0599      	lsls	r1, r3, #22
 800132e:	d402      	bmi.n	8001336 <_fflush_r+0x32>
 8001330:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001332:	f7ff fb9e 	bl	8000a72 <__retarget_lock_acquire_recursive>
 8001336:	4628      	mov	r0, r5
 8001338:	4621      	mov	r1, r4
 800133a:	f7ff ff63 	bl	8001204 <__sflush_r>
 800133e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001340:	07da      	lsls	r2, r3, #31
 8001342:	4605      	mov	r5, r0
 8001344:	d4e4      	bmi.n	8001310 <_fflush_r+0xc>
 8001346:	89a3      	ldrh	r3, [r4, #12]
 8001348:	059b      	lsls	r3, r3, #22
 800134a:	d4e1      	bmi.n	8001310 <_fflush_r+0xc>
 800134c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800134e:	f7ff fb91 	bl	8000a74 <__retarget_lock_release_recursive>
 8001352:	e7dd      	b.n	8001310 <_fflush_r+0xc>

08001354 <__swhatbuf_r>:
 8001354:	b570      	push	{r4, r5, r6, lr}
 8001356:	460c      	mov	r4, r1
 8001358:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800135c:	2900      	cmp	r1, #0
 800135e:	b096      	sub	sp, #88	@ 0x58
 8001360:	4615      	mov	r5, r2
 8001362:	461e      	mov	r6, r3
 8001364:	da0d      	bge.n	8001382 <__swhatbuf_r+0x2e>
 8001366:	89a3      	ldrh	r3, [r4, #12]
 8001368:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800136c:	f04f 0100 	mov.w	r1, #0
 8001370:	bf14      	ite	ne
 8001372:	2340      	movne	r3, #64	@ 0x40
 8001374:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001378:	2000      	movs	r0, #0
 800137a:	6031      	str	r1, [r6, #0]
 800137c:	602b      	str	r3, [r5, #0]
 800137e:	b016      	add	sp, #88	@ 0x58
 8001380:	bd70      	pop	{r4, r5, r6, pc}
 8001382:	466a      	mov	r2, sp
 8001384:	f000 f848 	bl	8001418 <_fstat_r>
 8001388:	2800      	cmp	r0, #0
 800138a:	dbec      	blt.n	8001366 <__swhatbuf_r+0x12>
 800138c:	9901      	ldr	r1, [sp, #4]
 800138e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001392:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001396:	4259      	negs	r1, r3
 8001398:	4159      	adcs	r1, r3
 800139a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800139e:	e7eb      	b.n	8001378 <__swhatbuf_r+0x24>

080013a0 <__smakebuf_r>:
 80013a0:	898b      	ldrh	r3, [r1, #12]
 80013a2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013a4:	079d      	lsls	r5, r3, #30
 80013a6:	4606      	mov	r6, r0
 80013a8:	460c      	mov	r4, r1
 80013aa:	d507      	bpl.n	80013bc <__smakebuf_r+0x1c>
 80013ac:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80013b0:	6023      	str	r3, [r4, #0]
 80013b2:	6123      	str	r3, [r4, #16]
 80013b4:	2301      	movs	r3, #1
 80013b6:	6163      	str	r3, [r4, #20]
 80013b8:	b003      	add	sp, #12
 80013ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013bc:	ab01      	add	r3, sp, #4
 80013be:	466a      	mov	r2, sp
 80013c0:	f7ff ffc8 	bl	8001354 <__swhatbuf_r>
 80013c4:	9f00      	ldr	r7, [sp, #0]
 80013c6:	4605      	mov	r5, r0
 80013c8:	4639      	mov	r1, r7
 80013ca:	4630      	mov	r0, r6
 80013cc:	f7ff fbc0 	bl	8000b50 <_malloc_r>
 80013d0:	b948      	cbnz	r0, 80013e6 <__smakebuf_r+0x46>
 80013d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013d6:	059a      	lsls	r2, r3, #22
 80013d8:	d4ee      	bmi.n	80013b8 <__smakebuf_r+0x18>
 80013da:	f023 0303 	bic.w	r3, r3, #3
 80013de:	f043 0302 	orr.w	r3, r3, #2
 80013e2:	81a3      	strh	r3, [r4, #12]
 80013e4:	e7e2      	b.n	80013ac <__smakebuf_r+0xc>
 80013e6:	89a3      	ldrh	r3, [r4, #12]
 80013e8:	6020      	str	r0, [r4, #0]
 80013ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80013ee:	81a3      	strh	r3, [r4, #12]
 80013f0:	9b01      	ldr	r3, [sp, #4]
 80013f2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80013f6:	b15b      	cbz	r3, 8001410 <__smakebuf_r+0x70>
 80013f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013fc:	4630      	mov	r0, r6
 80013fe:	f000 f81d 	bl	800143c <_isatty_r>
 8001402:	b128      	cbz	r0, 8001410 <__smakebuf_r+0x70>
 8001404:	89a3      	ldrh	r3, [r4, #12]
 8001406:	f023 0303 	bic.w	r3, r3, #3
 800140a:	f043 0301 	orr.w	r3, r3, #1
 800140e:	81a3      	strh	r3, [r4, #12]
 8001410:	89a3      	ldrh	r3, [r4, #12]
 8001412:	431d      	orrs	r5, r3
 8001414:	81a5      	strh	r5, [r4, #12]
 8001416:	e7cf      	b.n	80013b8 <__smakebuf_r+0x18>

08001418 <_fstat_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	4d07      	ldr	r5, [pc, #28]	@ (8001438 <_fstat_r+0x20>)
 800141c:	2300      	movs	r3, #0
 800141e:	4604      	mov	r4, r0
 8001420:	4608      	mov	r0, r1
 8001422:	4611      	mov	r1, r2
 8001424:	602b      	str	r3, [r5, #0]
 8001426:	f7ff f81b 	bl	8000460 <_fstat>
 800142a:	1c43      	adds	r3, r0, #1
 800142c:	d102      	bne.n	8001434 <_fstat_r+0x1c>
 800142e:	682b      	ldr	r3, [r5, #0]
 8001430:	b103      	cbz	r3, 8001434 <_fstat_r+0x1c>
 8001432:	6023      	str	r3, [r4, #0]
 8001434:	bd38      	pop	{r3, r4, r5, pc}
 8001436:	bf00      	nop
 8001438:	200001b8 	.word	0x200001b8

0800143c <_isatty_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d06      	ldr	r5, [pc, #24]	@ (8001458 <_isatty_r+0x1c>)
 8001440:	2300      	movs	r3, #0
 8001442:	4604      	mov	r4, r0
 8001444:	4608      	mov	r0, r1
 8001446:	602b      	str	r3, [r5, #0]
 8001448:	f7ff f819 	bl	800047e <_isatty>
 800144c:	1c43      	adds	r3, r0, #1
 800144e:	d102      	bne.n	8001456 <_isatty_r+0x1a>
 8001450:	682b      	ldr	r3, [r5, #0]
 8001452:	b103      	cbz	r3, 8001456 <_isatty_r+0x1a>
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	bd38      	pop	{r3, r4, r5, pc}
 8001458:	200001b8 	.word	0x200001b8

0800145c <_sbrk_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4d06      	ldr	r5, [pc, #24]	@ (8001478 <_sbrk_r+0x1c>)
 8001460:	2300      	movs	r3, #0
 8001462:	4604      	mov	r4, r0
 8001464:	4608      	mov	r0, r1
 8001466:	602b      	str	r3, [r5, #0]
 8001468:	f7ff f820 	bl	80004ac <_sbrk>
 800146c:	1c43      	adds	r3, r0, #1
 800146e:	d102      	bne.n	8001476 <_sbrk_r+0x1a>
 8001470:	682b      	ldr	r3, [r5, #0]
 8001472:	b103      	cbz	r3, 8001476 <_sbrk_r+0x1a>
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	bd38      	pop	{r3, r4, r5, pc}
 8001478:	200001b8 	.word	0x200001b8

0800147c <_init>:
 800147c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800147e:	bf00      	nop
 8001480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001482:	bc08      	pop	{r3}
 8001484:	469e      	mov	lr, r3
 8001486:	4770      	bx	lr

08001488 <_fini>:
 8001488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148a:	bf00      	nop
 800148c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800148e:	bc08      	pop	{r3}
 8001490:	469e      	mov	lr, r3
 8001492:	4770      	bx	lr
