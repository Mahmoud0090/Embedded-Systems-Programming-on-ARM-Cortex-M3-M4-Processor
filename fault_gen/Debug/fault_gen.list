
fault_gen.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000134c  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000164  0800151c  0800151c  0000251c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001680  08001680  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001680  08001680  00002680  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001688  08001688  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001688  08001688  00002688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800168c  0800168c  0000268c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001690  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080016ec  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080016ec  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009e3  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000394  00000000  00000000  00003a69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00003e00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000dd  00000000  00000000  00003f40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002cbe  00000000  00000000  0000401d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001506  00000000  00000000  00006cdb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000097e8  00000000  00000000  000081e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000119c9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bcc  00000000  00000000  00011a0c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  000125d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001504 	.word	0x08001504

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	08001504 	.word	0x08001504

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#include <stdio.h>
#include <stdint.h>


int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b084      	sub	sp, #16
 80002b4:	af00      	add	r7, sp, #0
    //1- enable all configurable exceptions, usage fault, mem manage fault and bus fault

	uint32_t* pSHCHR = (uint32_t *) 0xE000ED24;
 80002b6:	4b10      	ldr	r3, [pc, #64]	@ (80002f8 <main+0x48>)
 80002b8:	60fb      	str	r3, [r7, #12]
	//*pSHCHR |= (7 << 16);

	*pSHCHR |= (1 << 16);
 80002ba:	68fb      	ldr	r3, [r7, #12]
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 80002c2:	68fb      	ldr	r3, [r7, #12]
 80002c4:	601a      	str	r2, [r3, #0]
	*pSHCHR |= (1 << 17);
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80002ce:	68fb      	ldr	r3, [r7, #12]
 80002d0:	601a      	str	r2, [r3, #0]
	*pSHCHR |= (1 << 18);
 80002d2:	68fb      	ldr	r3, [r7, #12]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80002da:	68fb      	ldr	r3, [r7, #12]
 80002dc:	601a      	str	r2, [r3, #0]


	//3-force the processor to execute some undefined instructions

	uint32_t *pSRAM = (uint32_t*)0x20010000;
 80002de:	4b07      	ldr	r3, [pc, #28]	@ (80002fc <main+0x4c>)
 80002e0:	60bb      	str	r3, [r7, #8]
	*pSRAM = 0xFFFFFFFF;
 80002e2:	68bb      	ldr	r3, [r7, #8]
 80002e4:	f04f 32ff 	mov.w	r2, #4294967295
 80002e8:	601a      	str	r2, [r3, #0]

	void (*some_address) (void);
	some_address = (void*)0x20010001; // 1 greater than pSRAM as for T bit LBS should be 1 (thumb instruction)
 80002ea:	4b05      	ldr	r3, [pc, #20]	@ (8000300 <main+0x50>)
 80002ec:	607b      	str	r3, [r7, #4]

	some_address();
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4798      	blx	r3


	//4-analyze the fault

	for(;;);
 80002f2:	bf00      	nop
 80002f4:	e7fd      	b.n	80002f2 <main+0x42>
 80002f6:	bf00      	nop
 80002f8:	e000ed24 	.word	0xe000ed24
 80002fc:	20010000 	.word	0x20010000
 8000300:	20010001 	.word	0x20010001

08000304 <HardFault_Handler>:
}

//2-implement the fault handler

void HardFault_Handler(void)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
	printf("exception : Hardfault\n");
 8000308:	4802      	ldr	r0, [pc, #8]	@ (8000314 <HardFault_Handler+0x10>)
 800030a:	f000 fa9d 	bl	8000848 <puts>
	while(1);
 800030e:	bf00      	nop
 8000310:	e7fd      	b.n	800030e <HardFault_Handler+0xa>
 8000312:	bf00      	nop
 8000314:	0800151c 	.word	0x0800151c

08000318 <MemManage_Handler>:

}
void MemManage_Handler(void)
{
 8000318:	b580      	push	{r7, lr}
 800031a:	af00      	add	r7, sp, #0
	printf("exception : Mem manage fault\n");
 800031c:	4802      	ldr	r0, [pc, #8]	@ (8000328 <MemManage_Handler+0x10>)
 800031e:	f000 fa93 	bl	8000848 <puts>
	while(1);
 8000322:	bf00      	nop
 8000324:	e7fd      	b.n	8000322 <MemManage_Handler+0xa>
 8000326:	bf00      	nop
 8000328:	08001534 	.word	0x08001534

0800032c <BusFault_Handler>:

}

void BusFault_Handler(void)
{
 800032c:	b580      	push	{r7, lr}
 800032e:	af00      	add	r7, sp, #0
	printf("exception : Busfault\n");
 8000330:	4802      	ldr	r0, [pc, #8]	@ (800033c <BusFault_Handler+0x10>)
 8000332:	f000 fa89 	bl	8000848 <puts>
	while(1);
 8000336:	bf00      	nop
 8000338:	e7fd      	b.n	8000336 <BusFault_Handler+0xa>
 800033a:	bf00      	nop
 800033c:	08001554 	.word	0x08001554

08000340 <UsageFault_Handler>:
}

__attribute__((naked)) void UsageFault_Handler(void)
{
	__asm("MRS r0 , MSP");
 8000340:	f3ef 8008 	mrs	r0, MSP
	__asm("B UsageFault_Handler_c");
 8000344:	f000 b802 	b.w	800034c <UsageFault_Handler_c>
}
 8000348:	bf00      	nop
	...

0800034c <UsageFault_Handler_c>:

// the R0 value from the above UsageFault_Handler will be bassed as arg to this func
void UsageFault_Handler_c(uint32_t* pBaseStackFrame)
{
 800034c:	b580      	push	{r7, lr}
 800034e:	b084      	sub	sp, #16
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]

	uint32_t* pUFSR = (uint32_t*) 0xE000ED2A; //usage fault status register
 8000354:	4b23      	ldr	r3, [pc, #140]	@ (80003e4 <UsageFault_Handler_c+0x98>)
 8000356:	60fb      	str	r3, [r7, #12]
	printf("exception : Usagefault\n");
 8000358:	4823      	ldr	r0, [pc, #140]	@ (80003e8 <UsageFault_Handler_c+0x9c>)
 800035a:	f000 fa75 	bl	8000848 <puts>
	printf("pUFSR = %lx\n" , (*pUFSR));
 800035e:	68fb      	ldr	r3, [r7, #12]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	4619      	mov	r1, r3
 8000364:	4821      	ldr	r0, [pc, #132]	@ (80003ec <UsageFault_Handler_c+0xa0>)
 8000366:	f000 fa07 	bl	8000778 <iprintf>
	printf("BaseStackFrame = %p\n" , pBaseStackFrame);
 800036a:	6879      	ldr	r1, [r7, #4]
 800036c:	4820      	ldr	r0, [pc, #128]	@ (80003f0 <UsageFault_Handler_c+0xa4>)
 800036e:	f000 fa03 	bl	8000778 <iprintf>
	printf("value of R0 = %lx\n" , pBaseStackFrame[0]);
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	4619      	mov	r1, r3
 8000378:	481e      	ldr	r0, [pc, #120]	@ (80003f4 <UsageFault_Handler_c+0xa8>)
 800037a:	f000 f9fd 	bl	8000778 <iprintf>
	printf("value of R1 = %lx\n" , pBaseStackFrame[1]);
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	3304      	adds	r3, #4
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	4619      	mov	r1, r3
 8000386:	481c      	ldr	r0, [pc, #112]	@ (80003f8 <UsageFault_Handler_c+0xac>)
 8000388:	f000 f9f6 	bl	8000778 <iprintf>
	printf("value of R2 = %lx\n" , pBaseStackFrame[2]);
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	3308      	adds	r3, #8
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	4619      	mov	r1, r3
 8000394:	4819      	ldr	r0, [pc, #100]	@ (80003fc <UsageFault_Handler_c+0xb0>)
 8000396:	f000 f9ef 	bl	8000778 <iprintf>
	printf("value of R3 = %lx\n" , pBaseStackFrame[3]);
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	330c      	adds	r3, #12
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	4619      	mov	r1, r3
 80003a2:	4817      	ldr	r0, [pc, #92]	@ (8000400 <UsageFault_Handler_c+0xb4>)
 80003a4:	f000 f9e8 	bl	8000778 <iprintf>
	printf("value of R12 = %lx\n" , pBaseStackFrame[4]);
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	3310      	adds	r3, #16
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	4619      	mov	r1, r3
 80003b0:	4814      	ldr	r0, [pc, #80]	@ (8000404 <UsageFault_Handler_c+0xb8>)
 80003b2:	f000 f9e1 	bl	8000778 <iprintf>
	printf("value of LR = %lx\n" , pBaseStackFrame[5]);
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	3314      	adds	r3, #20
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	4619      	mov	r1, r3
 80003be:	4812      	ldr	r0, [pc, #72]	@ (8000408 <UsageFault_Handler_c+0xbc>)
 80003c0:	f000 f9da 	bl	8000778 <iprintf>
	printf("value of PC = %lx\n" , pBaseStackFrame[6]);
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	3318      	adds	r3, #24
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	4619      	mov	r1, r3
 80003cc:	480f      	ldr	r0, [pc, #60]	@ (800040c <UsageFault_Handler_c+0xc0>)
 80003ce:	f000 f9d3 	bl	8000778 <iprintf>
	printf("value of XPSR = %lx\n" , pBaseStackFrame[7]);
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	331c      	adds	r3, #28
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	4619      	mov	r1, r3
 80003da:	480d      	ldr	r0, [pc, #52]	@ (8000410 <UsageFault_Handler_c+0xc4>)
 80003dc:	f000 f9cc 	bl	8000778 <iprintf>
	while(1);
 80003e0:	bf00      	nop
 80003e2:	e7fd      	b.n	80003e0 <UsageFault_Handler_c+0x94>
 80003e4:	e000ed2a 	.word	0xe000ed2a
 80003e8:	0800156c 	.word	0x0800156c
 80003ec:	08001584 	.word	0x08001584
 80003f0:	08001594 	.word	0x08001594
 80003f4:	080015ac 	.word	0x080015ac
 80003f8:	080015c0 	.word	0x080015c0
 80003fc:	080015d4 	.word	0x080015d4
 8000400:	080015e8 	.word	0x080015e8
 8000404:	080015fc 	.word	0x080015fc
 8000408:	08001610 	.word	0x08001610
 800040c:	08001624 	.word	0x08001624
 8000410:	08001638 	.word	0x08001638

08000414 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000414:	b480      	push	{r7}
 8000416:	b083      	sub	sp, #12
 8000418:	af00      	add	r7, sp, #0
 800041a:	4603      	mov	r3, r0
 800041c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800041e:	4b0e      	ldr	r3, [pc, #56]	@ (8000458 <ITM_SendChar+0x44>)
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	4a0d      	ldr	r2, [pc, #52]	@ (8000458 <ITM_SendChar+0x44>)
 8000424:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000428:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800042a:	4b0c      	ldr	r3, [pc, #48]	@ (800045c <ITM_SendChar+0x48>)
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a0b      	ldr	r2, [pc, #44]	@ (800045c <ITM_SendChar+0x48>)
 8000430:	f043 0301 	orr.w	r3, r3, #1
 8000434:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000436:	bf00      	nop
 8000438:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	f003 0301 	and.w	r3, r3, #1
 8000442:	2b00      	cmp	r3, #0
 8000444:	d0f8      	beq.n	8000438 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000446:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 800044a:	79fb      	ldrb	r3, [r7, #7]
 800044c:	6013      	str	r3, [r2, #0]
}
 800044e:	bf00      	nop
 8000450:	370c      	adds	r7, #12
 8000452:	46bd      	mov	sp, r7
 8000454:	bc80      	pop	{r7}
 8000456:	4770      	bx	lr
 8000458:	e000edfc 	.word	0xe000edfc
 800045c:	e0000e00 	.word	0xe0000e00

08000460 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000460:	b580      	push	{r7, lr}
 8000462:	b086      	sub	sp, #24
 8000464:	af00      	add	r7, sp, #0
 8000466:	60f8      	str	r0, [r7, #12]
 8000468:	60b9      	str	r1, [r7, #8]
 800046a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800046c:	2300      	movs	r3, #0
 800046e:	617b      	str	r3, [r7, #20]
 8000470:	e00a      	b.n	8000488 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000472:	f3af 8000 	nop.w
 8000476:	4601      	mov	r1, r0
 8000478:	68bb      	ldr	r3, [r7, #8]
 800047a:	1c5a      	adds	r2, r3, #1
 800047c:	60ba      	str	r2, [r7, #8]
 800047e:	b2ca      	uxtb	r2, r1
 8000480:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000482:	697b      	ldr	r3, [r7, #20]
 8000484:	3301      	adds	r3, #1
 8000486:	617b      	str	r3, [r7, #20]
 8000488:	697a      	ldr	r2, [r7, #20]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	429a      	cmp	r2, r3
 800048e:	dbf0      	blt.n	8000472 <_read+0x12>
  }

  return len;
 8000490:	687b      	ldr	r3, [r7, #4]
}
 8000492:	4618      	mov	r0, r3
 8000494:	3718      	adds	r7, #24
 8000496:	46bd      	mov	sp, r7
 8000498:	bd80      	pop	{r7, pc}

0800049a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800049a:	b580      	push	{r7, lr}
 800049c:	b086      	sub	sp, #24
 800049e:	af00      	add	r7, sp, #0
 80004a0:	60f8      	str	r0, [r7, #12]
 80004a2:	60b9      	str	r1, [r7, #8]
 80004a4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004a6:	2300      	movs	r3, #0
 80004a8:	617b      	str	r3, [r7, #20]
 80004aa:	e009      	b.n	80004c0 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80004ac:	68bb      	ldr	r3, [r7, #8]
 80004ae:	1c5a      	adds	r2, r3, #1
 80004b0:	60ba      	str	r2, [r7, #8]
 80004b2:	781b      	ldrb	r3, [r3, #0]
 80004b4:	4618      	mov	r0, r3
 80004b6:	f7ff ffad 	bl	8000414 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ba:	697b      	ldr	r3, [r7, #20]
 80004bc:	3301      	adds	r3, #1
 80004be:	617b      	str	r3, [r7, #20]
 80004c0:	697a      	ldr	r2, [r7, #20]
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	429a      	cmp	r2, r3
 80004c6:	dbf1      	blt.n	80004ac <_write+0x12>
  }
  return len;
 80004c8:	687b      	ldr	r3, [r7, #4]
}
 80004ca:	4618      	mov	r0, r3
 80004cc:	3718      	adds	r7, #24
 80004ce:	46bd      	mov	sp, r7
 80004d0:	bd80      	pop	{r7, pc}

080004d2 <_close>:

int _close(int file)
{
 80004d2:	b480      	push	{r7}
 80004d4:	b083      	sub	sp, #12
 80004d6:	af00      	add	r7, sp, #0
 80004d8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80004da:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004de:	4618      	mov	r0, r3
 80004e0:	370c      	adds	r7, #12
 80004e2:	46bd      	mov	sp, r7
 80004e4:	bc80      	pop	{r7}
 80004e6:	4770      	bx	lr

080004e8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004e8:	b480      	push	{r7}
 80004ea:	b083      	sub	sp, #12
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	6078      	str	r0, [r7, #4]
 80004f0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80004f2:	683b      	ldr	r3, [r7, #0]
 80004f4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80004f8:	605a      	str	r2, [r3, #4]
  return 0;
 80004fa:	2300      	movs	r3, #0
}
 80004fc:	4618      	mov	r0, r3
 80004fe:	370c      	adds	r7, #12
 8000500:	46bd      	mov	sp, r7
 8000502:	bc80      	pop	{r7}
 8000504:	4770      	bx	lr

08000506 <_isatty>:

int _isatty(int file)
{
 8000506:	b480      	push	{r7}
 8000508:	b083      	sub	sp, #12
 800050a:	af00      	add	r7, sp, #0
 800050c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800050e:	2301      	movs	r3, #1
}
 8000510:	4618      	mov	r0, r3
 8000512:	370c      	adds	r7, #12
 8000514:	46bd      	mov	sp, r7
 8000516:	bc80      	pop	{r7}
 8000518:	4770      	bx	lr

0800051a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800051a:	b480      	push	{r7}
 800051c:	b085      	sub	sp, #20
 800051e:	af00      	add	r7, sp, #0
 8000520:	60f8      	str	r0, [r7, #12]
 8000522:	60b9      	str	r1, [r7, #8]
 8000524:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000526:	2300      	movs	r3, #0
}
 8000528:	4618      	mov	r0, r3
 800052a:	3714      	adds	r7, #20
 800052c:	46bd      	mov	sp, r7
 800052e:	bc80      	pop	{r7}
 8000530:	4770      	bx	lr
	...

08000534 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000534:	b580      	push	{r7, lr}
 8000536:	b086      	sub	sp, #24
 8000538:	af00      	add	r7, sp, #0
 800053a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800053c:	4a14      	ldr	r2, [pc, #80]	@ (8000590 <_sbrk+0x5c>)
 800053e:	4b15      	ldr	r3, [pc, #84]	@ (8000594 <_sbrk+0x60>)
 8000540:	1ad3      	subs	r3, r2, r3
 8000542:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000544:	697b      	ldr	r3, [r7, #20]
 8000546:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000548:	4b13      	ldr	r3, [pc, #76]	@ (8000598 <_sbrk+0x64>)
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	2b00      	cmp	r3, #0
 800054e:	d102      	bne.n	8000556 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000550:	4b11      	ldr	r3, [pc, #68]	@ (8000598 <_sbrk+0x64>)
 8000552:	4a12      	ldr	r2, [pc, #72]	@ (800059c <_sbrk+0x68>)
 8000554:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000556:	4b10      	ldr	r3, [pc, #64]	@ (8000598 <_sbrk+0x64>)
 8000558:	681a      	ldr	r2, [r3, #0]
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	4413      	add	r3, r2
 800055e:	693a      	ldr	r2, [r7, #16]
 8000560:	429a      	cmp	r2, r3
 8000562:	d207      	bcs.n	8000574 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000564:	f000 fa9e 	bl	8000aa4 <__errno>
 8000568:	4603      	mov	r3, r0
 800056a:	220c      	movs	r2, #12
 800056c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800056e:	f04f 33ff 	mov.w	r3, #4294967295
 8000572:	e009      	b.n	8000588 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000574:	4b08      	ldr	r3, [pc, #32]	@ (8000598 <_sbrk+0x64>)
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800057a:	4b07      	ldr	r3, [pc, #28]	@ (8000598 <_sbrk+0x64>)
 800057c:	681a      	ldr	r2, [r3, #0]
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	4413      	add	r3, r2
 8000582:	4a05      	ldr	r2, [pc, #20]	@ (8000598 <_sbrk+0x64>)
 8000584:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000586:	68fb      	ldr	r3, [r7, #12]
}
 8000588:	4618      	mov	r0, r3
 800058a:	3718      	adds	r7, #24
 800058c:	46bd      	mov	sp, r7
 800058e:	bd80      	pop	{r7, pc}
 8000590:	20020000 	.word	0x20020000
 8000594:	00000400 	.word	0x00000400
 8000598:	20000078 	.word	0x20000078
 800059c:	200001c8 	.word	0x200001c8

080005a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005a0:	480d      	ldr	r0, [pc, #52]	@ (80005d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005a8:	480c      	ldr	r0, [pc, #48]	@ (80005dc <LoopForever+0x6>)
  ldr r1, =_edata
 80005aa:	490d      	ldr	r1, [pc, #52]	@ (80005e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005ac:	4a0d      	ldr	r2, [pc, #52]	@ (80005e4 <LoopForever+0xe>)
  movs r3, #0
 80005ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005b0:	e002      	b.n	80005b8 <LoopCopyDataInit>

080005b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005b6:	3304      	adds	r3, #4

080005b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005bc:	d3f9      	bcc.n	80005b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005be:	4a0a      	ldr	r2, [pc, #40]	@ (80005e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005c0:	4c0a      	ldr	r4, [pc, #40]	@ (80005ec <LoopForever+0x16>)
  movs r3, #0
 80005c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005c4:	e001      	b.n	80005ca <LoopFillZerobss>

080005c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005c8:	3204      	adds	r2, #4

080005ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005cc:	d3fb      	bcc.n	80005c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005ce:	f000 fa6f 	bl	8000ab0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005d2:	f7ff fe6d 	bl	80002b0 <main>

080005d6 <LoopForever>:

LoopForever:
  b LoopForever
 80005d6:	e7fe      	b.n	80005d6 <LoopForever>
  ldr   r0, =_estack
 80005d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005e0:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80005e4:	08001690 	.word	0x08001690
  ldr r2, =_sbss
 80005e8:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80005ec:	200001c8 	.word	0x200001c8

080005f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005f0:	e7fe      	b.n	80005f0 <ADC_IRQHandler>
	...

080005f4 <std>:
 80005f4:	2300      	movs	r3, #0
 80005f6:	b510      	push	{r4, lr}
 80005f8:	4604      	mov	r4, r0
 80005fa:	e9c0 3300 	strd	r3, r3, [r0]
 80005fe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000602:	6083      	str	r3, [r0, #8]
 8000604:	8181      	strh	r1, [r0, #12]
 8000606:	6643      	str	r3, [r0, #100]	@ 0x64
 8000608:	81c2      	strh	r2, [r0, #14]
 800060a:	6183      	str	r3, [r0, #24]
 800060c:	4619      	mov	r1, r3
 800060e:	2208      	movs	r2, #8
 8000610:	305c      	adds	r0, #92	@ 0x5c
 8000612:	f000 f9f9 	bl	8000a08 <memset>
 8000616:	4b0d      	ldr	r3, [pc, #52]	@ (800064c <std+0x58>)
 8000618:	6263      	str	r3, [r4, #36]	@ 0x24
 800061a:	4b0d      	ldr	r3, [pc, #52]	@ (8000650 <std+0x5c>)
 800061c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800061e:	4b0d      	ldr	r3, [pc, #52]	@ (8000654 <std+0x60>)
 8000620:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000622:	4b0d      	ldr	r3, [pc, #52]	@ (8000658 <std+0x64>)
 8000624:	6323      	str	r3, [r4, #48]	@ 0x30
 8000626:	4b0d      	ldr	r3, [pc, #52]	@ (800065c <std+0x68>)
 8000628:	6224      	str	r4, [r4, #32]
 800062a:	429c      	cmp	r4, r3
 800062c:	d006      	beq.n	800063c <std+0x48>
 800062e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000632:	4294      	cmp	r4, r2
 8000634:	d002      	beq.n	800063c <std+0x48>
 8000636:	33d0      	adds	r3, #208	@ 0xd0
 8000638:	429c      	cmp	r4, r3
 800063a:	d105      	bne.n	8000648 <std+0x54>
 800063c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000644:	f000 ba58 	b.w	8000af8 <__retarget_lock_init_recursive>
 8000648:	bd10      	pop	{r4, pc}
 800064a:	bf00      	nop
 800064c:	08000859 	.word	0x08000859
 8000650:	0800087b 	.word	0x0800087b
 8000654:	080008b3 	.word	0x080008b3
 8000658:	080008d7 	.word	0x080008d7
 800065c:	2000007c 	.word	0x2000007c

08000660 <stdio_exit_handler>:
 8000660:	4a02      	ldr	r2, [pc, #8]	@ (800066c <stdio_exit_handler+0xc>)
 8000662:	4903      	ldr	r1, [pc, #12]	@ (8000670 <stdio_exit_handler+0x10>)
 8000664:	4803      	ldr	r0, [pc, #12]	@ (8000674 <stdio_exit_handler+0x14>)
 8000666:	f000 b869 	b.w	800073c <_fwalk_sglue>
 800066a:	bf00      	nop
 800066c:	20000000 	.word	0x20000000
 8000670:	0800138d 	.word	0x0800138d
 8000674:	20000010 	.word	0x20000010

08000678 <cleanup_stdio>:
 8000678:	6841      	ldr	r1, [r0, #4]
 800067a:	4b0c      	ldr	r3, [pc, #48]	@ (80006ac <cleanup_stdio+0x34>)
 800067c:	4299      	cmp	r1, r3
 800067e:	b510      	push	{r4, lr}
 8000680:	4604      	mov	r4, r0
 8000682:	d001      	beq.n	8000688 <cleanup_stdio+0x10>
 8000684:	f000 fe82 	bl	800138c <_fflush_r>
 8000688:	68a1      	ldr	r1, [r4, #8]
 800068a:	4b09      	ldr	r3, [pc, #36]	@ (80006b0 <cleanup_stdio+0x38>)
 800068c:	4299      	cmp	r1, r3
 800068e:	d002      	beq.n	8000696 <cleanup_stdio+0x1e>
 8000690:	4620      	mov	r0, r4
 8000692:	f000 fe7b 	bl	800138c <_fflush_r>
 8000696:	68e1      	ldr	r1, [r4, #12]
 8000698:	4b06      	ldr	r3, [pc, #24]	@ (80006b4 <cleanup_stdio+0x3c>)
 800069a:	4299      	cmp	r1, r3
 800069c:	d004      	beq.n	80006a8 <cleanup_stdio+0x30>
 800069e:	4620      	mov	r0, r4
 80006a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006a4:	f000 be72 	b.w	800138c <_fflush_r>
 80006a8:	bd10      	pop	{r4, pc}
 80006aa:	bf00      	nop
 80006ac:	2000007c 	.word	0x2000007c
 80006b0:	200000e4 	.word	0x200000e4
 80006b4:	2000014c 	.word	0x2000014c

080006b8 <global_stdio_init.part.0>:
 80006b8:	b510      	push	{r4, lr}
 80006ba:	4b0b      	ldr	r3, [pc, #44]	@ (80006e8 <global_stdio_init.part.0+0x30>)
 80006bc:	4c0b      	ldr	r4, [pc, #44]	@ (80006ec <global_stdio_init.part.0+0x34>)
 80006be:	4a0c      	ldr	r2, [pc, #48]	@ (80006f0 <global_stdio_init.part.0+0x38>)
 80006c0:	601a      	str	r2, [r3, #0]
 80006c2:	4620      	mov	r0, r4
 80006c4:	2200      	movs	r2, #0
 80006c6:	2104      	movs	r1, #4
 80006c8:	f7ff ff94 	bl	80005f4 <std>
 80006cc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80006d0:	2201      	movs	r2, #1
 80006d2:	2109      	movs	r1, #9
 80006d4:	f7ff ff8e 	bl	80005f4 <std>
 80006d8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80006dc:	2202      	movs	r2, #2
 80006de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006e2:	2112      	movs	r1, #18
 80006e4:	f7ff bf86 	b.w	80005f4 <std>
 80006e8:	200001b4 	.word	0x200001b4
 80006ec:	2000007c 	.word	0x2000007c
 80006f0:	08000661 	.word	0x08000661

080006f4 <__sfp_lock_acquire>:
 80006f4:	4801      	ldr	r0, [pc, #4]	@ (80006fc <__sfp_lock_acquire+0x8>)
 80006f6:	f000 ba00 	b.w	8000afa <__retarget_lock_acquire_recursive>
 80006fa:	bf00      	nop
 80006fc:	200001bd 	.word	0x200001bd

08000700 <__sfp_lock_release>:
 8000700:	4801      	ldr	r0, [pc, #4]	@ (8000708 <__sfp_lock_release+0x8>)
 8000702:	f000 b9fb 	b.w	8000afc <__retarget_lock_release_recursive>
 8000706:	bf00      	nop
 8000708:	200001bd 	.word	0x200001bd

0800070c <__sinit>:
 800070c:	b510      	push	{r4, lr}
 800070e:	4604      	mov	r4, r0
 8000710:	f7ff fff0 	bl	80006f4 <__sfp_lock_acquire>
 8000714:	6a23      	ldr	r3, [r4, #32]
 8000716:	b11b      	cbz	r3, 8000720 <__sinit+0x14>
 8000718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800071c:	f7ff bff0 	b.w	8000700 <__sfp_lock_release>
 8000720:	4b04      	ldr	r3, [pc, #16]	@ (8000734 <__sinit+0x28>)
 8000722:	6223      	str	r3, [r4, #32]
 8000724:	4b04      	ldr	r3, [pc, #16]	@ (8000738 <__sinit+0x2c>)
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	2b00      	cmp	r3, #0
 800072a:	d1f5      	bne.n	8000718 <__sinit+0xc>
 800072c:	f7ff ffc4 	bl	80006b8 <global_stdio_init.part.0>
 8000730:	e7f2      	b.n	8000718 <__sinit+0xc>
 8000732:	bf00      	nop
 8000734:	08000679 	.word	0x08000679
 8000738:	200001b4 	.word	0x200001b4

0800073c <_fwalk_sglue>:
 800073c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000740:	4607      	mov	r7, r0
 8000742:	4688      	mov	r8, r1
 8000744:	4614      	mov	r4, r2
 8000746:	2600      	movs	r6, #0
 8000748:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800074c:	f1b9 0901 	subs.w	r9, r9, #1
 8000750:	d505      	bpl.n	800075e <_fwalk_sglue+0x22>
 8000752:	6824      	ldr	r4, [r4, #0]
 8000754:	2c00      	cmp	r4, #0
 8000756:	d1f7      	bne.n	8000748 <_fwalk_sglue+0xc>
 8000758:	4630      	mov	r0, r6
 800075a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800075e:	89ab      	ldrh	r3, [r5, #12]
 8000760:	2b01      	cmp	r3, #1
 8000762:	d907      	bls.n	8000774 <_fwalk_sglue+0x38>
 8000764:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000768:	3301      	adds	r3, #1
 800076a:	d003      	beq.n	8000774 <_fwalk_sglue+0x38>
 800076c:	4629      	mov	r1, r5
 800076e:	4638      	mov	r0, r7
 8000770:	47c0      	blx	r8
 8000772:	4306      	orrs	r6, r0
 8000774:	3568      	adds	r5, #104	@ 0x68
 8000776:	e7e9      	b.n	800074c <_fwalk_sglue+0x10>

08000778 <iprintf>:
 8000778:	b40f      	push	{r0, r1, r2, r3}
 800077a:	b507      	push	{r0, r1, r2, lr}
 800077c:	4906      	ldr	r1, [pc, #24]	@ (8000798 <iprintf+0x20>)
 800077e:	ab04      	add	r3, sp, #16
 8000780:	6808      	ldr	r0, [r1, #0]
 8000782:	f853 2b04 	ldr.w	r2, [r3], #4
 8000786:	6881      	ldr	r1, [r0, #8]
 8000788:	9301      	str	r3, [sp, #4]
 800078a:	f000 fad9 	bl	8000d40 <_vfiprintf_r>
 800078e:	b003      	add	sp, #12
 8000790:	f85d eb04 	ldr.w	lr, [sp], #4
 8000794:	b004      	add	sp, #16
 8000796:	4770      	bx	lr
 8000798:	2000000c 	.word	0x2000000c

0800079c <_puts_r>:
 800079c:	6a03      	ldr	r3, [r0, #32]
 800079e:	b570      	push	{r4, r5, r6, lr}
 80007a0:	6884      	ldr	r4, [r0, #8]
 80007a2:	4605      	mov	r5, r0
 80007a4:	460e      	mov	r6, r1
 80007a6:	b90b      	cbnz	r3, 80007ac <_puts_r+0x10>
 80007a8:	f7ff ffb0 	bl	800070c <__sinit>
 80007ac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80007ae:	07db      	lsls	r3, r3, #31
 80007b0:	d405      	bmi.n	80007be <_puts_r+0x22>
 80007b2:	89a3      	ldrh	r3, [r4, #12]
 80007b4:	0598      	lsls	r0, r3, #22
 80007b6:	d402      	bmi.n	80007be <_puts_r+0x22>
 80007b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80007ba:	f000 f99e 	bl	8000afa <__retarget_lock_acquire_recursive>
 80007be:	89a3      	ldrh	r3, [r4, #12]
 80007c0:	0719      	lsls	r1, r3, #28
 80007c2:	d502      	bpl.n	80007ca <_puts_r+0x2e>
 80007c4:	6923      	ldr	r3, [r4, #16]
 80007c6:	2b00      	cmp	r3, #0
 80007c8:	d135      	bne.n	8000836 <_puts_r+0x9a>
 80007ca:	4621      	mov	r1, r4
 80007cc:	4628      	mov	r0, r5
 80007ce:	f000 f8c5 	bl	800095c <__swsetup_r>
 80007d2:	b380      	cbz	r0, 8000836 <_puts_r+0x9a>
 80007d4:	f04f 35ff 	mov.w	r5, #4294967295
 80007d8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80007da:	07da      	lsls	r2, r3, #31
 80007dc:	d405      	bmi.n	80007ea <_puts_r+0x4e>
 80007de:	89a3      	ldrh	r3, [r4, #12]
 80007e0:	059b      	lsls	r3, r3, #22
 80007e2:	d402      	bmi.n	80007ea <_puts_r+0x4e>
 80007e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80007e6:	f000 f989 	bl	8000afc <__retarget_lock_release_recursive>
 80007ea:	4628      	mov	r0, r5
 80007ec:	bd70      	pop	{r4, r5, r6, pc}
 80007ee:	2b00      	cmp	r3, #0
 80007f0:	da04      	bge.n	80007fc <_puts_r+0x60>
 80007f2:	69a2      	ldr	r2, [r4, #24]
 80007f4:	429a      	cmp	r2, r3
 80007f6:	dc17      	bgt.n	8000828 <_puts_r+0x8c>
 80007f8:	290a      	cmp	r1, #10
 80007fa:	d015      	beq.n	8000828 <_puts_r+0x8c>
 80007fc:	6823      	ldr	r3, [r4, #0]
 80007fe:	1c5a      	adds	r2, r3, #1
 8000800:	6022      	str	r2, [r4, #0]
 8000802:	7019      	strb	r1, [r3, #0]
 8000804:	68a3      	ldr	r3, [r4, #8]
 8000806:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800080a:	3b01      	subs	r3, #1
 800080c:	60a3      	str	r3, [r4, #8]
 800080e:	2900      	cmp	r1, #0
 8000810:	d1ed      	bne.n	80007ee <_puts_r+0x52>
 8000812:	2b00      	cmp	r3, #0
 8000814:	da11      	bge.n	800083a <_puts_r+0x9e>
 8000816:	4622      	mov	r2, r4
 8000818:	210a      	movs	r1, #10
 800081a:	4628      	mov	r0, r5
 800081c:	f000 f85f 	bl	80008de <__swbuf_r>
 8000820:	3001      	adds	r0, #1
 8000822:	d0d7      	beq.n	80007d4 <_puts_r+0x38>
 8000824:	250a      	movs	r5, #10
 8000826:	e7d7      	b.n	80007d8 <_puts_r+0x3c>
 8000828:	4622      	mov	r2, r4
 800082a:	4628      	mov	r0, r5
 800082c:	f000 f857 	bl	80008de <__swbuf_r>
 8000830:	3001      	adds	r0, #1
 8000832:	d1e7      	bne.n	8000804 <_puts_r+0x68>
 8000834:	e7ce      	b.n	80007d4 <_puts_r+0x38>
 8000836:	3e01      	subs	r6, #1
 8000838:	e7e4      	b.n	8000804 <_puts_r+0x68>
 800083a:	6823      	ldr	r3, [r4, #0]
 800083c:	1c5a      	adds	r2, r3, #1
 800083e:	6022      	str	r2, [r4, #0]
 8000840:	220a      	movs	r2, #10
 8000842:	701a      	strb	r2, [r3, #0]
 8000844:	e7ee      	b.n	8000824 <_puts_r+0x88>
	...

08000848 <puts>:
 8000848:	4b02      	ldr	r3, [pc, #8]	@ (8000854 <puts+0xc>)
 800084a:	4601      	mov	r1, r0
 800084c:	6818      	ldr	r0, [r3, #0]
 800084e:	f7ff bfa5 	b.w	800079c <_puts_r>
 8000852:	bf00      	nop
 8000854:	2000000c 	.word	0x2000000c

08000858 <__sread>:
 8000858:	b510      	push	{r4, lr}
 800085a:	460c      	mov	r4, r1
 800085c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000860:	f000 f8fc 	bl	8000a5c <_read_r>
 8000864:	2800      	cmp	r0, #0
 8000866:	bfab      	itete	ge
 8000868:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800086a:	89a3      	ldrhlt	r3, [r4, #12]
 800086c:	181b      	addge	r3, r3, r0
 800086e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000872:	bfac      	ite	ge
 8000874:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000876:	81a3      	strhlt	r3, [r4, #12]
 8000878:	bd10      	pop	{r4, pc}

0800087a <__swrite>:
 800087a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800087e:	461f      	mov	r7, r3
 8000880:	898b      	ldrh	r3, [r1, #12]
 8000882:	05db      	lsls	r3, r3, #23
 8000884:	4605      	mov	r5, r0
 8000886:	460c      	mov	r4, r1
 8000888:	4616      	mov	r6, r2
 800088a:	d505      	bpl.n	8000898 <__swrite+0x1e>
 800088c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000890:	2302      	movs	r3, #2
 8000892:	2200      	movs	r2, #0
 8000894:	f000 f8d0 	bl	8000a38 <_lseek_r>
 8000898:	89a3      	ldrh	r3, [r4, #12]
 800089a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800089e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80008a2:	81a3      	strh	r3, [r4, #12]
 80008a4:	4632      	mov	r2, r6
 80008a6:	463b      	mov	r3, r7
 80008a8:	4628      	mov	r0, r5
 80008aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80008ae:	f000 b8e7 	b.w	8000a80 <_write_r>

080008b2 <__sseek>:
 80008b2:	b510      	push	{r4, lr}
 80008b4:	460c      	mov	r4, r1
 80008b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008ba:	f000 f8bd 	bl	8000a38 <_lseek_r>
 80008be:	1c43      	adds	r3, r0, #1
 80008c0:	89a3      	ldrh	r3, [r4, #12]
 80008c2:	bf15      	itete	ne
 80008c4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80008c6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80008ca:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80008ce:	81a3      	strheq	r3, [r4, #12]
 80008d0:	bf18      	it	ne
 80008d2:	81a3      	strhne	r3, [r4, #12]
 80008d4:	bd10      	pop	{r4, pc}

080008d6 <__sclose>:
 80008d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008da:	f000 b89d 	b.w	8000a18 <_close_r>

080008de <__swbuf_r>:
 80008de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008e0:	460e      	mov	r6, r1
 80008e2:	4614      	mov	r4, r2
 80008e4:	4605      	mov	r5, r0
 80008e6:	b118      	cbz	r0, 80008f0 <__swbuf_r+0x12>
 80008e8:	6a03      	ldr	r3, [r0, #32]
 80008ea:	b90b      	cbnz	r3, 80008f0 <__swbuf_r+0x12>
 80008ec:	f7ff ff0e 	bl	800070c <__sinit>
 80008f0:	69a3      	ldr	r3, [r4, #24]
 80008f2:	60a3      	str	r3, [r4, #8]
 80008f4:	89a3      	ldrh	r3, [r4, #12]
 80008f6:	071a      	lsls	r2, r3, #28
 80008f8:	d501      	bpl.n	80008fe <__swbuf_r+0x20>
 80008fa:	6923      	ldr	r3, [r4, #16]
 80008fc:	b943      	cbnz	r3, 8000910 <__swbuf_r+0x32>
 80008fe:	4621      	mov	r1, r4
 8000900:	4628      	mov	r0, r5
 8000902:	f000 f82b 	bl	800095c <__swsetup_r>
 8000906:	b118      	cbz	r0, 8000910 <__swbuf_r+0x32>
 8000908:	f04f 37ff 	mov.w	r7, #4294967295
 800090c:	4638      	mov	r0, r7
 800090e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000910:	6823      	ldr	r3, [r4, #0]
 8000912:	6922      	ldr	r2, [r4, #16]
 8000914:	1a98      	subs	r0, r3, r2
 8000916:	6963      	ldr	r3, [r4, #20]
 8000918:	b2f6      	uxtb	r6, r6
 800091a:	4283      	cmp	r3, r0
 800091c:	4637      	mov	r7, r6
 800091e:	dc05      	bgt.n	800092c <__swbuf_r+0x4e>
 8000920:	4621      	mov	r1, r4
 8000922:	4628      	mov	r0, r5
 8000924:	f000 fd32 	bl	800138c <_fflush_r>
 8000928:	2800      	cmp	r0, #0
 800092a:	d1ed      	bne.n	8000908 <__swbuf_r+0x2a>
 800092c:	68a3      	ldr	r3, [r4, #8]
 800092e:	3b01      	subs	r3, #1
 8000930:	60a3      	str	r3, [r4, #8]
 8000932:	6823      	ldr	r3, [r4, #0]
 8000934:	1c5a      	adds	r2, r3, #1
 8000936:	6022      	str	r2, [r4, #0]
 8000938:	701e      	strb	r6, [r3, #0]
 800093a:	6962      	ldr	r2, [r4, #20]
 800093c:	1c43      	adds	r3, r0, #1
 800093e:	429a      	cmp	r2, r3
 8000940:	d004      	beq.n	800094c <__swbuf_r+0x6e>
 8000942:	89a3      	ldrh	r3, [r4, #12]
 8000944:	07db      	lsls	r3, r3, #31
 8000946:	d5e1      	bpl.n	800090c <__swbuf_r+0x2e>
 8000948:	2e0a      	cmp	r6, #10
 800094a:	d1df      	bne.n	800090c <__swbuf_r+0x2e>
 800094c:	4621      	mov	r1, r4
 800094e:	4628      	mov	r0, r5
 8000950:	f000 fd1c 	bl	800138c <_fflush_r>
 8000954:	2800      	cmp	r0, #0
 8000956:	d0d9      	beq.n	800090c <__swbuf_r+0x2e>
 8000958:	e7d6      	b.n	8000908 <__swbuf_r+0x2a>
	...

0800095c <__swsetup_r>:
 800095c:	b538      	push	{r3, r4, r5, lr}
 800095e:	4b29      	ldr	r3, [pc, #164]	@ (8000a04 <__swsetup_r+0xa8>)
 8000960:	4605      	mov	r5, r0
 8000962:	6818      	ldr	r0, [r3, #0]
 8000964:	460c      	mov	r4, r1
 8000966:	b118      	cbz	r0, 8000970 <__swsetup_r+0x14>
 8000968:	6a03      	ldr	r3, [r0, #32]
 800096a:	b90b      	cbnz	r3, 8000970 <__swsetup_r+0x14>
 800096c:	f7ff fece 	bl	800070c <__sinit>
 8000970:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000974:	0719      	lsls	r1, r3, #28
 8000976:	d422      	bmi.n	80009be <__swsetup_r+0x62>
 8000978:	06da      	lsls	r2, r3, #27
 800097a:	d407      	bmi.n	800098c <__swsetup_r+0x30>
 800097c:	2209      	movs	r2, #9
 800097e:	602a      	str	r2, [r5, #0]
 8000980:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000984:	81a3      	strh	r3, [r4, #12]
 8000986:	f04f 30ff 	mov.w	r0, #4294967295
 800098a:	e033      	b.n	80009f4 <__swsetup_r+0x98>
 800098c:	0758      	lsls	r0, r3, #29
 800098e:	d512      	bpl.n	80009b6 <__swsetup_r+0x5a>
 8000990:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000992:	b141      	cbz	r1, 80009a6 <__swsetup_r+0x4a>
 8000994:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000998:	4299      	cmp	r1, r3
 800099a:	d002      	beq.n	80009a2 <__swsetup_r+0x46>
 800099c:	4628      	mov	r0, r5
 800099e:	f000 f8af 	bl	8000b00 <_free_r>
 80009a2:	2300      	movs	r3, #0
 80009a4:	6363      	str	r3, [r4, #52]	@ 0x34
 80009a6:	89a3      	ldrh	r3, [r4, #12]
 80009a8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80009ac:	81a3      	strh	r3, [r4, #12]
 80009ae:	2300      	movs	r3, #0
 80009b0:	6063      	str	r3, [r4, #4]
 80009b2:	6923      	ldr	r3, [r4, #16]
 80009b4:	6023      	str	r3, [r4, #0]
 80009b6:	89a3      	ldrh	r3, [r4, #12]
 80009b8:	f043 0308 	orr.w	r3, r3, #8
 80009bc:	81a3      	strh	r3, [r4, #12]
 80009be:	6923      	ldr	r3, [r4, #16]
 80009c0:	b94b      	cbnz	r3, 80009d6 <__swsetup_r+0x7a>
 80009c2:	89a3      	ldrh	r3, [r4, #12]
 80009c4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80009c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80009cc:	d003      	beq.n	80009d6 <__swsetup_r+0x7a>
 80009ce:	4621      	mov	r1, r4
 80009d0:	4628      	mov	r0, r5
 80009d2:	f000 fd29 	bl	8001428 <__smakebuf_r>
 80009d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009da:	f013 0201 	ands.w	r2, r3, #1
 80009de:	d00a      	beq.n	80009f6 <__swsetup_r+0x9a>
 80009e0:	2200      	movs	r2, #0
 80009e2:	60a2      	str	r2, [r4, #8]
 80009e4:	6962      	ldr	r2, [r4, #20]
 80009e6:	4252      	negs	r2, r2
 80009e8:	61a2      	str	r2, [r4, #24]
 80009ea:	6922      	ldr	r2, [r4, #16]
 80009ec:	b942      	cbnz	r2, 8000a00 <__swsetup_r+0xa4>
 80009ee:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80009f2:	d1c5      	bne.n	8000980 <__swsetup_r+0x24>
 80009f4:	bd38      	pop	{r3, r4, r5, pc}
 80009f6:	0799      	lsls	r1, r3, #30
 80009f8:	bf58      	it	pl
 80009fa:	6962      	ldrpl	r2, [r4, #20]
 80009fc:	60a2      	str	r2, [r4, #8]
 80009fe:	e7f4      	b.n	80009ea <__swsetup_r+0x8e>
 8000a00:	2000      	movs	r0, #0
 8000a02:	e7f7      	b.n	80009f4 <__swsetup_r+0x98>
 8000a04:	2000000c 	.word	0x2000000c

08000a08 <memset>:
 8000a08:	4402      	add	r2, r0
 8000a0a:	4603      	mov	r3, r0
 8000a0c:	4293      	cmp	r3, r2
 8000a0e:	d100      	bne.n	8000a12 <memset+0xa>
 8000a10:	4770      	bx	lr
 8000a12:	f803 1b01 	strb.w	r1, [r3], #1
 8000a16:	e7f9      	b.n	8000a0c <memset+0x4>

08000a18 <_close_r>:
 8000a18:	b538      	push	{r3, r4, r5, lr}
 8000a1a:	4d06      	ldr	r5, [pc, #24]	@ (8000a34 <_close_r+0x1c>)
 8000a1c:	2300      	movs	r3, #0
 8000a1e:	4604      	mov	r4, r0
 8000a20:	4608      	mov	r0, r1
 8000a22:	602b      	str	r3, [r5, #0]
 8000a24:	f7ff fd55 	bl	80004d2 <_close>
 8000a28:	1c43      	adds	r3, r0, #1
 8000a2a:	d102      	bne.n	8000a32 <_close_r+0x1a>
 8000a2c:	682b      	ldr	r3, [r5, #0]
 8000a2e:	b103      	cbz	r3, 8000a32 <_close_r+0x1a>
 8000a30:	6023      	str	r3, [r4, #0]
 8000a32:	bd38      	pop	{r3, r4, r5, pc}
 8000a34:	200001b8 	.word	0x200001b8

08000a38 <_lseek_r>:
 8000a38:	b538      	push	{r3, r4, r5, lr}
 8000a3a:	4d07      	ldr	r5, [pc, #28]	@ (8000a58 <_lseek_r+0x20>)
 8000a3c:	4604      	mov	r4, r0
 8000a3e:	4608      	mov	r0, r1
 8000a40:	4611      	mov	r1, r2
 8000a42:	2200      	movs	r2, #0
 8000a44:	602a      	str	r2, [r5, #0]
 8000a46:	461a      	mov	r2, r3
 8000a48:	f7ff fd67 	bl	800051a <_lseek>
 8000a4c:	1c43      	adds	r3, r0, #1
 8000a4e:	d102      	bne.n	8000a56 <_lseek_r+0x1e>
 8000a50:	682b      	ldr	r3, [r5, #0]
 8000a52:	b103      	cbz	r3, 8000a56 <_lseek_r+0x1e>
 8000a54:	6023      	str	r3, [r4, #0]
 8000a56:	bd38      	pop	{r3, r4, r5, pc}
 8000a58:	200001b8 	.word	0x200001b8

08000a5c <_read_r>:
 8000a5c:	b538      	push	{r3, r4, r5, lr}
 8000a5e:	4d07      	ldr	r5, [pc, #28]	@ (8000a7c <_read_r+0x20>)
 8000a60:	4604      	mov	r4, r0
 8000a62:	4608      	mov	r0, r1
 8000a64:	4611      	mov	r1, r2
 8000a66:	2200      	movs	r2, #0
 8000a68:	602a      	str	r2, [r5, #0]
 8000a6a:	461a      	mov	r2, r3
 8000a6c:	f7ff fcf8 	bl	8000460 <_read>
 8000a70:	1c43      	adds	r3, r0, #1
 8000a72:	d102      	bne.n	8000a7a <_read_r+0x1e>
 8000a74:	682b      	ldr	r3, [r5, #0]
 8000a76:	b103      	cbz	r3, 8000a7a <_read_r+0x1e>
 8000a78:	6023      	str	r3, [r4, #0]
 8000a7a:	bd38      	pop	{r3, r4, r5, pc}
 8000a7c:	200001b8 	.word	0x200001b8

08000a80 <_write_r>:
 8000a80:	b538      	push	{r3, r4, r5, lr}
 8000a82:	4d07      	ldr	r5, [pc, #28]	@ (8000aa0 <_write_r+0x20>)
 8000a84:	4604      	mov	r4, r0
 8000a86:	4608      	mov	r0, r1
 8000a88:	4611      	mov	r1, r2
 8000a8a:	2200      	movs	r2, #0
 8000a8c:	602a      	str	r2, [r5, #0]
 8000a8e:	461a      	mov	r2, r3
 8000a90:	f7ff fd03 	bl	800049a <_write>
 8000a94:	1c43      	adds	r3, r0, #1
 8000a96:	d102      	bne.n	8000a9e <_write_r+0x1e>
 8000a98:	682b      	ldr	r3, [r5, #0]
 8000a9a:	b103      	cbz	r3, 8000a9e <_write_r+0x1e>
 8000a9c:	6023      	str	r3, [r4, #0]
 8000a9e:	bd38      	pop	{r3, r4, r5, pc}
 8000aa0:	200001b8 	.word	0x200001b8

08000aa4 <__errno>:
 8000aa4:	4b01      	ldr	r3, [pc, #4]	@ (8000aac <__errno+0x8>)
 8000aa6:	6818      	ldr	r0, [r3, #0]
 8000aa8:	4770      	bx	lr
 8000aaa:	bf00      	nop
 8000aac:	2000000c 	.word	0x2000000c

08000ab0 <__libc_init_array>:
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	4d0d      	ldr	r5, [pc, #52]	@ (8000ae8 <__libc_init_array+0x38>)
 8000ab4:	4c0d      	ldr	r4, [pc, #52]	@ (8000aec <__libc_init_array+0x3c>)
 8000ab6:	1b64      	subs	r4, r4, r5
 8000ab8:	10a4      	asrs	r4, r4, #2
 8000aba:	2600      	movs	r6, #0
 8000abc:	42a6      	cmp	r6, r4
 8000abe:	d109      	bne.n	8000ad4 <__libc_init_array+0x24>
 8000ac0:	4d0b      	ldr	r5, [pc, #44]	@ (8000af0 <__libc_init_array+0x40>)
 8000ac2:	4c0c      	ldr	r4, [pc, #48]	@ (8000af4 <__libc_init_array+0x44>)
 8000ac4:	f000 fd1e 	bl	8001504 <_init>
 8000ac8:	1b64      	subs	r4, r4, r5
 8000aca:	10a4      	asrs	r4, r4, #2
 8000acc:	2600      	movs	r6, #0
 8000ace:	42a6      	cmp	r6, r4
 8000ad0:	d105      	bne.n	8000ade <__libc_init_array+0x2e>
 8000ad2:	bd70      	pop	{r4, r5, r6, pc}
 8000ad4:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ad8:	4798      	blx	r3
 8000ada:	3601      	adds	r6, #1
 8000adc:	e7ee      	b.n	8000abc <__libc_init_array+0xc>
 8000ade:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ae2:	4798      	blx	r3
 8000ae4:	3601      	adds	r6, #1
 8000ae6:	e7f2      	b.n	8000ace <__libc_init_array+0x1e>
 8000ae8:	08001688 	.word	0x08001688
 8000aec:	08001688 	.word	0x08001688
 8000af0:	08001688 	.word	0x08001688
 8000af4:	0800168c 	.word	0x0800168c

08000af8 <__retarget_lock_init_recursive>:
 8000af8:	4770      	bx	lr

08000afa <__retarget_lock_acquire_recursive>:
 8000afa:	4770      	bx	lr

08000afc <__retarget_lock_release_recursive>:
 8000afc:	4770      	bx	lr
	...

08000b00 <_free_r>:
 8000b00:	b538      	push	{r3, r4, r5, lr}
 8000b02:	4605      	mov	r5, r0
 8000b04:	2900      	cmp	r1, #0
 8000b06:	d041      	beq.n	8000b8c <_free_r+0x8c>
 8000b08:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b0c:	1f0c      	subs	r4, r1, #4
 8000b0e:	2b00      	cmp	r3, #0
 8000b10:	bfb8      	it	lt
 8000b12:	18e4      	addlt	r4, r4, r3
 8000b14:	f000 f8e0 	bl	8000cd8 <__malloc_lock>
 8000b18:	4a1d      	ldr	r2, [pc, #116]	@ (8000b90 <_free_r+0x90>)
 8000b1a:	6813      	ldr	r3, [r2, #0]
 8000b1c:	b933      	cbnz	r3, 8000b2c <_free_r+0x2c>
 8000b1e:	6063      	str	r3, [r4, #4]
 8000b20:	6014      	str	r4, [r2, #0]
 8000b22:	4628      	mov	r0, r5
 8000b24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b28:	f000 b8dc 	b.w	8000ce4 <__malloc_unlock>
 8000b2c:	42a3      	cmp	r3, r4
 8000b2e:	d908      	bls.n	8000b42 <_free_r+0x42>
 8000b30:	6820      	ldr	r0, [r4, #0]
 8000b32:	1821      	adds	r1, r4, r0
 8000b34:	428b      	cmp	r3, r1
 8000b36:	bf01      	itttt	eq
 8000b38:	6819      	ldreq	r1, [r3, #0]
 8000b3a:	685b      	ldreq	r3, [r3, #4]
 8000b3c:	1809      	addeq	r1, r1, r0
 8000b3e:	6021      	streq	r1, [r4, #0]
 8000b40:	e7ed      	b.n	8000b1e <_free_r+0x1e>
 8000b42:	461a      	mov	r2, r3
 8000b44:	685b      	ldr	r3, [r3, #4]
 8000b46:	b10b      	cbz	r3, 8000b4c <_free_r+0x4c>
 8000b48:	42a3      	cmp	r3, r4
 8000b4a:	d9fa      	bls.n	8000b42 <_free_r+0x42>
 8000b4c:	6811      	ldr	r1, [r2, #0]
 8000b4e:	1850      	adds	r0, r2, r1
 8000b50:	42a0      	cmp	r0, r4
 8000b52:	d10b      	bne.n	8000b6c <_free_r+0x6c>
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	4401      	add	r1, r0
 8000b58:	1850      	adds	r0, r2, r1
 8000b5a:	4283      	cmp	r3, r0
 8000b5c:	6011      	str	r1, [r2, #0]
 8000b5e:	d1e0      	bne.n	8000b22 <_free_r+0x22>
 8000b60:	6818      	ldr	r0, [r3, #0]
 8000b62:	685b      	ldr	r3, [r3, #4]
 8000b64:	6053      	str	r3, [r2, #4]
 8000b66:	4408      	add	r0, r1
 8000b68:	6010      	str	r0, [r2, #0]
 8000b6a:	e7da      	b.n	8000b22 <_free_r+0x22>
 8000b6c:	d902      	bls.n	8000b74 <_free_r+0x74>
 8000b6e:	230c      	movs	r3, #12
 8000b70:	602b      	str	r3, [r5, #0]
 8000b72:	e7d6      	b.n	8000b22 <_free_r+0x22>
 8000b74:	6820      	ldr	r0, [r4, #0]
 8000b76:	1821      	adds	r1, r4, r0
 8000b78:	428b      	cmp	r3, r1
 8000b7a:	bf04      	itt	eq
 8000b7c:	6819      	ldreq	r1, [r3, #0]
 8000b7e:	685b      	ldreq	r3, [r3, #4]
 8000b80:	6063      	str	r3, [r4, #4]
 8000b82:	bf04      	itt	eq
 8000b84:	1809      	addeq	r1, r1, r0
 8000b86:	6021      	streq	r1, [r4, #0]
 8000b88:	6054      	str	r4, [r2, #4]
 8000b8a:	e7ca      	b.n	8000b22 <_free_r+0x22>
 8000b8c:	bd38      	pop	{r3, r4, r5, pc}
 8000b8e:	bf00      	nop
 8000b90:	200001c4 	.word	0x200001c4

08000b94 <sbrk_aligned>:
 8000b94:	b570      	push	{r4, r5, r6, lr}
 8000b96:	4e0f      	ldr	r6, [pc, #60]	@ (8000bd4 <sbrk_aligned+0x40>)
 8000b98:	460c      	mov	r4, r1
 8000b9a:	6831      	ldr	r1, [r6, #0]
 8000b9c:	4605      	mov	r5, r0
 8000b9e:	b911      	cbnz	r1, 8000ba6 <sbrk_aligned+0x12>
 8000ba0:	f000 fca0 	bl	80014e4 <_sbrk_r>
 8000ba4:	6030      	str	r0, [r6, #0]
 8000ba6:	4621      	mov	r1, r4
 8000ba8:	4628      	mov	r0, r5
 8000baa:	f000 fc9b 	bl	80014e4 <_sbrk_r>
 8000bae:	1c43      	adds	r3, r0, #1
 8000bb0:	d103      	bne.n	8000bba <sbrk_aligned+0x26>
 8000bb2:	f04f 34ff 	mov.w	r4, #4294967295
 8000bb6:	4620      	mov	r0, r4
 8000bb8:	bd70      	pop	{r4, r5, r6, pc}
 8000bba:	1cc4      	adds	r4, r0, #3
 8000bbc:	f024 0403 	bic.w	r4, r4, #3
 8000bc0:	42a0      	cmp	r0, r4
 8000bc2:	d0f8      	beq.n	8000bb6 <sbrk_aligned+0x22>
 8000bc4:	1a21      	subs	r1, r4, r0
 8000bc6:	4628      	mov	r0, r5
 8000bc8:	f000 fc8c 	bl	80014e4 <_sbrk_r>
 8000bcc:	3001      	adds	r0, #1
 8000bce:	d1f2      	bne.n	8000bb6 <sbrk_aligned+0x22>
 8000bd0:	e7ef      	b.n	8000bb2 <sbrk_aligned+0x1e>
 8000bd2:	bf00      	nop
 8000bd4:	200001c0 	.word	0x200001c0

08000bd8 <_malloc_r>:
 8000bd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bdc:	1ccd      	adds	r5, r1, #3
 8000bde:	f025 0503 	bic.w	r5, r5, #3
 8000be2:	3508      	adds	r5, #8
 8000be4:	2d0c      	cmp	r5, #12
 8000be6:	bf38      	it	cc
 8000be8:	250c      	movcc	r5, #12
 8000bea:	2d00      	cmp	r5, #0
 8000bec:	4606      	mov	r6, r0
 8000bee:	db01      	blt.n	8000bf4 <_malloc_r+0x1c>
 8000bf0:	42a9      	cmp	r1, r5
 8000bf2:	d904      	bls.n	8000bfe <_malloc_r+0x26>
 8000bf4:	230c      	movs	r3, #12
 8000bf6:	6033      	str	r3, [r6, #0]
 8000bf8:	2000      	movs	r0, #0
 8000bfa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bfe:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000cd4 <_malloc_r+0xfc>
 8000c02:	f000 f869 	bl	8000cd8 <__malloc_lock>
 8000c06:	f8d8 3000 	ldr.w	r3, [r8]
 8000c0a:	461c      	mov	r4, r3
 8000c0c:	bb44      	cbnz	r4, 8000c60 <_malloc_r+0x88>
 8000c0e:	4629      	mov	r1, r5
 8000c10:	4630      	mov	r0, r6
 8000c12:	f7ff ffbf 	bl	8000b94 <sbrk_aligned>
 8000c16:	1c43      	adds	r3, r0, #1
 8000c18:	4604      	mov	r4, r0
 8000c1a:	d158      	bne.n	8000cce <_malloc_r+0xf6>
 8000c1c:	f8d8 4000 	ldr.w	r4, [r8]
 8000c20:	4627      	mov	r7, r4
 8000c22:	2f00      	cmp	r7, #0
 8000c24:	d143      	bne.n	8000cae <_malloc_r+0xd6>
 8000c26:	2c00      	cmp	r4, #0
 8000c28:	d04b      	beq.n	8000cc2 <_malloc_r+0xea>
 8000c2a:	6823      	ldr	r3, [r4, #0]
 8000c2c:	4639      	mov	r1, r7
 8000c2e:	4630      	mov	r0, r6
 8000c30:	eb04 0903 	add.w	r9, r4, r3
 8000c34:	f000 fc56 	bl	80014e4 <_sbrk_r>
 8000c38:	4581      	cmp	r9, r0
 8000c3a:	d142      	bne.n	8000cc2 <_malloc_r+0xea>
 8000c3c:	6821      	ldr	r1, [r4, #0]
 8000c3e:	1a6d      	subs	r5, r5, r1
 8000c40:	4629      	mov	r1, r5
 8000c42:	4630      	mov	r0, r6
 8000c44:	f7ff ffa6 	bl	8000b94 <sbrk_aligned>
 8000c48:	3001      	adds	r0, #1
 8000c4a:	d03a      	beq.n	8000cc2 <_malloc_r+0xea>
 8000c4c:	6823      	ldr	r3, [r4, #0]
 8000c4e:	442b      	add	r3, r5
 8000c50:	6023      	str	r3, [r4, #0]
 8000c52:	f8d8 3000 	ldr.w	r3, [r8]
 8000c56:	685a      	ldr	r2, [r3, #4]
 8000c58:	bb62      	cbnz	r2, 8000cb4 <_malloc_r+0xdc>
 8000c5a:	f8c8 7000 	str.w	r7, [r8]
 8000c5e:	e00f      	b.n	8000c80 <_malloc_r+0xa8>
 8000c60:	6822      	ldr	r2, [r4, #0]
 8000c62:	1b52      	subs	r2, r2, r5
 8000c64:	d420      	bmi.n	8000ca8 <_malloc_r+0xd0>
 8000c66:	2a0b      	cmp	r2, #11
 8000c68:	d917      	bls.n	8000c9a <_malloc_r+0xc2>
 8000c6a:	1961      	adds	r1, r4, r5
 8000c6c:	42a3      	cmp	r3, r4
 8000c6e:	6025      	str	r5, [r4, #0]
 8000c70:	bf18      	it	ne
 8000c72:	6059      	strne	r1, [r3, #4]
 8000c74:	6863      	ldr	r3, [r4, #4]
 8000c76:	bf08      	it	eq
 8000c78:	f8c8 1000 	streq.w	r1, [r8]
 8000c7c:	5162      	str	r2, [r4, r5]
 8000c7e:	604b      	str	r3, [r1, #4]
 8000c80:	4630      	mov	r0, r6
 8000c82:	f000 f82f 	bl	8000ce4 <__malloc_unlock>
 8000c86:	f104 000b 	add.w	r0, r4, #11
 8000c8a:	1d23      	adds	r3, r4, #4
 8000c8c:	f020 0007 	bic.w	r0, r0, #7
 8000c90:	1ac2      	subs	r2, r0, r3
 8000c92:	bf1c      	itt	ne
 8000c94:	1a1b      	subne	r3, r3, r0
 8000c96:	50a3      	strne	r3, [r4, r2]
 8000c98:	e7af      	b.n	8000bfa <_malloc_r+0x22>
 8000c9a:	6862      	ldr	r2, [r4, #4]
 8000c9c:	42a3      	cmp	r3, r4
 8000c9e:	bf0c      	ite	eq
 8000ca0:	f8c8 2000 	streq.w	r2, [r8]
 8000ca4:	605a      	strne	r2, [r3, #4]
 8000ca6:	e7eb      	b.n	8000c80 <_malloc_r+0xa8>
 8000ca8:	4623      	mov	r3, r4
 8000caa:	6864      	ldr	r4, [r4, #4]
 8000cac:	e7ae      	b.n	8000c0c <_malloc_r+0x34>
 8000cae:	463c      	mov	r4, r7
 8000cb0:	687f      	ldr	r7, [r7, #4]
 8000cb2:	e7b6      	b.n	8000c22 <_malloc_r+0x4a>
 8000cb4:	461a      	mov	r2, r3
 8000cb6:	685b      	ldr	r3, [r3, #4]
 8000cb8:	42a3      	cmp	r3, r4
 8000cba:	d1fb      	bne.n	8000cb4 <_malloc_r+0xdc>
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	6053      	str	r3, [r2, #4]
 8000cc0:	e7de      	b.n	8000c80 <_malloc_r+0xa8>
 8000cc2:	230c      	movs	r3, #12
 8000cc4:	6033      	str	r3, [r6, #0]
 8000cc6:	4630      	mov	r0, r6
 8000cc8:	f000 f80c 	bl	8000ce4 <__malloc_unlock>
 8000ccc:	e794      	b.n	8000bf8 <_malloc_r+0x20>
 8000cce:	6005      	str	r5, [r0, #0]
 8000cd0:	e7d6      	b.n	8000c80 <_malloc_r+0xa8>
 8000cd2:	bf00      	nop
 8000cd4:	200001c4 	.word	0x200001c4

08000cd8 <__malloc_lock>:
 8000cd8:	4801      	ldr	r0, [pc, #4]	@ (8000ce0 <__malloc_lock+0x8>)
 8000cda:	f7ff bf0e 	b.w	8000afa <__retarget_lock_acquire_recursive>
 8000cde:	bf00      	nop
 8000ce0:	200001bc 	.word	0x200001bc

08000ce4 <__malloc_unlock>:
 8000ce4:	4801      	ldr	r0, [pc, #4]	@ (8000cec <__malloc_unlock+0x8>)
 8000ce6:	f7ff bf09 	b.w	8000afc <__retarget_lock_release_recursive>
 8000cea:	bf00      	nop
 8000cec:	200001bc 	.word	0x200001bc

08000cf0 <__sfputc_r>:
 8000cf0:	6893      	ldr	r3, [r2, #8]
 8000cf2:	3b01      	subs	r3, #1
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	b410      	push	{r4}
 8000cf8:	6093      	str	r3, [r2, #8]
 8000cfa:	da07      	bge.n	8000d0c <__sfputc_r+0x1c>
 8000cfc:	6994      	ldr	r4, [r2, #24]
 8000cfe:	42a3      	cmp	r3, r4
 8000d00:	db01      	blt.n	8000d06 <__sfputc_r+0x16>
 8000d02:	290a      	cmp	r1, #10
 8000d04:	d102      	bne.n	8000d0c <__sfputc_r+0x1c>
 8000d06:	bc10      	pop	{r4}
 8000d08:	f7ff bde9 	b.w	80008de <__swbuf_r>
 8000d0c:	6813      	ldr	r3, [r2, #0]
 8000d0e:	1c58      	adds	r0, r3, #1
 8000d10:	6010      	str	r0, [r2, #0]
 8000d12:	7019      	strb	r1, [r3, #0]
 8000d14:	4608      	mov	r0, r1
 8000d16:	bc10      	pop	{r4}
 8000d18:	4770      	bx	lr

08000d1a <__sfputs_r>:
 8000d1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d1c:	4606      	mov	r6, r0
 8000d1e:	460f      	mov	r7, r1
 8000d20:	4614      	mov	r4, r2
 8000d22:	18d5      	adds	r5, r2, r3
 8000d24:	42ac      	cmp	r4, r5
 8000d26:	d101      	bne.n	8000d2c <__sfputs_r+0x12>
 8000d28:	2000      	movs	r0, #0
 8000d2a:	e007      	b.n	8000d3c <__sfputs_r+0x22>
 8000d2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d30:	463a      	mov	r2, r7
 8000d32:	4630      	mov	r0, r6
 8000d34:	f7ff ffdc 	bl	8000cf0 <__sfputc_r>
 8000d38:	1c43      	adds	r3, r0, #1
 8000d3a:	d1f3      	bne.n	8000d24 <__sfputs_r+0xa>
 8000d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000d40 <_vfiprintf_r>:
 8000d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d44:	460d      	mov	r5, r1
 8000d46:	b09d      	sub	sp, #116	@ 0x74
 8000d48:	4614      	mov	r4, r2
 8000d4a:	4698      	mov	r8, r3
 8000d4c:	4606      	mov	r6, r0
 8000d4e:	b118      	cbz	r0, 8000d58 <_vfiprintf_r+0x18>
 8000d50:	6a03      	ldr	r3, [r0, #32]
 8000d52:	b90b      	cbnz	r3, 8000d58 <_vfiprintf_r+0x18>
 8000d54:	f7ff fcda 	bl	800070c <__sinit>
 8000d58:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d5a:	07d9      	lsls	r1, r3, #31
 8000d5c:	d405      	bmi.n	8000d6a <_vfiprintf_r+0x2a>
 8000d5e:	89ab      	ldrh	r3, [r5, #12]
 8000d60:	059a      	lsls	r2, r3, #22
 8000d62:	d402      	bmi.n	8000d6a <_vfiprintf_r+0x2a>
 8000d64:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d66:	f7ff fec8 	bl	8000afa <__retarget_lock_acquire_recursive>
 8000d6a:	89ab      	ldrh	r3, [r5, #12]
 8000d6c:	071b      	lsls	r3, r3, #28
 8000d6e:	d501      	bpl.n	8000d74 <_vfiprintf_r+0x34>
 8000d70:	692b      	ldr	r3, [r5, #16]
 8000d72:	b99b      	cbnz	r3, 8000d9c <_vfiprintf_r+0x5c>
 8000d74:	4629      	mov	r1, r5
 8000d76:	4630      	mov	r0, r6
 8000d78:	f7ff fdf0 	bl	800095c <__swsetup_r>
 8000d7c:	b170      	cbz	r0, 8000d9c <_vfiprintf_r+0x5c>
 8000d7e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d80:	07dc      	lsls	r4, r3, #31
 8000d82:	d504      	bpl.n	8000d8e <_vfiprintf_r+0x4e>
 8000d84:	f04f 30ff 	mov.w	r0, #4294967295
 8000d88:	b01d      	add	sp, #116	@ 0x74
 8000d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d8e:	89ab      	ldrh	r3, [r5, #12]
 8000d90:	0598      	lsls	r0, r3, #22
 8000d92:	d4f7      	bmi.n	8000d84 <_vfiprintf_r+0x44>
 8000d94:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d96:	f7ff feb1 	bl	8000afc <__retarget_lock_release_recursive>
 8000d9a:	e7f3      	b.n	8000d84 <_vfiprintf_r+0x44>
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000da0:	2320      	movs	r3, #32
 8000da2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000da6:	f8cd 800c 	str.w	r8, [sp, #12]
 8000daa:	2330      	movs	r3, #48	@ 0x30
 8000dac:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000f5c <_vfiprintf_r+0x21c>
 8000db0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000db4:	f04f 0901 	mov.w	r9, #1
 8000db8:	4623      	mov	r3, r4
 8000dba:	469a      	mov	sl, r3
 8000dbc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000dc0:	b10a      	cbz	r2, 8000dc6 <_vfiprintf_r+0x86>
 8000dc2:	2a25      	cmp	r2, #37	@ 0x25
 8000dc4:	d1f9      	bne.n	8000dba <_vfiprintf_r+0x7a>
 8000dc6:	ebba 0b04 	subs.w	fp, sl, r4
 8000dca:	d00b      	beq.n	8000de4 <_vfiprintf_r+0xa4>
 8000dcc:	465b      	mov	r3, fp
 8000dce:	4622      	mov	r2, r4
 8000dd0:	4629      	mov	r1, r5
 8000dd2:	4630      	mov	r0, r6
 8000dd4:	f7ff ffa1 	bl	8000d1a <__sfputs_r>
 8000dd8:	3001      	adds	r0, #1
 8000dda:	f000 80a7 	beq.w	8000f2c <_vfiprintf_r+0x1ec>
 8000dde:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000de0:	445a      	add	r2, fp
 8000de2:	9209      	str	r2, [sp, #36]	@ 0x24
 8000de4:	f89a 3000 	ldrb.w	r3, [sl]
 8000de8:	2b00      	cmp	r3, #0
 8000dea:	f000 809f 	beq.w	8000f2c <_vfiprintf_r+0x1ec>
 8000dee:	2300      	movs	r3, #0
 8000df0:	f04f 32ff 	mov.w	r2, #4294967295
 8000df4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000df8:	f10a 0a01 	add.w	sl, sl, #1
 8000dfc:	9304      	str	r3, [sp, #16]
 8000dfe:	9307      	str	r3, [sp, #28]
 8000e00:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000e04:	931a      	str	r3, [sp, #104]	@ 0x68
 8000e06:	4654      	mov	r4, sl
 8000e08:	2205      	movs	r2, #5
 8000e0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e0e:	4853      	ldr	r0, [pc, #332]	@ (8000f5c <_vfiprintf_r+0x21c>)
 8000e10:	f7ff f9fe 	bl	8000210 <memchr>
 8000e14:	9a04      	ldr	r2, [sp, #16]
 8000e16:	b9d8      	cbnz	r0, 8000e50 <_vfiprintf_r+0x110>
 8000e18:	06d1      	lsls	r1, r2, #27
 8000e1a:	bf44      	itt	mi
 8000e1c:	2320      	movmi	r3, #32
 8000e1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000e22:	0713      	lsls	r3, r2, #28
 8000e24:	bf44      	itt	mi
 8000e26:	232b      	movmi	r3, #43	@ 0x2b
 8000e28:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000e2c:	f89a 3000 	ldrb.w	r3, [sl]
 8000e30:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e32:	d015      	beq.n	8000e60 <_vfiprintf_r+0x120>
 8000e34:	9a07      	ldr	r2, [sp, #28]
 8000e36:	4654      	mov	r4, sl
 8000e38:	2000      	movs	r0, #0
 8000e3a:	f04f 0c0a 	mov.w	ip, #10
 8000e3e:	4621      	mov	r1, r4
 8000e40:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e44:	3b30      	subs	r3, #48	@ 0x30
 8000e46:	2b09      	cmp	r3, #9
 8000e48:	d94b      	bls.n	8000ee2 <_vfiprintf_r+0x1a2>
 8000e4a:	b1b0      	cbz	r0, 8000e7a <_vfiprintf_r+0x13a>
 8000e4c:	9207      	str	r2, [sp, #28]
 8000e4e:	e014      	b.n	8000e7a <_vfiprintf_r+0x13a>
 8000e50:	eba0 0308 	sub.w	r3, r0, r8
 8000e54:	fa09 f303 	lsl.w	r3, r9, r3
 8000e58:	4313      	orrs	r3, r2
 8000e5a:	9304      	str	r3, [sp, #16]
 8000e5c:	46a2      	mov	sl, r4
 8000e5e:	e7d2      	b.n	8000e06 <_vfiprintf_r+0xc6>
 8000e60:	9b03      	ldr	r3, [sp, #12]
 8000e62:	1d19      	adds	r1, r3, #4
 8000e64:	681b      	ldr	r3, [r3, #0]
 8000e66:	9103      	str	r1, [sp, #12]
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	bfbb      	ittet	lt
 8000e6c:	425b      	neglt	r3, r3
 8000e6e:	f042 0202 	orrlt.w	r2, r2, #2
 8000e72:	9307      	strge	r3, [sp, #28]
 8000e74:	9307      	strlt	r3, [sp, #28]
 8000e76:	bfb8      	it	lt
 8000e78:	9204      	strlt	r2, [sp, #16]
 8000e7a:	7823      	ldrb	r3, [r4, #0]
 8000e7c:	2b2e      	cmp	r3, #46	@ 0x2e
 8000e7e:	d10a      	bne.n	8000e96 <_vfiprintf_r+0x156>
 8000e80:	7863      	ldrb	r3, [r4, #1]
 8000e82:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e84:	d132      	bne.n	8000eec <_vfiprintf_r+0x1ac>
 8000e86:	9b03      	ldr	r3, [sp, #12]
 8000e88:	1d1a      	adds	r2, r3, #4
 8000e8a:	681b      	ldr	r3, [r3, #0]
 8000e8c:	9203      	str	r2, [sp, #12]
 8000e8e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e92:	3402      	adds	r4, #2
 8000e94:	9305      	str	r3, [sp, #20]
 8000e96:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000f60 <_vfiprintf_r+0x220>
 8000e9a:	7821      	ldrb	r1, [r4, #0]
 8000e9c:	2203      	movs	r2, #3
 8000e9e:	4650      	mov	r0, sl
 8000ea0:	f7ff f9b6 	bl	8000210 <memchr>
 8000ea4:	b138      	cbz	r0, 8000eb6 <_vfiprintf_r+0x176>
 8000ea6:	9b04      	ldr	r3, [sp, #16]
 8000ea8:	eba0 000a 	sub.w	r0, r0, sl
 8000eac:	2240      	movs	r2, #64	@ 0x40
 8000eae:	4082      	lsls	r2, r0
 8000eb0:	4313      	orrs	r3, r2
 8000eb2:	3401      	adds	r4, #1
 8000eb4:	9304      	str	r3, [sp, #16]
 8000eb6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000eba:	482a      	ldr	r0, [pc, #168]	@ (8000f64 <_vfiprintf_r+0x224>)
 8000ebc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000ec0:	2206      	movs	r2, #6
 8000ec2:	f7ff f9a5 	bl	8000210 <memchr>
 8000ec6:	2800      	cmp	r0, #0
 8000ec8:	d03f      	beq.n	8000f4a <_vfiprintf_r+0x20a>
 8000eca:	4b27      	ldr	r3, [pc, #156]	@ (8000f68 <_vfiprintf_r+0x228>)
 8000ecc:	bb1b      	cbnz	r3, 8000f16 <_vfiprintf_r+0x1d6>
 8000ece:	9b03      	ldr	r3, [sp, #12]
 8000ed0:	3307      	adds	r3, #7
 8000ed2:	f023 0307 	bic.w	r3, r3, #7
 8000ed6:	3308      	adds	r3, #8
 8000ed8:	9303      	str	r3, [sp, #12]
 8000eda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000edc:	443b      	add	r3, r7
 8000ede:	9309      	str	r3, [sp, #36]	@ 0x24
 8000ee0:	e76a      	b.n	8000db8 <_vfiprintf_r+0x78>
 8000ee2:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ee6:	460c      	mov	r4, r1
 8000ee8:	2001      	movs	r0, #1
 8000eea:	e7a8      	b.n	8000e3e <_vfiprintf_r+0xfe>
 8000eec:	2300      	movs	r3, #0
 8000eee:	3401      	adds	r4, #1
 8000ef0:	9305      	str	r3, [sp, #20]
 8000ef2:	4619      	mov	r1, r3
 8000ef4:	f04f 0c0a 	mov.w	ip, #10
 8000ef8:	4620      	mov	r0, r4
 8000efa:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000efe:	3a30      	subs	r2, #48	@ 0x30
 8000f00:	2a09      	cmp	r2, #9
 8000f02:	d903      	bls.n	8000f0c <_vfiprintf_r+0x1cc>
 8000f04:	2b00      	cmp	r3, #0
 8000f06:	d0c6      	beq.n	8000e96 <_vfiprintf_r+0x156>
 8000f08:	9105      	str	r1, [sp, #20]
 8000f0a:	e7c4      	b.n	8000e96 <_vfiprintf_r+0x156>
 8000f0c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000f10:	4604      	mov	r4, r0
 8000f12:	2301      	movs	r3, #1
 8000f14:	e7f0      	b.n	8000ef8 <_vfiprintf_r+0x1b8>
 8000f16:	ab03      	add	r3, sp, #12
 8000f18:	9300      	str	r3, [sp, #0]
 8000f1a:	462a      	mov	r2, r5
 8000f1c:	4b13      	ldr	r3, [pc, #76]	@ (8000f6c <_vfiprintf_r+0x22c>)
 8000f1e:	a904      	add	r1, sp, #16
 8000f20:	4630      	mov	r0, r6
 8000f22:	f3af 8000 	nop.w
 8000f26:	4607      	mov	r7, r0
 8000f28:	1c78      	adds	r0, r7, #1
 8000f2a:	d1d6      	bne.n	8000eda <_vfiprintf_r+0x19a>
 8000f2c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000f2e:	07d9      	lsls	r1, r3, #31
 8000f30:	d405      	bmi.n	8000f3e <_vfiprintf_r+0x1fe>
 8000f32:	89ab      	ldrh	r3, [r5, #12]
 8000f34:	059a      	lsls	r2, r3, #22
 8000f36:	d402      	bmi.n	8000f3e <_vfiprintf_r+0x1fe>
 8000f38:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000f3a:	f7ff fddf 	bl	8000afc <__retarget_lock_release_recursive>
 8000f3e:	89ab      	ldrh	r3, [r5, #12]
 8000f40:	065b      	lsls	r3, r3, #25
 8000f42:	f53f af1f 	bmi.w	8000d84 <_vfiprintf_r+0x44>
 8000f46:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000f48:	e71e      	b.n	8000d88 <_vfiprintf_r+0x48>
 8000f4a:	ab03      	add	r3, sp, #12
 8000f4c:	9300      	str	r3, [sp, #0]
 8000f4e:	462a      	mov	r2, r5
 8000f50:	4b06      	ldr	r3, [pc, #24]	@ (8000f6c <_vfiprintf_r+0x22c>)
 8000f52:	a904      	add	r1, sp, #16
 8000f54:	4630      	mov	r0, r6
 8000f56:	f000 f879 	bl	800104c <_printf_i>
 8000f5a:	e7e4      	b.n	8000f26 <_vfiprintf_r+0x1e6>
 8000f5c:	0800164d 	.word	0x0800164d
 8000f60:	08001653 	.word	0x08001653
 8000f64:	08001657 	.word	0x08001657
 8000f68:	00000000 	.word	0x00000000
 8000f6c:	08000d1b 	.word	0x08000d1b

08000f70 <_printf_common>:
 8000f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f74:	4616      	mov	r6, r2
 8000f76:	4698      	mov	r8, r3
 8000f78:	688a      	ldr	r2, [r1, #8]
 8000f7a:	690b      	ldr	r3, [r1, #16]
 8000f7c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000f80:	4293      	cmp	r3, r2
 8000f82:	bfb8      	it	lt
 8000f84:	4613      	movlt	r3, r2
 8000f86:	6033      	str	r3, [r6, #0]
 8000f88:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000f8c:	4607      	mov	r7, r0
 8000f8e:	460c      	mov	r4, r1
 8000f90:	b10a      	cbz	r2, 8000f96 <_printf_common+0x26>
 8000f92:	3301      	adds	r3, #1
 8000f94:	6033      	str	r3, [r6, #0]
 8000f96:	6823      	ldr	r3, [r4, #0]
 8000f98:	0699      	lsls	r1, r3, #26
 8000f9a:	bf42      	ittt	mi
 8000f9c:	6833      	ldrmi	r3, [r6, #0]
 8000f9e:	3302      	addmi	r3, #2
 8000fa0:	6033      	strmi	r3, [r6, #0]
 8000fa2:	6825      	ldr	r5, [r4, #0]
 8000fa4:	f015 0506 	ands.w	r5, r5, #6
 8000fa8:	d106      	bne.n	8000fb8 <_printf_common+0x48>
 8000faa:	f104 0a19 	add.w	sl, r4, #25
 8000fae:	68e3      	ldr	r3, [r4, #12]
 8000fb0:	6832      	ldr	r2, [r6, #0]
 8000fb2:	1a9b      	subs	r3, r3, r2
 8000fb4:	42ab      	cmp	r3, r5
 8000fb6:	dc26      	bgt.n	8001006 <_printf_common+0x96>
 8000fb8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000fbc:	6822      	ldr	r2, [r4, #0]
 8000fbe:	3b00      	subs	r3, #0
 8000fc0:	bf18      	it	ne
 8000fc2:	2301      	movne	r3, #1
 8000fc4:	0692      	lsls	r2, r2, #26
 8000fc6:	d42b      	bmi.n	8001020 <_printf_common+0xb0>
 8000fc8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000fcc:	4641      	mov	r1, r8
 8000fce:	4638      	mov	r0, r7
 8000fd0:	47c8      	blx	r9
 8000fd2:	3001      	adds	r0, #1
 8000fd4:	d01e      	beq.n	8001014 <_printf_common+0xa4>
 8000fd6:	6823      	ldr	r3, [r4, #0]
 8000fd8:	6922      	ldr	r2, [r4, #16]
 8000fda:	f003 0306 	and.w	r3, r3, #6
 8000fde:	2b04      	cmp	r3, #4
 8000fe0:	bf02      	ittt	eq
 8000fe2:	68e5      	ldreq	r5, [r4, #12]
 8000fe4:	6833      	ldreq	r3, [r6, #0]
 8000fe6:	1aed      	subeq	r5, r5, r3
 8000fe8:	68a3      	ldr	r3, [r4, #8]
 8000fea:	bf0c      	ite	eq
 8000fec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ff0:	2500      	movne	r5, #0
 8000ff2:	4293      	cmp	r3, r2
 8000ff4:	bfc4      	itt	gt
 8000ff6:	1a9b      	subgt	r3, r3, r2
 8000ff8:	18ed      	addgt	r5, r5, r3
 8000ffa:	2600      	movs	r6, #0
 8000ffc:	341a      	adds	r4, #26
 8000ffe:	42b5      	cmp	r5, r6
 8001000:	d11a      	bne.n	8001038 <_printf_common+0xc8>
 8001002:	2000      	movs	r0, #0
 8001004:	e008      	b.n	8001018 <_printf_common+0xa8>
 8001006:	2301      	movs	r3, #1
 8001008:	4652      	mov	r2, sl
 800100a:	4641      	mov	r1, r8
 800100c:	4638      	mov	r0, r7
 800100e:	47c8      	blx	r9
 8001010:	3001      	adds	r0, #1
 8001012:	d103      	bne.n	800101c <_printf_common+0xac>
 8001014:	f04f 30ff 	mov.w	r0, #4294967295
 8001018:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800101c:	3501      	adds	r5, #1
 800101e:	e7c6      	b.n	8000fae <_printf_common+0x3e>
 8001020:	18e1      	adds	r1, r4, r3
 8001022:	1c5a      	adds	r2, r3, #1
 8001024:	2030      	movs	r0, #48	@ 0x30
 8001026:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800102a:	4422      	add	r2, r4
 800102c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001030:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001034:	3302      	adds	r3, #2
 8001036:	e7c7      	b.n	8000fc8 <_printf_common+0x58>
 8001038:	2301      	movs	r3, #1
 800103a:	4622      	mov	r2, r4
 800103c:	4641      	mov	r1, r8
 800103e:	4638      	mov	r0, r7
 8001040:	47c8      	blx	r9
 8001042:	3001      	adds	r0, #1
 8001044:	d0e6      	beq.n	8001014 <_printf_common+0xa4>
 8001046:	3601      	adds	r6, #1
 8001048:	e7d9      	b.n	8000ffe <_printf_common+0x8e>
	...

0800104c <_printf_i>:
 800104c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001050:	7e0f      	ldrb	r7, [r1, #24]
 8001052:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001054:	2f78      	cmp	r7, #120	@ 0x78
 8001056:	4691      	mov	r9, r2
 8001058:	4680      	mov	r8, r0
 800105a:	460c      	mov	r4, r1
 800105c:	469a      	mov	sl, r3
 800105e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001062:	d807      	bhi.n	8001074 <_printf_i+0x28>
 8001064:	2f62      	cmp	r7, #98	@ 0x62
 8001066:	d80a      	bhi.n	800107e <_printf_i+0x32>
 8001068:	2f00      	cmp	r7, #0
 800106a:	f000 80d2 	beq.w	8001212 <_printf_i+0x1c6>
 800106e:	2f58      	cmp	r7, #88	@ 0x58
 8001070:	f000 80b9 	beq.w	80011e6 <_printf_i+0x19a>
 8001074:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001078:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800107c:	e03a      	b.n	80010f4 <_printf_i+0xa8>
 800107e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001082:	2b15      	cmp	r3, #21
 8001084:	d8f6      	bhi.n	8001074 <_printf_i+0x28>
 8001086:	a101      	add	r1, pc, #4	@ (adr r1, 800108c <_printf_i+0x40>)
 8001088:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800108c:	080010e5 	.word	0x080010e5
 8001090:	080010f9 	.word	0x080010f9
 8001094:	08001075 	.word	0x08001075
 8001098:	08001075 	.word	0x08001075
 800109c:	08001075 	.word	0x08001075
 80010a0:	08001075 	.word	0x08001075
 80010a4:	080010f9 	.word	0x080010f9
 80010a8:	08001075 	.word	0x08001075
 80010ac:	08001075 	.word	0x08001075
 80010b0:	08001075 	.word	0x08001075
 80010b4:	08001075 	.word	0x08001075
 80010b8:	080011f9 	.word	0x080011f9
 80010bc:	08001123 	.word	0x08001123
 80010c0:	080011b3 	.word	0x080011b3
 80010c4:	08001075 	.word	0x08001075
 80010c8:	08001075 	.word	0x08001075
 80010cc:	0800121b 	.word	0x0800121b
 80010d0:	08001075 	.word	0x08001075
 80010d4:	08001123 	.word	0x08001123
 80010d8:	08001075 	.word	0x08001075
 80010dc:	08001075 	.word	0x08001075
 80010e0:	080011bb 	.word	0x080011bb
 80010e4:	6833      	ldr	r3, [r6, #0]
 80010e6:	1d1a      	adds	r2, r3, #4
 80010e8:	681b      	ldr	r3, [r3, #0]
 80010ea:	6032      	str	r2, [r6, #0]
 80010ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80010f0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80010f4:	2301      	movs	r3, #1
 80010f6:	e09d      	b.n	8001234 <_printf_i+0x1e8>
 80010f8:	6833      	ldr	r3, [r6, #0]
 80010fa:	6820      	ldr	r0, [r4, #0]
 80010fc:	1d19      	adds	r1, r3, #4
 80010fe:	6031      	str	r1, [r6, #0]
 8001100:	0606      	lsls	r6, r0, #24
 8001102:	d501      	bpl.n	8001108 <_printf_i+0xbc>
 8001104:	681d      	ldr	r5, [r3, #0]
 8001106:	e003      	b.n	8001110 <_printf_i+0xc4>
 8001108:	0645      	lsls	r5, r0, #25
 800110a:	d5fb      	bpl.n	8001104 <_printf_i+0xb8>
 800110c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001110:	2d00      	cmp	r5, #0
 8001112:	da03      	bge.n	800111c <_printf_i+0xd0>
 8001114:	232d      	movs	r3, #45	@ 0x2d
 8001116:	426d      	negs	r5, r5
 8001118:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800111c:	4859      	ldr	r0, [pc, #356]	@ (8001284 <_printf_i+0x238>)
 800111e:	230a      	movs	r3, #10
 8001120:	e011      	b.n	8001146 <_printf_i+0xfa>
 8001122:	6821      	ldr	r1, [r4, #0]
 8001124:	6833      	ldr	r3, [r6, #0]
 8001126:	0608      	lsls	r0, r1, #24
 8001128:	f853 5b04 	ldr.w	r5, [r3], #4
 800112c:	d402      	bmi.n	8001134 <_printf_i+0xe8>
 800112e:	0649      	lsls	r1, r1, #25
 8001130:	bf48      	it	mi
 8001132:	b2ad      	uxthmi	r5, r5
 8001134:	2f6f      	cmp	r7, #111	@ 0x6f
 8001136:	4853      	ldr	r0, [pc, #332]	@ (8001284 <_printf_i+0x238>)
 8001138:	6033      	str	r3, [r6, #0]
 800113a:	bf14      	ite	ne
 800113c:	230a      	movne	r3, #10
 800113e:	2308      	moveq	r3, #8
 8001140:	2100      	movs	r1, #0
 8001142:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001146:	6866      	ldr	r6, [r4, #4]
 8001148:	60a6      	str	r6, [r4, #8]
 800114a:	2e00      	cmp	r6, #0
 800114c:	bfa2      	ittt	ge
 800114e:	6821      	ldrge	r1, [r4, #0]
 8001150:	f021 0104 	bicge.w	r1, r1, #4
 8001154:	6021      	strge	r1, [r4, #0]
 8001156:	b90d      	cbnz	r5, 800115c <_printf_i+0x110>
 8001158:	2e00      	cmp	r6, #0
 800115a:	d04b      	beq.n	80011f4 <_printf_i+0x1a8>
 800115c:	4616      	mov	r6, r2
 800115e:	fbb5 f1f3 	udiv	r1, r5, r3
 8001162:	fb03 5711 	mls	r7, r3, r1, r5
 8001166:	5dc7      	ldrb	r7, [r0, r7]
 8001168:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800116c:	462f      	mov	r7, r5
 800116e:	42bb      	cmp	r3, r7
 8001170:	460d      	mov	r5, r1
 8001172:	d9f4      	bls.n	800115e <_printf_i+0x112>
 8001174:	2b08      	cmp	r3, #8
 8001176:	d10b      	bne.n	8001190 <_printf_i+0x144>
 8001178:	6823      	ldr	r3, [r4, #0]
 800117a:	07df      	lsls	r7, r3, #31
 800117c:	d508      	bpl.n	8001190 <_printf_i+0x144>
 800117e:	6923      	ldr	r3, [r4, #16]
 8001180:	6861      	ldr	r1, [r4, #4]
 8001182:	4299      	cmp	r1, r3
 8001184:	bfde      	ittt	le
 8001186:	2330      	movle	r3, #48	@ 0x30
 8001188:	f806 3c01 	strble.w	r3, [r6, #-1]
 800118c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001190:	1b92      	subs	r2, r2, r6
 8001192:	6122      	str	r2, [r4, #16]
 8001194:	f8cd a000 	str.w	sl, [sp]
 8001198:	464b      	mov	r3, r9
 800119a:	aa03      	add	r2, sp, #12
 800119c:	4621      	mov	r1, r4
 800119e:	4640      	mov	r0, r8
 80011a0:	f7ff fee6 	bl	8000f70 <_printf_common>
 80011a4:	3001      	adds	r0, #1
 80011a6:	d14a      	bne.n	800123e <_printf_i+0x1f2>
 80011a8:	f04f 30ff 	mov.w	r0, #4294967295
 80011ac:	b004      	add	sp, #16
 80011ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011b2:	6823      	ldr	r3, [r4, #0]
 80011b4:	f043 0320 	orr.w	r3, r3, #32
 80011b8:	6023      	str	r3, [r4, #0]
 80011ba:	4833      	ldr	r0, [pc, #204]	@ (8001288 <_printf_i+0x23c>)
 80011bc:	2778      	movs	r7, #120	@ 0x78
 80011be:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80011c2:	6823      	ldr	r3, [r4, #0]
 80011c4:	6831      	ldr	r1, [r6, #0]
 80011c6:	061f      	lsls	r7, r3, #24
 80011c8:	f851 5b04 	ldr.w	r5, [r1], #4
 80011cc:	d402      	bmi.n	80011d4 <_printf_i+0x188>
 80011ce:	065f      	lsls	r7, r3, #25
 80011d0:	bf48      	it	mi
 80011d2:	b2ad      	uxthmi	r5, r5
 80011d4:	6031      	str	r1, [r6, #0]
 80011d6:	07d9      	lsls	r1, r3, #31
 80011d8:	bf44      	itt	mi
 80011da:	f043 0320 	orrmi.w	r3, r3, #32
 80011de:	6023      	strmi	r3, [r4, #0]
 80011e0:	b11d      	cbz	r5, 80011ea <_printf_i+0x19e>
 80011e2:	2310      	movs	r3, #16
 80011e4:	e7ac      	b.n	8001140 <_printf_i+0xf4>
 80011e6:	4827      	ldr	r0, [pc, #156]	@ (8001284 <_printf_i+0x238>)
 80011e8:	e7e9      	b.n	80011be <_printf_i+0x172>
 80011ea:	6823      	ldr	r3, [r4, #0]
 80011ec:	f023 0320 	bic.w	r3, r3, #32
 80011f0:	6023      	str	r3, [r4, #0]
 80011f2:	e7f6      	b.n	80011e2 <_printf_i+0x196>
 80011f4:	4616      	mov	r6, r2
 80011f6:	e7bd      	b.n	8001174 <_printf_i+0x128>
 80011f8:	6833      	ldr	r3, [r6, #0]
 80011fa:	6825      	ldr	r5, [r4, #0]
 80011fc:	6961      	ldr	r1, [r4, #20]
 80011fe:	1d18      	adds	r0, r3, #4
 8001200:	6030      	str	r0, [r6, #0]
 8001202:	062e      	lsls	r6, r5, #24
 8001204:	681b      	ldr	r3, [r3, #0]
 8001206:	d501      	bpl.n	800120c <_printf_i+0x1c0>
 8001208:	6019      	str	r1, [r3, #0]
 800120a:	e002      	b.n	8001212 <_printf_i+0x1c6>
 800120c:	0668      	lsls	r0, r5, #25
 800120e:	d5fb      	bpl.n	8001208 <_printf_i+0x1bc>
 8001210:	8019      	strh	r1, [r3, #0]
 8001212:	2300      	movs	r3, #0
 8001214:	6123      	str	r3, [r4, #16]
 8001216:	4616      	mov	r6, r2
 8001218:	e7bc      	b.n	8001194 <_printf_i+0x148>
 800121a:	6833      	ldr	r3, [r6, #0]
 800121c:	1d1a      	adds	r2, r3, #4
 800121e:	6032      	str	r2, [r6, #0]
 8001220:	681e      	ldr	r6, [r3, #0]
 8001222:	6862      	ldr	r2, [r4, #4]
 8001224:	2100      	movs	r1, #0
 8001226:	4630      	mov	r0, r6
 8001228:	f7fe fff2 	bl	8000210 <memchr>
 800122c:	b108      	cbz	r0, 8001232 <_printf_i+0x1e6>
 800122e:	1b80      	subs	r0, r0, r6
 8001230:	6060      	str	r0, [r4, #4]
 8001232:	6863      	ldr	r3, [r4, #4]
 8001234:	6123      	str	r3, [r4, #16]
 8001236:	2300      	movs	r3, #0
 8001238:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800123c:	e7aa      	b.n	8001194 <_printf_i+0x148>
 800123e:	6923      	ldr	r3, [r4, #16]
 8001240:	4632      	mov	r2, r6
 8001242:	4649      	mov	r1, r9
 8001244:	4640      	mov	r0, r8
 8001246:	47d0      	blx	sl
 8001248:	3001      	adds	r0, #1
 800124a:	d0ad      	beq.n	80011a8 <_printf_i+0x15c>
 800124c:	6823      	ldr	r3, [r4, #0]
 800124e:	079b      	lsls	r3, r3, #30
 8001250:	d413      	bmi.n	800127a <_printf_i+0x22e>
 8001252:	68e0      	ldr	r0, [r4, #12]
 8001254:	9b03      	ldr	r3, [sp, #12]
 8001256:	4298      	cmp	r0, r3
 8001258:	bfb8      	it	lt
 800125a:	4618      	movlt	r0, r3
 800125c:	e7a6      	b.n	80011ac <_printf_i+0x160>
 800125e:	2301      	movs	r3, #1
 8001260:	4632      	mov	r2, r6
 8001262:	4649      	mov	r1, r9
 8001264:	4640      	mov	r0, r8
 8001266:	47d0      	blx	sl
 8001268:	3001      	adds	r0, #1
 800126a:	d09d      	beq.n	80011a8 <_printf_i+0x15c>
 800126c:	3501      	adds	r5, #1
 800126e:	68e3      	ldr	r3, [r4, #12]
 8001270:	9903      	ldr	r1, [sp, #12]
 8001272:	1a5b      	subs	r3, r3, r1
 8001274:	42ab      	cmp	r3, r5
 8001276:	dcf2      	bgt.n	800125e <_printf_i+0x212>
 8001278:	e7eb      	b.n	8001252 <_printf_i+0x206>
 800127a:	2500      	movs	r5, #0
 800127c:	f104 0619 	add.w	r6, r4, #25
 8001280:	e7f5      	b.n	800126e <_printf_i+0x222>
 8001282:	bf00      	nop
 8001284:	0800165e 	.word	0x0800165e
 8001288:	0800166f 	.word	0x0800166f

0800128c <__sflush_r>:
 800128c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001292:	0716      	lsls	r6, r2, #28
 8001294:	4605      	mov	r5, r0
 8001296:	460c      	mov	r4, r1
 8001298:	d454      	bmi.n	8001344 <__sflush_r+0xb8>
 800129a:	684b      	ldr	r3, [r1, #4]
 800129c:	2b00      	cmp	r3, #0
 800129e:	dc02      	bgt.n	80012a6 <__sflush_r+0x1a>
 80012a0:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	dd48      	ble.n	8001338 <__sflush_r+0xac>
 80012a6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80012a8:	2e00      	cmp	r6, #0
 80012aa:	d045      	beq.n	8001338 <__sflush_r+0xac>
 80012ac:	2300      	movs	r3, #0
 80012ae:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80012b2:	682f      	ldr	r7, [r5, #0]
 80012b4:	6a21      	ldr	r1, [r4, #32]
 80012b6:	602b      	str	r3, [r5, #0]
 80012b8:	d030      	beq.n	800131c <__sflush_r+0x90>
 80012ba:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80012bc:	89a3      	ldrh	r3, [r4, #12]
 80012be:	0759      	lsls	r1, r3, #29
 80012c0:	d505      	bpl.n	80012ce <__sflush_r+0x42>
 80012c2:	6863      	ldr	r3, [r4, #4]
 80012c4:	1ad2      	subs	r2, r2, r3
 80012c6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80012c8:	b10b      	cbz	r3, 80012ce <__sflush_r+0x42>
 80012ca:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80012cc:	1ad2      	subs	r2, r2, r3
 80012ce:	2300      	movs	r3, #0
 80012d0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80012d2:	6a21      	ldr	r1, [r4, #32]
 80012d4:	4628      	mov	r0, r5
 80012d6:	47b0      	blx	r6
 80012d8:	1c43      	adds	r3, r0, #1
 80012da:	89a3      	ldrh	r3, [r4, #12]
 80012dc:	d106      	bne.n	80012ec <__sflush_r+0x60>
 80012de:	6829      	ldr	r1, [r5, #0]
 80012e0:	291d      	cmp	r1, #29
 80012e2:	d82b      	bhi.n	800133c <__sflush_r+0xb0>
 80012e4:	4a28      	ldr	r2, [pc, #160]	@ (8001388 <__sflush_r+0xfc>)
 80012e6:	410a      	asrs	r2, r1
 80012e8:	07d6      	lsls	r6, r2, #31
 80012ea:	d427      	bmi.n	800133c <__sflush_r+0xb0>
 80012ec:	2200      	movs	r2, #0
 80012ee:	6062      	str	r2, [r4, #4]
 80012f0:	04d9      	lsls	r1, r3, #19
 80012f2:	6922      	ldr	r2, [r4, #16]
 80012f4:	6022      	str	r2, [r4, #0]
 80012f6:	d504      	bpl.n	8001302 <__sflush_r+0x76>
 80012f8:	1c42      	adds	r2, r0, #1
 80012fa:	d101      	bne.n	8001300 <__sflush_r+0x74>
 80012fc:	682b      	ldr	r3, [r5, #0]
 80012fe:	b903      	cbnz	r3, 8001302 <__sflush_r+0x76>
 8001300:	6560      	str	r0, [r4, #84]	@ 0x54
 8001302:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001304:	602f      	str	r7, [r5, #0]
 8001306:	b1b9      	cbz	r1, 8001338 <__sflush_r+0xac>
 8001308:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800130c:	4299      	cmp	r1, r3
 800130e:	d002      	beq.n	8001316 <__sflush_r+0x8a>
 8001310:	4628      	mov	r0, r5
 8001312:	f7ff fbf5 	bl	8000b00 <_free_r>
 8001316:	2300      	movs	r3, #0
 8001318:	6363      	str	r3, [r4, #52]	@ 0x34
 800131a:	e00d      	b.n	8001338 <__sflush_r+0xac>
 800131c:	2301      	movs	r3, #1
 800131e:	4628      	mov	r0, r5
 8001320:	47b0      	blx	r6
 8001322:	4602      	mov	r2, r0
 8001324:	1c50      	adds	r0, r2, #1
 8001326:	d1c9      	bne.n	80012bc <__sflush_r+0x30>
 8001328:	682b      	ldr	r3, [r5, #0]
 800132a:	2b00      	cmp	r3, #0
 800132c:	d0c6      	beq.n	80012bc <__sflush_r+0x30>
 800132e:	2b1d      	cmp	r3, #29
 8001330:	d001      	beq.n	8001336 <__sflush_r+0xaa>
 8001332:	2b16      	cmp	r3, #22
 8001334:	d11d      	bne.n	8001372 <__sflush_r+0xe6>
 8001336:	602f      	str	r7, [r5, #0]
 8001338:	2000      	movs	r0, #0
 800133a:	e021      	b.n	8001380 <__sflush_r+0xf4>
 800133c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001340:	b21b      	sxth	r3, r3
 8001342:	e01a      	b.n	800137a <__sflush_r+0xee>
 8001344:	690f      	ldr	r7, [r1, #16]
 8001346:	2f00      	cmp	r7, #0
 8001348:	d0f6      	beq.n	8001338 <__sflush_r+0xac>
 800134a:	0793      	lsls	r3, r2, #30
 800134c:	680e      	ldr	r6, [r1, #0]
 800134e:	bf08      	it	eq
 8001350:	694b      	ldreq	r3, [r1, #20]
 8001352:	600f      	str	r7, [r1, #0]
 8001354:	bf18      	it	ne
 8001356:	2300      	movne	r3, #0
 8001358:	1bf6      	subs	r6, r6, r7
 800135a:	608b      	str	r3, [r1, #8]
 800135c:	2e00      	cmp	r6, #0
 800135e:	ddeb      	ble.n	8001338 <__sflush_r+0xac>
 8001360:	6a21      	ldr	r1, [r4, #32]
 8001362:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8001366:	4633      	mov	r3, r6
 8001368:	463a      	mov	r2, r7
 800136a:	4628      	mov	r0, r5
 800136c:	47e0      	blx	ip
 800136e:	2800      	cmp	r0, #0
 8001370:	dc07      	bgt.n	8001382 <__sflush_r+0xf6>
 8001372:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001376:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800137a:	81a3      	strh	r3, [r4, #12]
 800137c:	f04f 30ff 	mov.w	r0, #4294967295
 8001380:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001382:	4407      	add	r7, r0
 8001384:	1a36      	subs	r6, r6, r0
 8001386:	e7e9      	b.n	800135c <__sflush_r+0xd0>
 8001388:	dfbffffe 	.word	0xdfbffffe

0800138c <_fflush_r>:
 800138c:	b538      	push	{r3, r4, r5, lr}
 800138e:	690b      	ldr	r3, [r1, #16]
 8001390:	4605      	mov	r5, r0
 8001392:	460c      	mov	r4, r1
 8001394:	b913      	cbnz	r3, 800139c <_fflush_r+0x10>
 8001396:	2500      	movs	r5, #0
 8001398:	4628      	mov	r0, r5
 800139a:	bd38      	pop	{r3, r4, r5, pc}
 800139c:	b118      	cbz	r0, 80013a6 <_fflush_r+0x1a>
 800139e:	6a03      	ldr	r3, [r0, #32]
 80013a0:	b90b      	cbnz	r3, 80013a6 <_fflush_r+0x1a>
 80013a2:	f7ff f9b3 	bl	800070c <__sinit>
 80013a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d0f3      	beq.n	8001396 <_fflush_r+0xa>
 80013ae:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80013b0:	07d0      	lsls	r0, r2, #31
 80013b2:	d404      	bmi.n	80013be <_fflush_r+0x32>
 80013b4:	0599      	lsls	r1, r3, #22
 80013b6:	d402      	bmi.n	80013be <_fflush_r+0x32>
 80013b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80013ba:	f7ff fb9e 	bl	8000afa <__retarget_lock_acquire_recursive>
 80013be:	4628      	mov	r0, r5
 80013c0:	4621      	mov	r1, r4
 80013c2:	f7ff ff63 	bl	800128c <__sflush_r>
 80013c6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80013c8:	07da      	lsls	r2, r3, #31
 80013ca:	4605      	mov	r5, r0
 80013cc:	d4e4      	bmi.n	8001398 <_fflush_r+0xc>
 80013ce:	89a3      	ldrh	r3, [r4, #12]
 80013d0:	059b      	lsls	r3, r3, #22
 80013d2:	d4e1      	bmi.n	8001398 <_fflush_r+0xc>
 80013d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80013d6:	f7ff fb91 	bl	8000afc <__retarget_lock_release_recursive>
 80013da:	e7dd      	b.n	8001398 <_fflush_r+0xc>

080013dc <__swhatbuf_r>:
 80013dc:	b570      	push	{r4, r5, r6, lr}
 80013de:	460c      	mov	r4, r1
 80013e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013e4:	2900      	cmp	r1, #0
 80013e6:	b096      	sub	sp, #88	@ 0x58
 80013e8:	4615      	mov	r5, r2
 80013ea:	461e      	mov	r6, r3
 80013ec:	da0d      	bge.n	800140a <__swhatbuf_r+0x2e>
 80013ee:	89a3      	ldrh	r3, [r4, #12]
 80013f0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80013f4:	f04f 0100 	mov.w	r1, #0
 80013f8:	bf14      	ite	ne
 80013fa:	2340      	movne	r3, #64	@ 0x40
 80013fc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001400:	2000      	movs	r0, #0
 8001402:	6031      	str	r1, [r6, #0]
 8001404:	602b      	str	r3, [r5, #0]
 8001406:	b016      	add	sp, #88	@ 0x58
 8001408:	bd70      	pop	{r4, r5, r6, pc}
 800140a:	466a      	mov	r2, sp
 800140c:	f000 f848 	bl	80014a0 <_fstat_r>
 8001410:	2800      	cmp	r0, #0
 8001412:	dbec      	blt.n	80013ee <__swhatbuf_r+0x12>
 8001414:	9901      	ldr	r1, [sp, #4]
 8001416:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800141a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800141e:	4259      	negs	r1, r3
 8001420:	4159      	adcs	r1, r3
 8001422:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001426:	e7eb      	b.n	8001400 <__swhatbuf_r+0x24>

08001428 <__smakebuf_r>:
 8001428:	898b      	ldrh	r3, [r1, #12]
 800142a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800142c:	079d      	lsls	r5, r3, #30
 800142e:	4606      	mov	r6, r0
 8001430:	460c      	mov	r4, r1
 8001432:	d507      	bpl.n	8001444 <__smakebuf_r+0x1c>
 8001434:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001438:	6023      	str	r3, [r4, #0]
 800143a:	6123      	str	r3, [r4, #16]
 800143c:	2301      	movs	r3, #1
 800143e:	6163      	str	r3, [r4, #20]
 8001440:	b003      	add	sp, #12
 8001442:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001444:	ab01      	add	r3, sp, #4
 8001446:	466a      	mov	r2, sp
 8001448:	f7ff ffc8 	bl	80013dc <__swhatbuf_r>
 800144c:	9f00      	ldr	r7, [sp, #0]
 800144e:	4605      	mov	r5, r0
 8001450:	4639      	mov	r1, r7
 8001452:	4630      	mov	r0, r6
 8001454:	f7ff fbc0 	bl	8000bd8 <_malloc_r>
 8001458:	b948      	cbnz	r0, 800146e <__smakebuf_r+0x46>
 800145a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800145e:	059a      	lsls	r2, r3, #22
 8001460:	d4ee      	bmi.n	8001440 <__smakebuf_r+0x18>
 8001462:	f023 0303 	bic.w	r3, r3, #3
 8001466:	f043 0302 	orr.w	r3, r3, #2
 800146a:	81a3      	strh	r3, [r4, #12]
 800146c:	e7e2      	b.n	8001434 <__smakebuf_r+0xc>
 800146e:	89a3      	ldrh	r3, [r4, #12]
 8001470:	6020      	str	r0, [r4, #0]
 8001472:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001476:	81a3      	strh	r3, [r4, #12]
 8001478:	9b01      	ldr	r3, [sp, #4]
 800147a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800147e:	b15b      	cbz	r3, 8001498 <__smakebuf_r+0x70>
 8001480:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001484:	4630      	mov	r0, r6
 8001486:	f000 f81d 	bl	80014c4 <_isatty_r>
 800148a:	b128      	cbz	r0, 8001498 <__smakebuf_r+0x70>
 800148c:	89a3      	ldrh	r3, [r4, #12]
 800148e:	f023 0303 	bic.w	r3, r3, #3
 8001492:	f043 0301 	orr.w	r3, r3, #1
 8001496:	81a3      	strh	r3, [r4, #12]
 8001498:	89a3      	ldrh	r3, [r4, #12]
 800149a:	431d      	orrs	r5, r3
 800149c:	81a5      	strh	r5, [r4, #12]
 800149e:	e7cf      	b.n	8001440 <__smakebuf_r+0x18>

080014a0 <_fstat_r>:
 80014a0:	b538      	push	{r3, r4, r5, lr}
 80014a2:	4d07      	ldr	r5, [pc, #28]	@ (80014c0 <_fstat_r+0x20>)
 80014a4:	2300      	movs	r3, #0
 80014a6:	4604      	mov	r4, r0
 80014a8:	4608      	mov	r0, r1
 80014aa:	4611      	mov	r1, r2
 80014ac:	602b      	str	r3, [r5, #0]
 80014ae:	f7ff f81b 	bl	80004e8 <_fstat>
 80014b2:	1c43      	adds	r3, r0, #1
 80014b4:	d102      	bne.n	80014bc <_fstat_r+0x1c>
 80014b6:	682b      	ldr	r3, [r5, #0]
 80014b8:	b103      	cbz	r3, 80014bc <_fstat_r+0x1c>
 80014ba:	6023      	str	r3, [r4, #0]
 80014bc:	bd38      	pop	{r3, r4, r5, pc}
 80014be:	bf00      	nop
 80014c0:	200001b8 	.word	0x200001b8

080014c4 <_isatty_r>:
 80014c4:	b538      	push	{r3, r4, r5, lr}
 80014c6:	4d06      	ldr	r5, [pc, #24]	@ (80014e0 <_isatty_r+0x1c>)
 80014c8:	2300      	movs	r3, #0
 80014ca:	4604      	mov	r4, r0
 80014cc:	4608      	mov	r0, r1
 80014ce:	602b      	str	r3, [r5, #0]
 80014d0:	f7ff f819 	bl	8000506 <_isatty>
 80014d4:	1c43      	adds	r3, r0, #1
 80014d6:	d102      	bne.n	80014de <_isatty_r+0x1a>
 80014d8:	682b      	ldr	r3, [r5, #0]
 80014da:	b103      	cbz	r3, 80014de <_isatty_r+0x1a>
 80014dc:	6023      	str	r3, [r4, #0]
 80014de:	bd38      	pop	{r3, r4, r5, pc}
 80014e0:	200001b8 	.word	0x200001b8

080014e4 <_sbrk_r>:
 80014e4:	b538      	push	{r3, r4, r5, lr}
 80014e6:	4d06      	ldr	r5, [pc, #24]	@ (8001500 <_sbrk_r+0x1c>)
 80014e8:	2300      	movs	r3, #0
 80014ea:	4604      	mov	r4, r0
 80014ec:	4608      	mov	r0, r1
 80014ee:	602b      	str	r3, [r5, #0]
 80014f0:	f7ff f820 	bl	8000534 <_sbrk>
 80014f4:	1c43      	adds	r3, r0, #1
 80014f6:	d102      	bne.n	80014fe <_sbrk_r+0x1a>
 80014f8:	682b      	ldr	r3, [r5, #0]
 80014fa:	b103      	cbz	r3, 80014fe <_sbrk_r+0x1a>
 80014fc:	6023      	str	r3, [r4, #0]
 80014fe:	bd38      	pop	{r3, r4, r5, pc}
 8001500:	200001b8 	.word	0x200001b8

08001504 <_init>:
 8001504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001506:	bf00      	nop
 8001508:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800150a:	bc08      	pop	{r3}
 800150c:	469e      	mov	lr, r3
 800150e:	4770      	bx	lr

08001510 <_fini>:
 8001510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001512:	bf00      	nop
 8001514:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001516:	bc08      	pop	{r3}
 8001518:	469e      	mov	lr, r3
 800151a:	4770      	bx	lr
